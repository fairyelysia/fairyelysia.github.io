<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub-Cli 的安装与使用</title>
    <url>/2022/01/09/GitHub-Cli%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="GitHub-Cli-的安装与使用"><a href="#GitHub-Cli-的安装与使用" class="headerlink" title="GitHub-Cli 的安装与使用"></a>GitHub-Cli 的安装与使用</h1><p><strong>Take GitHub to the command line!</strong><br><img data-src="https://s4.ax1x.com/2022/01/08/7iGY1P.png" alt="GitHub-Cli"><br>想必<code>GitHub</code>大家都不陌生。一开始我也只是偶尔上去安装个软件啥的，但是自从几个月前我接触到用<code>GitHub</code>作为服务器和二级域名来做网站后，我访问<code>GitHub</code>也就更加频繁了。每天都要重复登陆、收验证码实在是有些浪费时间了，再加上这么慢的网速，于是我开始使用<code>Git+Hexo</code>本地生成+上传的模式。可用了一段时间后，我却发现有比<code>Git</code>更快、更强、更高大上的终端命令行——<strong><code>GitHub-Cli</code></strong>(以下也简称gh)。</p>
<span id="more"></span>
<h2 id="一-Gh简介"><a href="#一-Gh简介" class="headerlink" title="一.Gh简介"></a>一.Gh简介</h2><p><code>GitHub-Cli</code>,也就是<code>GitHub</code><em>最新推出的命令行终端</em>，具有快速、高效等特性，给万千码农带来了极大的福利—— <u>更快地访问、克隆仓库，更快的提交更新，更高效的处理<code>issue</code>和<code>PR</code>。</u> 曾经必须要到<code>GitHub</code>网页端才能修改的元信息，现在在<code>CMD</code>上就可以操作。<br>十几天前<code>gh</code>已经推出了最新的<code>2.4.0</code>版本。这款终端使用<code>GoLang</code>编写，配合一定的批处理文件就可以完成一切任务。最新数据显示该仓库已经有了<strong>2万6千个Star</strong>。<br><a href="https://cli.github.com/">项目官网</a>  <a href="https://github.com/cli/cli/">项目源码地址</a></p>
<h2 id="二-Gh的安装"><a href="#二-Gh的安装" class="headerlink" title="二.Gh的安装"></a>二.Gh的安装</h2><p>安装其实很简单，毕竟它不是<code>GUI</code>，只是一个类似<code>Bash</code>的东东嘛。下面以<em>Windows</em>为例：</p>
<h3 id="1-安装包安装（通用）"><a href="#1-安装包安装（通用）" class="headerlink" title="1. 安装包安装（通用）"></a>1. 安装包安装（通用）</h3><p>访问<a href="https://github.com/cli/cli/releases/tag/v2.4.0">这个链接</a>，找到<code>Assets</code>。然后你会找到<strong>很多很多的安装包</strong>，在比较下面的地方有一个<code>gh_2.4.0_windows_amd64.msi</code>的安装文件（<em>貌似是64位的</em>）。尝试下载它……<br>下载下来以后，直接运行安装即可。安装完成后，打开<code>CMD</code>运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gh --version  </span><br></pre></td></tr></table></figure>
<p>如果<code>CMD</code>返回给你有用的信息（<em>而不是“gh“不是内部或外部命令，也不是可运行的程序或批处理文件。</em>），那么说明你已经安装好了！</p>
<h3 id="2-Chocolatey安装"><a href="#2-Chocolatey安装" class="headerlink" title="2. Chocolatey安装"></a>2. <code>Chocolatey</code>安装</h3><p>使用过<code>Chocolatey</code>的同志直接运行下面的命令！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ clist gh</span><br><span class="line">$ choco install gh</span><br></pre></td></tr></table></figure>
<p>嗯……搞定了！</p>
<h2 id="三-Gh登录时刻！"><a href="#三-Gh登录时刻！" class="headerlink" title="三. Gh登录时刻！"></a>三. Gh登录时刻！</h2><p>准备好你的GitHub账号，我们终于要登录了！登录也很简单，只要运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gh auth login  //这很简单吧！</span><br></pre></td></tr></table></figure>
<p>然后就会有下面的提示语：</p>
<p><img data-src="https://s4.ax1x.com/2022/01/08/7iGJpt.png" alt="Auth_Login"></p>
<p><em>图片来源于网络……所以不是我的用户名</em><br>两种登陆方法：你可以使用<strong>浏览器登陆账号</strong>后登录<code>GitHub-Cli</code>，也可以使用<strong>粘贴个人验证码</strong>登录。由于<code>GitHub-Cli</code>的内核也是用到<code>Git</code>的，所以它也会要求你配置<code>Git</code>，选择<code>SSH</code>或者<code>HTTPS</code>貌似都差不多。<br>如果最后它提示你类似<code>Logged in as …</code>说明你成功了！！  </p>
<h2 id="四-关于你的仓库"><a href="#四-关于你的仓库" class="headerlink" title="四.关于你的仓库"></a>四.关于你的仓库</h2><p>使用“项目托管平台”你没有仓库怎么行？用你本地的<code>Git</code>或者在线创建一个仓库，然后你就可以操作了。<br><img data-src="https://s4.ax1x.com/2022/01/08/7iGt6f.md.png" alt="New_Repo"><br>创建一个仓库后，把它拉取到本地。这个时候<code>GitHub-Cli</code>就能派上用场了：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gh repo <span class="built_in">clone</span> &#123;username&#125;/&#123;repo_name&#125;</span><br></pre></td></tr></table></figure>
<p>现在你的电脑上应该就有了一个<code>本地仓库</code>。现在让我们来更新它！<br>首先我们来切换到一个新的分支<em>（Git版本库中存放项目不同版本的一种机制）</em> 。然后，做一点点修改，然后再提交回远程端 <em>（在这里就是GitHub！）</em>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout –b <span class="built_in">test</span>  //checkout -b 会创建并进入一个新的分支</span><br><span class="line">$ mkdir Test12.17  //创建一个文件夹</span><br><span class="line">$ <span class="built_in">cd</span> Test12.17</span><br><span class="line">$ <span class="built_in">echo</span> “What makes unicorns cry?”&gt;&gt;test.txt  //做一点点修改</span><br></pre></td></tr></table></figure>
<p>现在我们已经生成了一个新文件夹，一个新文件并进入了一个新的分支。然后，用大家都熟知的Git来进行以下操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .  //缓存所有修改</span><br><span class="line">$ git commit –m “Update 12.17”  //创建一个更新记录</span><br><span class="line">$ git push –-set-upstream origin <span class="built_in">test</span>  //上传 注意这里需要配置远程</span><br></pre></td></tr></table></figure>
<p>现在貌似我们的更改已经被上传到<code>GitHub</code>上面去了！不过很明显，我们提交到的是一个叫做<code>test</code>的分支，我们还需要把他提交到<code>master</code>，即<strong>主分支</strong>上去。</p>
<h2 id="五-PRs"><a href="#五-PRs" class="headerlink" title="五.PRs"></a>五.PRs</h2><p>其实我们的确可以将更新直接提交到<code>master</code>上，但这不是重点——在<code>GitHub</code>上更多的是<strong>多人合作项目</strong>，这时将更新代码直接提交到主分支上貌似就有点风险了 <em>（万一有Bug呢）</em> 。然后，我们就可以尝试一种新的方式——<code>Pull Request</code>。（感觉前面铺垫好多）<br><code>Pull Request</code> 是一种通知机制。你修改了他人的代码，将你的修改通知原来的作者，希望他合并你的修改，这就是 <code>Pull Request</code>。<code>Pull Request</code> 本质上是一种<em>软件的合作方式</em>，是将涉及不同功能的代码，纳入主干的一种流程。这个过程中，还可以进行讨论、审核和修改代码。<br>所以，你学废了吗……</p>
<h3 id="1-创建PR"><a href="#1-创建PR" class="headerlink" title="1.创建PR"></a>1.创建PR</h3><p>现在我们来尝试创建一个新PR。当然，我们是个人项目，所以PR仅起到演示的效果。<br>如图所示，创建一个PR我们需要运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gh pr create  //等同于 $ gh pr cr</span><br></pre></td></tr></table></figure>
<p>同时我们会需要提供例如标题、基本信息等等等等。当输出类似以下的提示时，你就成功了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com/Guleixibian2009/<span class="built_in">test</span>/pull/1</span><br></pre></td></tr></table></figure>
<p><img data-src="https://s4.ax1x.com/2022/01/08/7iGanS.png" alt="PR_Create">  </p>
<h3 id="2-PR的合并"><a href="#2-PR的合并" class="headerlink" title="2.PR的合并"></a>2.PR的合并</h3><p>很明显，单独创建一个PR是没有用的。我们需要把他合并到主分支里！首先我们看一下到底有没有这个PR：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gh pr list</span><br></pre></td></tr></table></figure>
<p>这个命令可以帮助我们查看所有的<code>PR</code>。比如下面的仓库就有2个进行中的<code>PR</code>:  </p>
<p><img data-src="https://s4.ax1x.com/2022/01/08/7iGNX8.jpg" alt="PR_List"></p>
<p>Em……只需要注意最上面那一行命令就可以了，后面两条是添加了几个限定条件。（看起来好复杂）<br>很明显我们的确有进行中的PR。为了将其合并入主分支，我们来<code>Merge</code>刚刚那个<code>PR</code>。  </p>
<p>示意图如下：</p>
<p><img data-src="https://s4.ax1x.com/2022/01/08/7iGd0g.png" alt="PR_Merge"></p>
<p>当然在合并<code>PR</code>时我们会需要选择一些基本信息，一般情况下选择<code>Create a merge commit</code>。如果你不想删除这个<code>test</code>分支，你可以在第二个选项中选择<code>No</code>。最后它会有提示语：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Merged pull request <span class="comment">#1</span></span><br></pre></td></tr></table></figure>
<p>然后，我们怎么知道自己的<code>PR</code>真的真的已经被合并了呢？我们可以切换回原分支<code>master</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout master  //不需要 -b ，因为不是新分支</span><br><span class="line">$ gh repo sync  //这个指令可以同步当前分支</span><br></pre></td></tr></table></figure>
<p>如果你的<code>master</code>分支中多了一开始创建的文件，那么，这个<code>PR</code>就是真的被合并了。<br>最后，如果你还想了解<code>GitHub-Cli</code>更多有关命令，你可以运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gh &lt;<span class="built_in">command</span>&gt; &lt;subcommand&gt; --<span class="built_in">help</span></span><br><span class="line">  //此处 &lt;<span class="built_in">command</span>&gt;/&lt;subcommand&gt; 要用具体的命令代替</span><br><span class="line">  //如： gh repo <span class="built_in">clone</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>
<p>就可以获得有关命令的更多信息了！</p>
<h2 id="六-写在最后"><a href="#六-写在最后" class="headerlink" title="六.写在最后"></a>六.写在最后</h2><p>经过我的一通讲解，相信大家已经掌握了<code>GitHub-Cli</code>的一些基本操作，如登录，同步仓库，等等，并且“深入”了解了<code>Pull Request</code>。在此希望<code>GitHub-Cli</code>可以和广大码农一同进步，一同成长！我们下期再见~~~</p>
]]></content>
      <categories>
        <category>GitHub</category>
        <category>GitHub-Cli</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>GitHub-Cli</tag>
      </tags>
  </entry>
  <entry>
    <title>3个小妙招加速你的GitHub~</title>
    <url>/2021/08/14/3%E4%B8%AA%E5%B0%8F%E5%A6%99%E6%8B%9B%E5%8A%A0%E9%80%9F%E4%BD%A0%E7%9A%84GitHub/</url>
    <content><![CDATA[<p>想必大家都知道<code>Github</code>是一个极佳的云端代码储存、交流平台，同时你也可以简单粗暴地把它当作云盘或者服务器。<br>但在众多优点之中，有一个问题却一直深深地困扰着我，那就是<code>GitHub</code>实在太！慢！啦！  </p>
<span id="more"></span>
<p>在我头几次用Github的时候，我几乎根本上不去，不过以前不过是下载一些搜索到的小工具啥的。<br>但现在不一样了。我开始做网站，开始天天<em>（也许不是天天）</em>更新，每一次都等待几十分钟的加载时间（白天还好），简直就是浪费生命。相信大家都有同感吧！<br>于是，我就整理了下面3种方法，给大家节约“生命”。</p>
<h2 id="0-目录"><a href="#0-目录" class="headerlink" title="0. 目录"></a>0. 目录</h2><ul>
<li>方法一：修改<code>Host</code>，其实更加浪费生命  </li>
<li>方法二：改链接，做镜像，世界变得更加美好  </li>
<li>方法三：装“边车”，速度嗖嗖嗖直窜3秒！  </li>
</ul>
<hr>
<h2 id="1-我有大把时间，我要改hosts！"><a href="#1-我有大把时间，我要改hosts！" class="headerlink" title="1. 我有大把时间，我要改hosts！"></a>1. 我有大把时间，我要改<code>hosts</code>！</h2><p>好吧，如果你真的这么无聊，那我就讲一讲吧……<br>首先在<code>C:\Windows\System32\drivers\etc</code>找到<code>hosts</code>文件。如果你以前没用过，那可能需要打开权限。（如下图）</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcKoNV.png" alt="hosts1"></p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcKLjJ.png" alt="hosts2"></p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcKXu9.png" alt="hosts3"></p>
<p>用记事本打开，这个文件里在没有改动的情况下只有几行注释，忽略即可。<br>现在我们到 <a href="https://www.ipaddress.com"><code>Ipaddress</code></a> 或者<a href="https://www.itdog.cn/ping/"><code>itdog</code></a>查下面三个网址的<code>IP</code>，现在（其实是很久很久以前）查询如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">网址</th>
<th style="text-align:center">解释</th>
<th style="text-align:center">IP</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>github.com</code></td>
<td style="text-align:center">这是主站</td>
<td style="text-align:center"><del>140.82.114.4</del></td>
</tr>
<tr>
<td style="text-align:center"><code>raw.githubusercontent.com</code></td>
<td style="text-align:center">动态资源</td>
<td style="text-align:center">185.199.108.153</td>
</tr>
<tr>
<td style="text-align:center"><code>raw.githubusercontent.com</code></td>
<td style="text-align:center">动态资源</td>
<td style="text-align:center">185.199.109.153</td>
</tr>
<tr>
<td style="text-align:center"><code>raw.githubusercontent.com</code></td>
<td style="text-align:center">动态资源</td>
<td style="text-align:center">185.199.110.153</td>
</tr>
<tr>
<td style="text-align:center"><code>raw.githubusercontent.com</code></td>
<td style="text-align:center">动态资源</td>
<td style="text-align:center">185.199.111.153</td>
</tr>
<tr>
<td style="text-align:center"><code>avatars.githubusercontent.com</code></td>
<td style="text-align:center">你的头像</td>
<td style="text-align:center">185.199.108.133</td>
</tr>
<tr>
<td style="text-align:center"><code>avatars.githubusercontent.com</code></td>
<td style="text-align:center">你的头像</td>
<td style="text-align:center">185.199.109.133</td>
</tr>
<tr>
<td style="text-align:center"><code>avatars.githubusercontent.com</code></td>
<td style="text-align:center">你的头像</td>
<td style="text-align:center">185.199.110.133</td>
</tr>
<tr>
<td style="text-align:center"><code>avatars.githubusercontent.com</code></td>
<td style="text-align:center">你的头像</td>
<td style="text-align:center">185.199.111.133</td>
</tr>
</tbody>
</table>
</div>
<p>注意，写入<code>hosts</code>的格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IPAddress HostName</span><br></pre></td></tr></table></figure>
<p>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">140.82.114.4    github.com  </span><br><span class="line">185.199.108.153 raw.githubusercontent.com  </span><br><span class="line">185.199.109.153 raw.githubusercontent.com  </span><br><span class="line">185.199.110.153 raw.githubusercontent.com  </span><br><span class="line">185.199.111.153 raw.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars.githubusercontent.com</span><br><span class="line">185.199.109.133 avatars.githubusercontent.com</span><br><span class="line">185.199.110.133 avatars.githubusercontent.com</span><br><span class="line">185.199.111.133 avatars.githubusercontent.com</span><br></pre></td></tr></table></figure>
<p>按照这样的格式输入到 <code>hosts</code> 文件里，再访问 <code>Github</code> 应该就很快了！<br><strong>小提示：每次只用查主站的<code>IP</code>就好了，其他的基本不会变~你可以在<code>itdog</code>中选择一些类似镜像的<code>IP</code>，比如<code>20.205.243.166</code>等等。</strong></p>
<hr>
<h2 id="2-我只用GitHub下载程序，不使用其他功能！"><a href="#2-我只用GitHub下载程序，不使用其他功能！" class="headerlink" title="2. 我只用GitHub下载程序，不使用其他功能！"></a>2. 我只用<code>GitHub</code>下载程序，不使用其他功能！</h2><h3 id="2-1-Git版"><a href="#2-1-Git版" class="headerlink" title="2.1 Git版"></a>2.1 <code>Git</code>版</h3><p>如果你是用<code>Git Clone</code>仓库，那么你就走运了。平时，我们<code>Clone</code>时语法是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/guleixibian2009/guleixibian2009.github.io.git</span><br></pre></td></tr></table></figure>
<p>但如果你用了镜像网站，速度会极快：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://hub.nuaa.cf/guleixibian2009/guleixibian2009.github.io.git</span><br></pre></td></tr></table></figure>
<p><code>https://hub.nuaa.cf</code>是一个极为神奇的网站：作为一个镜像网站，他把几<code>KiB/S</code>的速度提到了几百<code>MiB/S</code>，速度大幅提升！<br>但这样会有一个<code>bug</code>：<code>Git</code>会把你<code>Push</code>回去的网址变<code>https://hub.nuaa.cf</code>。很尴尬的是，这并不是你想要<code>Push</code>回去的地址，于是，经过无数尝试，我发现在<code>.git</code>文件夹（是隐藏的）中有一个<code>config</code>文件，里边是这样写的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">......</span><br><span class="line"></span><br><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">    url = https://hub.nuaa.cf/guleixibian2009/guleixibian2009.github.io.git</span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>有没有注意到那个<code>url</code>后面跟了一个<code>https://hub.nuaa.cf</code>？<br>为了让它“恢复正常”，要把它改回<code>https://github.com</code>。<br>现在，应该就可以了吧！<em>（如果没有<code>.git</code>文件夹说明你没有<code>Push</code>过，或者这不是你的项目）</em></p>
<h3 id="2-2-网页版"><a href="#2-2-网页版" class="headerlink" title="2.2 网页版"></a>2.2 网页版</h3><p><code>https://hub.nuaa.cf</code>并不是<code>GitHub</code>的唯一镜像。如果你觉得<code>GitHub</code>太慢，<br>你可以注册一个中文版<code>GitHub</code>，叫做<code>Gitee</code>。<br>注册后，点击<code>+</code>号，并且导入你的<code>GitHub</code>仓库，继续下载就超级快乐啦！<br><img data-src="https://z3.ax1x.com/2021/08/15/fcKjBR.png" alt="import1"><br><img data-src="https://z3.ax1x.com/2021/08/15/fcKvH1.png" alt="import2"></p>
<hr>
<h2 id="3-我天天要用GitHub，给个靠谱的方法！"><a href="#3-我天天要用GitHub，给个靠谱的方法！" class="headerlink" title="3. 我天天要用GitHub，给个靠谱的方法！"></a>3. 我天天要用<code>GitHub</code>，给个靠谱的方法！</h2><p>在<code>GitHub</code>上有一个项目，叫做<code>@docmirror/DevSidecar</code>，中文名叫<code>开发者边车</code>（也就是我现在用的）。<br><strong><em>小提示：使用此系统可能会造成系统代理服务器配置更变，请小心驾驶</em></strong><br>这个软件是我某个同学推荐的，几乎解决了关于<code>Github</code>速度的所有问题。（后来，22年6月它又帮我解决一个大难题，众所周知<code>jsdeilvr</code>这时被墙了……）<br>如果你需要下载或帮助，请去他的 <a href="https://github.com/docmirror/dev-sidecar"><code>Github</code>项目地址</a>（这个项目在<code>gitee</code>上面已经被封锁了）。<br>用之前要先按指导安装证书，随后选择默认模式。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcMSN6.png" alt="sidecar1"><br><img data-src="https://z3.ax1x.com/2021/08/15/fcMp4K.png" alt="sidecar2"></p>
<p>不过后来我又发现一个问题……如果你用的是<code>Firefox</code>，那么他有时会有“未连接”的界面。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcKzAx.png" alt="problem">  </p>
<p>白天速度不算慢，你就关掉代理就好了。不过如果你无法忍受的话，你可以把边车调成安全模式，这个模式不需要证书。实际上，造成刚刚那个界面的原因就是<code>Firefox</code>无法识别边车自动生成的证书。<br>所以，你学废了吗？<br>不过，经过一“晚上”的查询，我终于查到了一个解决办法。<br>在网址栏里输入<code>about:config</code>，会显示如下界面，我们可以通过修改底层配置的方法来解决这个问题。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcKH9U.png" alt="config1"></p>
<p>点击“接受风险并继续”，会显示如下界面，我们输入<code>security.enterprise_roots.enabled</code>。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcKThT.png" alt="config2"></p>
<p>我们默默地把布尔值修改成<code>True</code>，重启浏览器，搞定！</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fcKqc4.png" alt="config3"></p>
<p>如果点击“那把锁”后出现如下界面，说明你成功啦！</p>
<hr>
<p>现在你有没有发现自己空出来了大把时间呢？借助这三种方法，好好“享受”你的编程时光吧！</p>
<p><strong>THE END</strong> 谢谢你的阅读~</p>
]]></content>
      <categories>
        <category>GitHub</category>
        <category>加速</category>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>DevSidecar</tag>
        <tag>FAQs</tag>
      </tags>
  </entry>
  <entry>
    <title>GithubPages-简单易上手的网站制作(Jekyll版)</title>
    <url>/2021/08/15/GithubPages-%E7%AE%80%E5%8D%95%E6%98%93%E4%B8%8A%E6%89%8B%E7%9A%84%E7%BD%91%E7%AB%99%E5%88%B6%E4%BD%9C-Jekyll%E7%89%88/</url>
    <content><![CDATA[<p>其实我一直想要做网站。在6个月前（2021年2月），我开始看着 <a href="https://www.w3school.com.cn/"><code>W3School</code></a>上的教程，用<code>SublimeText</code>写<code>HTML</code>。<br>但写了一两个月后，我突然想起来一件事。大概在一年前，我有个同学给我推荐了一个录屏软件（不过我忘了叫什么了，好像是<code>Captura</code>？）。他给了我一个网址，然后，<strong>我看到了一个熟悉的东西</strong>————这个网址里有<code>Github</code>的字样。于是，我搜（百）索（度）了一会子，然后搜到好多有关“用<em><code>Github.io</code></em>创作个人博客”的文章，点开后没想到做网站也可以这么简单。今天我来教大家创建一个<code>GithubPages(github.io)</code>页面，分享一下我做网站时的心得。</p>
<span id="more"></span>
<h2 id="0-步骤分解"><a href="#0-步骤分解" class="headerlink" title="0. 步骤分解"></a>0. 步骤分解</h2><p><strong>话不多说，直接上步骤！</strong><br>1.注册github，创建<code>&lt;username&gt;.github.io</code>仓库；<br>2.创建<code>index.md</code>；<br>3.修改<code>_config.yml</code>，选择样式；<br>4.404页面；</p>
<hr>
<h2 id="1-基础设置"><a href="#1-基础设置" class="headerlink" title="1. 基础设置"></a>1. 基础设置</h2><p>看完上文，大家已经知道了我们的网站依托于 <a href="https://github.com/"><code>GitHub</code></a> 的 <strong><a href="https://pages.github.com/"><code>Pages</code></a></strong> 功能。<br>身为程序员，大家肯定都听说过<code>GitHub</code>吧。如果你还不知道的话，可以查询 <a href="https://baike.baidu.com/item/Github">百度百科</a> 。</p>
<h3 id="1-1-注册GitHub账号"><a href="#1-1-注册GitHub账号" class="headerlink" title="1.1 注册GitHub账号"></a>1.1 注册<code>GitHub</code>账号</h3><p>（如果你有<code>GitHub</code>账号，请跳过这一步）如果你没用过<code>GitHub</code>，就去官网注册一个账号，步骤如下：<br>如图，填写你的邮箱和用户名，应该就好了。会有一系列验证，比如说生日和性别等。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxQoR.png" alt="frontpage"><br><img data-src="https://z3.ax1x.com/2021/08/15/fgxKeJ.png" alt="email"></p>
<p>（尴尬：我注册时不是这样啊？？？）<br>登录<code>GitHub</code>可能会需要验证码。登录一下注册时的邮箱，你会收到<code>GitHub</code>（<code>noreply@github.com</code>）的邮件，比如说：</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxeQU.png" alt="Authentication"></p>
<h3 id="1-2-创建一个仓库"><a href="#1-2-创建一个仓库" class="headerlink" title="1.2 创建一个仓库"></a>1.2 创建一个仓库</h3><p>为了储存我们的代码，我们需要分配给他一个空间，学名 <code>repository</code> ，意思是仓库。<br>如图，点击右上角的 <code>New</code> 按钮，然后会弹出如下界面。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxkiq.png" alt="create1"><br><img data-src="https://z3.ax1x.com/2021/08/15/fgxmyF.png" alt="create2"></p>
<p>我们如图勾选，</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxnL4.png" alt="create3"></p>
<p>在 <code>&lt;username&gt;</code> 处填上你的名字，如果名字是 <code>EdogawaNotFound</code> , 那仓库名就叫<br><code>edogawanotfound.github.io</code>。如果是我的话，我也许会设成<code>guleixibian2009.github.io</code>。 </p>
<p>现在你应该有了一个新仓库了。有了自己的仓库，就可以往仓库里放东西了。</p>
<hr>
<h2 id="2-切入正题"><a href="#2-切入正题" class="headerlink" title="2. 切入正题"></a>2. 切入正题</h2><h3 id="2-1-勾选Pages"><a href="#2-1-勾选Pages" class="headerlink" title="2.1 勾选Pages"></a>2.1 勾选<code>Pages</code></h3><p>在使用这个功能之前，你要告诉<code>GitHub</code>你要把这个仓库当做网页源码。<br>在 <code>Settings</code> 里找到 <code>pages</code> 选项，应该是这样子的：</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxwTA.png" alt="settings2"></p>
<p>把 <code>Source</code> 调成你现有的分支，点击 <code>Save</code> 。  </p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxBFI.png" alt="settings3"></p>
<h3 id="2-2-新建index-md"><a href="#2-2-新建index-md" class="headerlink" title="2.2 新建index.md"></a>2.2 新建<code>index.md</code></h3><p><img data-src="https://z3.ax1x.com/2021/08/15/fgxEWV.png" alt="change1"></p>
<p>为了<code>Github Pages</code>更好的识别你的主页，我们需要新建一个<code>index.md</code>。你可以保留你的<code>README</code>不动，没有关系。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxtyD.png" alt="New1"></p>
<p>点击 <code>+</code> 按钮，选择<code>Create New File</code>，然后进入如下界面：</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxdwd.png" alt="New2"></p>
<p>在输入框里输入<code>index.md</code>。<code>Index</code>指索引。你将会在这个新文件里写主页。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxNOe.png" alt="New3"></p>
<p>点击<code>Commit New Changes</code>。<br>你的网站，如果已经<code>Publish</code>，应该叫做<code>&lt;username&gt;.github.io</code>。现在访问你的网站，如果可以访问，恭喜你，你已经成功了！<br>但是一个网站只有主页实在无聊，所以，为了让你的网站看起来更加高级亿点点，我们就要开始写文章了。<br>使用<code>GitHub Pages</code>功能时，你并不需要会写<code>HTML</code>，只需要写文章就行了。 而在<code>Github Pages</code>功能里，我们写文章的方法是写<code>Markdown</code>。<br>等等，为什么我觉得我的界面太难看了呢？？？(￣ε(#￣)☆╰╮(￣▽￣///))让我们给自己的网站换个样式。<br>不过，如果你想现在学习<code>Markdown</code>了。我另写了一篇文章， <a href="https://guleixibian2009.github.io/2021/08/25/真的非常简单-Markdown基本语法/">传送门</a> 。  </p>
<h3 id="2-3-换个样式"><a href="#2-3-换个样式" class="headerlink" title="2.3 换个样式"></a>2.3 换个样式</h3><p>一个网站，也许最重要的不是文章的内容，而是它的门面，而一个“光鲜靓丽”的主页则是一个很好的选择。<br><code>GithubPages</code>已经给你提供好了一些样式，我们可以直接用。<br>转到刚刚那个<code>Settings/Pages</code>,不过这次点<code>ThemeChooser</code>。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxBFI.png" alt="settings3"></p>
<p>在这个界面，你可以选择一个你喜欢的样式（<code>Theme</code>）。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxDYt.png" alt="theme1"></p>
<p>在这里面我选了一个<code>Cayman</code>（简约大气）。</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxrfP.png" alt="theme2"></p>
<p>不管你选了哪个，有没有发现你的网站好看多了呢？<br>不过，他会自动填充你的<code>index.md</code>。网站的默认文本是对<code>Github Pages</code>功能的介绍。这样的网站，也许对于别人来说没有意义。<br>(不过如果没有的话……也许是因为你先创建了文件再选择样式，其实也没事)  </p>
<h3 id="2-4-config-yml"><a href="#2-4-config-yml" class="headerlink" title="2.4 _config.yml"></a>2.4 <code>_config.yml</code></h3><p>不知道细心的你有没有发现，你的仓库里面多了一个<code>_config.yml</code>文件（千万不要删！）<br>打开这个文件，你会发现里面有一行文字：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">jekyll-theme-cayman</span></span><br></pre></td></tr></table></figure>
<p>这个<code>theme</code>就指的是样式。<code>jekyll-theme</code>指的是<code>Github Pages</code>默认给你使用<code>jekyll</code>渲染网站界面。<br>在这个文件里你可以调整你的网站的标题，仔细看！</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgx6l8.png" alt="Title"></p>
<p>其实很简单，只要往下面添加一行就可以啦！</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">My</span> <span class="string">Website~</span></span><br></pre></td></tr></table></figure>
<p>你，都学废了吗？</p>
<hr>
<h2 id="3-404页面"><a href="#3-404页面" class="headerlink" title="3. 404页面"></a>3. <code>404</code>页面</h2><p>在访问你的网站时，别人总有输错网址的时候。<code>Github</code>其实有自带的<code>404</code>，像这样：</p>
<p><img data-src="https://z3.ax1x.com/2021/08/15/fgxIf0.png" alt="404"></p>
<p>不过这个灰色的<code>404</code>实在是不好看，那么，我就有了一个疑问：我能不能自己定制一个<code>404错误</code>页面呢？答案是肯定的。  </p>
<p>在你的仓库里新建一个<code>404.md</code>文件，方法同上。在里面用<code>Markdown</code>填充上你想要的内容。比如说，我会这么写（直接上代码）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 404 错误</span><br><span class="line">**_你寻找的界面不存在！_**  </span><br><span class="line">即将返回 [主页](https://guleixibian2009.github.io/) ......</span><br></pre></td></tr></table></figure>
<p>但实际上，光这么写还是不够。如果你现在访问<code>https://&#123;username&#125;.github.io/404</code>，你也许会看到你想要的页面。但如果你访问一个不存在的页面（指你的域名下面的错误网址，自己定义的<code>404</code>对其他<code>github.io</code>不起作用），它依然会显示那个灰色的<code>404</code>。  </p>
<p>所以到底怎么办呢？为了解决这个问题，我们要引入一种新的东西：<code>YAML Front Matter</code>。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">/404.html</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>把上面这段代码复制到你的<code>404.md</code>的最开头，再次访问应该就有啦！  </p>
<hr>
<h2 id="4-新建页面-amp-文章"><a href="#4-新建页面-amp-文章" class="headerlink" title="4. 新建页面&amp;文章"></a>4. 新建页面&amp;文章</h2><p>现在你已经有了一个主页和<code>404</code>页面了。现在，我们将会进入最激动人心的一部分：写博客。</p>
<h3 id="4-1-新建博客文件-amp-文件夹"><a href="#4-1-新建博客文件-amp-文件夹" class="headerlink" title="4.1 新建博客文件&amp;文件夹"></a>4.1 新建博客文件&amp;文件夹</h3><p>一个网站一般都是“分层”的，其实<code>Github Pages</code>也可以做到这一点。如果你想让<code>Jekyll</code>在你的仓库中渲染出“子页面”，你可以在仓库中新建一个文件夹。比如说，你可以创建<code>guleixibian2009.github.io/Github</code>，这样网址就会被渲染成<code>https://guleixibian2009.github.io/Github/</code>。点开新建文件页面，在输入框里输入你想要的页面名，现在你按下<code>/</code>，神奇的事情发生了：刚刚输入的名称成功地成为了一个文件夹！然后，继续输入<code>index.md</code>，并且<code>Commit New Changes</code>，再访问刚刚创建的页面，就可以啦！  </p>
<p>其实，不一定只有一层文件夹。如果你愿意，你可以在一层的基础上再建N个/层文件夹，并在每一个文件夹下建一个<code>index.md</code>，就可以啦！现在把你的文章用<code>Markdown</code>填进去，再次访问就有新界面啦！</p>
<h3 id="4-2-给页面添加特效"><a href="#4-2-给页面添加特效" class="headerlink" title="4.2 给页面添加特效"></a>4.2 给页面添加特效</h3><p>虽然我搜了很久，但是我实在没有搜到太多可以直接应用的特效。不过我听说过一种基于<code>Ruby</code>的桌面版<code>Jekyll</code>，大家可以自行搜索。话说回来，我的确搜到一个特效：404自动跳转回主页。  </p>
<p>其实这个很容易实现，其实是一段<code>JavaScript</code>脚本。直接把如下脚本插在<code>404.md</code>最底下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="built_in">setTimeout</span>(<span class="string">&quot;javascript:location.href=&#x27;/&#x27;&quot;</span>, <span class="number">10000</span>); </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>其中，<code>setTimeout</code>函数就是定时。而<code>href=&#39;/&#39;</code>就指的是定时回到根目录。<code>10000</code>指10秒。也就是说，10秒钟后返回主页。</p>
<hr>
<h2 id="5-GitHub-Pages的工作原理"><a href="#5-GitHub-Pages的工作原理" class="headerlink" title="5. GitHub Pages的工作原理"></a>5. <code>GitHub Pages</code>的工作原理</h2><p>说到这大家可能会想，<code>Pages</code>能有什么工作原理？其实，如果好奇的你曾经点进过<code>GitHub</code>仓库内<code>Actions</code>一个栏目，你就会发现每一次更新提交后，系统就会自动触发<code>Page Build Deployment</code>这个内置<code>Action</code>，说明白了，就是自动化！具体讲解，敬请等待以后的<code>GitHub Actions</code>使用指南！</p>
<hr>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>其实利用<code>Github Pages</code>作为域名做网站的方法有很多，除了仅仅用网页版<code>Jekyll</code>和桌面版<code>Jekyll</code>，还有<code>HEXO</code>和<code>Wordpress</code>等等。大家可以自行去探索，不过，掉了坑我可不救你！🤣</p>
<p><strong>THE END</strong> 谢谢你的阅读~</p>
]]></content>
      <categories>
        <category>GitHub</category>
        <category>Pages</category>
        <category>Jekyll</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Website</tag>
        <tag>Jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title>介绍一下我的其他项目~</title>
    <url>/2022/09/13/other-projects/</url>
    <content><![CDATA[<p style="text-align: center;">不妨点进来，支持一下！😊</p>

<span id="more"></span>
<h2 id="1-总述"><a href="#1-总述" class="headerlink" title="1. 总述"></a>1. 总述</h2><p>我的话，从小学就开始搞编程，不过自以为也没搞出个什么花样来。直到上了初中，我接触到了前端开发，才慢慢有了一些拿得出手的项目。所有的项目，我都放在我的<code>GitHub</code>账户上，参见<a href="https://github.com/guleixibian2009">https://github.com/guleixibian2009</a>。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>前端</category>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Website</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>Backend</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>【转】Markdown中Latex常用语法</title>
    <url>/2021/11/28/Markdown%E4%B8%ADLatex%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p>这篇文章是我转载过来的（很抱歉的是原网址已经找不到了），自己进行了一些格式上的修改。有些 $\LaTeX$标签可能显示不出来，同志们这是编译器的问题，因人而异……</p>
<h2 id="0-LaTeX-是什么？"><a href="#0-LaTeX-是什么？" class="headerlink" title="0. LaTeX 是什么？"></a>0. LaTeX 是什么？</h2><blockquote>
<p>$ \LaTeX $是一种基于<code>ΤeΧ</code>的排版系统，由美国计算机学家莱斯利·兰伯特（Leslie Lamport）在20世纪80年代初期开发.<br>利用这种格式，即使使用者没有排版和程序设计的知识也可以充分发挥由<code>TeX</code>所提供的强大功能，能在几天、甚至几小时内生成很多具有书籍质量的印刷品。<br>对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技和数学类文档。这个系统同样适用于生成从简单的信件到完整书籍的所有其他种类的文档。</p>
</blockquote>
<span id="more"></span>
<h3 id="0-1-写在前面"><a href="#0-1-写在前面" class="headerlink" title="0.1 写在前面"></a>0.1 写在前面</h3><p>文章中，标签以表格的形式呈现。<strong>如果出现<code>/</code>的情况，代表某字符没有此形式。</strong> <em>（如不存在<code>\varalpha</code>，这一格使用<code>/</code>填充）</em>  </p>
<p>想要补充我没写上的字符？可以直接滚动到页尾，登录<code>GitHub</code>账号后在聊天框里留言，<code>Gitalk</code>会自动同步到<code>GitHub issue</code>中，并用邮件通知我！</p>
<p><code>Markdown</code>中插入公式的方式：</p>
<ol>
<li><p>行内：<script type="math/tex">公式</script></p>
</li>
<li><p>公式块：</p>
</li>
</ol>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">公式</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<h2 id="1-希腊字母表"><a href="#1-希腊字母表" class="headerlink" title="1. 希腊字母表"></a>1. 希腊字母表</h2><div class="table-container">
<table>
<thead>
<tr>
<th>Name</th>
<th style="text-align:center">Display</th>
<th>Capital Case</th>
<th style="text-align:center">Display</th>
<th>Var Case</th>
<th style="text-align:center">Display</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\alpha</code></td>
<td style="text-align:center">$\alpha$</td>
<td><code>\Alpha</code></td>
<td style="text-align:center">$\Alpha$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\beta</code></td>
<td style="text-align:center">$\beta$</td>
<td><code>\Beta</code></td>
<td style="text-align:center">$\Beta$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\gamma</code></td>
<td style="text-align:center">$\gamma$</td>
<td><code>\Gamma</code></td>
<td style="text-align:center">$\Gamma$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\theta</code></td>
<td style="text-align:center">$\theta$</td>
<td><code>\Theta</code></td>
<td style="text-align:center">$\Theta$</td>
<td><code>\vartheta</code></td>
<td style="text-align:center">$\vartheta$</td>
</tr>
<tr>
<td><code>\mu</code></td>
<td style="text-align:center">$\mu$</td>
<td><code>\Mu</code></td>
<td style="text-align:center">$\Mu$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\delta</code></td>
<td style="text-align:center">$\delta$</td>
<td><code>\Delta</code></td>
<td style="text-align:center">$\Delta$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\epsilon</code></td>
<td style="text-align:center">$\epsilon$</td>
<td><code>\Epsilon</code></td>
<td style="text-align:center">$\Epsilon$</td>
<td><code>\varepsilon</code></td>
<td style="text-align:center">$\varepsilon$</td>
</tr>
<tr>
<td><code>\sigma</code></td>
<td style="text-align:center">$\sigma$</td>
<td><code>\Sigma</code></td>
<td style="text-align:center">$\Sigma$</td>
<td><code>\varsigma</code></td>
<td style="text-align:center">$\varsigma$</td>
</tr>
<tr>
<td><code>\pi</code></td>
<td style="text-align:center">$\pi$</td>
<td><code>\Pi</code></td>
<td style="text-align:center">$\Pi$</td>
<td><code>\varpi</code></td>
<td style="text-align:center">$\varpi$</td>
</tr>
<tr>
<td><code>\omega</code></td>
<td style="text-align:center">$\omega$</td>
<td><code>\Omega</code></td>
<td style="text-align:center">$\Omega$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\xi</code></td>
<td style="text-align:center">$\xi$</td>
<td><code>\Xi</code></td>
<td style="text-align:center">$\Xi$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\zeta</code></td>
<td style="text-align:center">$\zeta$</td>
<td><code>\Zeta</code></td>
<td style="text-align:center">$\Zeta$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\chi</code></td>
<td style="text-align:center">$\chi$</td>
<td><code>\Chi</code></td>
<td style="text-align:center">$\Chi$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\rho</code></td>
<td style="text-align:center">$\rho$</td>
<td><code>\Rho</code></td>
<td style="text-align:center">$\Rho$</td>
<td><code>\varrho</code></td>
<td style="text-align:center">$\varrho$</td>
</tr>
<tr>
<td><code>\phi</code></td>
<td style="text-align:center">$\phi$</td>
<td><code>\Phi</code></td>
<td style="text-align:center">$\Phi$</td>
<td><code>\varphi</code></td>
<td style="text-align:center">$\varphi$</td>
</tr>
<tr>
<td><code>\eta</code></td>
<td style="text-align:center">$\eta$</td>
<td><code>\Eta</code></td>
<td style="text-align:center">$\Eta$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\lambda</code></td>
<td style="text-align:center">$\lambda$</td>
<td><code>\Lambda</code></td>
<td style="text-align:center">$\Lambda$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\kappa</code></td>
<td style="text-align:center">$\kappa$</td>
<td><code>\Kappa</code></td>
<td style="text-align:center">$\Kappa$</td>
<td><code>\varkappa</code></td>
<td style="text-align:center">$\varkappa$</td>
</tr>
<tr>
<td><code>\nu</code></td>
<td style="text-align:center">$\nu$</td>
<td><code>\Nu</code></td>
<td style="text-align:center">$\Nu$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\upsilon</code></td>
<td style="text-align:center">$\upsilon$</td>
<td><code>\Upsilon</code></td>
<td style="text-align:center">$\Upsilon$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\psi</code></td>
<td style="text-align:center">$\psi$</td>
<td><code>\Psi</code></td>
<td style="text-align:center">$\Psi$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\tau</code></td>
<td style="text-align:center">$\tau$</td>
<td><code>\Tau</code></td>
<td style="text-align:center">$\Tau$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td><code>\iota</code></td>
<td style="text-align:center">$\iota$</td>
<td><code>\Iota</code></td>
<td style="text-align:center">$\Iota$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
</tbody>
</table>
</div>
<p>没有显示出来所有的字符？你可以尝试使用自己的编辑器来查看！</p>
<h2 id="2-常用特殊字符表"><a href="#2-常用特殊字符表" class="headerlink" title="2.常用特殊字符表"></a>2.常用特殊字符表</h2><h3 id="2-1-数学符号类"><a href="#2-1-数学符号类" class="headerlink" title="2.1 数学符号类"></a>2.1 数学符号类</h3><div class="table-container">
<table>
<thead>
<tr>
<th>Name</th>
<th style="text-align:center">Display</th>
<th>Name</th>
<th style="text-align:center">Display</th>
<th>Name</th>
<th style="text-align:center">Display</th>
<th>Name</th>
<th style="text-align:center">Display</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\times</code></td>
<td style="text-align:center">$\times$</td>
<td><code>\div</code></td>
<td style="text-align:center">$\div$</td>
<td><code>\pm</code></td>
<td style="text-align:center">$\pm$</td>
<td><code>\mp</code></td>
<td style="text-align:center">$\mp$</td>
</tr>
<tr>
<td><code>\otimes</code></td>
<td style="text-align:center">$\otimes$</td>
<td><code>\ominus</code></td>
<td style="text-align:center">$\ominus$</td>
<td><code>\oplus</code></td>
<td style="text-align:center">$\oplus$</td>
<td><code>\odot</code></td>
<td style="text-align:center">$\odot$</td>
</tr>
<tr>
<td><code>\oslash</code></td>
<td style="text-align:center">$\oslash$</td>
<td><code>\triangleq</code></td>
<td style="text-align:center">$\triangleq$</td>
<td><code>\ne</code></td>
<td style="text-align:center">$\ne$</td>
<td><code>\equiv</code></td>
<td style="text-align:center">$\equiv$</td>
</tr>
<tr>
<td><code>\lt</code></td>
<td style="text-align:center">$\lt$</td>
<td><code>\gt</code></td>
<td style="text-align:center">$\gt$</td>
<td><code>\le</code></td>
<td style="text-align:center">$\le$</td>
<td><code>\ge</code></td>
<td style="text-align:center">$\ge$</td>
</tr>
<tr>
<td><code>\cup</code></td>
<td style="text-align:center">$\cup$</td>
<td><code>\cap</code></td>
<td style="text-align:center">$\cap$</td>
<td><code>\Cup</code></td>
<td style="text-align:center">$\Cup$</td>
<td><code>\Cap</code></td>
<td style="text-align:center">$\Cap$</td>
</tr>
<tr>
<td><code>\bigcup</code></td>
<td style="text-align:center">$\bigcup$</td>
<td><code>\bigcap</code></td>
<td style="text-align:center">$\bigcap$</td>
<td><code>\ast</code></td>
<td style="text-align:center">$\ast$</td>
<td><code>\star</code></td>
<td style="text-align:center">$\star$</td>
</tr>
<tr>
<td><code>\bigotimes</code></td>
<td style="text-align:center">$\bigotimes$</td>
<td><code>\bigoplus</code></td>
<td style="text-align:center">$\bigoplus$</td>
<td><code>\circ</code></td>
<td style="text-align:center">$\circ$</td>
<td><code>\bullet</code></td>
<td style="text-align:center">$\bullet$</td>
</tr>
<tr>
<td><code>\bigcirc</code></td>
<td style="text-align:center">$\bigcirc$</td>
<td><code>\amalg</code></td>
<td style="text-align:center">$\amalg$</td>
<td><code>\to</code></td>
<td style="text-align:center">$\to$</td>
<td><code>\infty</code></td>
<td style="text-align:center">$\infty$</td>
</tr>
<tr>
<td><code>\vee</code></td>
<td style="text-align:center">$\vee$</td>
<td><code>\wedge</code></td>
<td style="text-align:center">$\wedge$</td>
<td><code>\lhd</code></td>
<td style="text-align:center">$\lhd$</td>
<td><code>\rhd</code></td>
<td style="text-align:center">$\rhd$</td>
</tr>
<tr>
<td><code>\bigvee</code></td>
<td style="text-align:center">$\bigvee$</td>
<td><code>\bigwedge</code></td>
<td style="text-align:center">$\bigwedge$</td>
<td><code>\unlhd</code></td>
<td style="text-align:center">$\unlhd$</td>
<td><code>\unrhd</code></td>
<td style="text-align:center">$\unrhd$</td>
</tr>
<tr>
<td><code>\sqcap</code></td>
<td style="text-align:center">$\sqcap$</td>
<td><code>\sqcup</code></td>
<td style="text-align:center">$\sqcup$</td>
<td><code>\prec</code></td>
<td style="text-align:center">$\prec$</td>
<td><code>\succ</code></td>
<td style="text-align:center">$\succ$</td>
</tr>
<tr>
<td><code>\subset</code></td>
<td style="text-align:center">$\subset$</td>
<td><code>\supset</code></td>
<td style="text-align:center">$\supset$</td>
<td><code>\sim</code></td>
<td style="text-align:center">$\sim$</td>
<td><code>\approx</code></td>
<td style="text-align:center">$\approx$</td>
</tr>
<tr>
<td><code>\subseteq</code></td>
<td style="text-align:center">$\subseteq$</td>
<td><code>\supseteq</code></td>
<td style="text-align:center">$\supseteq$</td>
<td><code>\cong</code></td>
<td style="text-align:center">$\cong$</td>
<td><code>\doteq</code></td>
<td style="text-align:center">$\doteq$</td>
</tr>
<tr>
<td><code>\setminus</code></td>
<td style="text-align:center">$\setminus$</td>
<td><code>\mid</code></td>
<td style="text-align:center">$\mid$</td>
<td><code>\ll</code></td>
<td style="text-align:center">$\ll$</td>
<td><code>\gg</code></td>
<td style="text-align:center">$\gg$</td>
</tr>
<tr>
<td><code>\parallel</code></td>
<td style="text-align:center">$\parallel$</td>
<td><code>\Join</code></td>
<td style="text-align:center">$\Join$</td>
<td><code>\in</code></td>
<td style="text-align:center">$\in$</td>
<td><code>\notin</code></td>
<td style="text-align:center">$\notin$</td>
</tr>
<tr>
<td><code>\propto</code></td>
<td style="text-align:center">$\propto$</td>
<td><code>\neg</code></td>
<td style="text-align:center">$\neg$</td>
<td><code>\ldots</code></td>
<td style="text-align:center">$\ldots$</td>
<td><code>\cdots</code></td>
<td style="text-align:center">$\cdots$</td>
</tr>
<tr>
<td><code>\forall</code></td>
<td style="text-align:center">$\forall$</td>
<td><code>\exists</code></td>
<td style="text-align:center">$\exists$</td>
<td><code>\vdots</code></td>
<td style="text-align:center">$\vdots$</td>
<td><code>\ddots</code></td>
<td style="text-align:center">$\ddots$</td>
</tr>
<tr>
<td><code>\aleph</code></td>
<td style="text-align:center">$\aleph$</td>
<td><code>\nabla</code></td>
<td style="text-align:center">$\nabla$</td>
<td><code>\imath</code></td>
<td style="text-align:center">$\imath$</td>
<td><code>\jmath</code></td>
<td style="text-align:center">$\jmath$</td>
</tr>
<tr>
<td><code>\ell</code></td>
<td style="text-align:center">$\ell$</td>
<td><code>\partial</code></td>
<td style="text-align:center">$\partial$</td>
<td><code>\int</code></td>
<td style="text-align:center">$\int$</td>
<td><code>\oint</code></td>
<td style="text-align:center">$\oint$</td>
</tr>
<tr>
<td><code>\uplus</code></td>
<td style="text-align:center">$\uplus$</td>
<td><code>\biguplus</code></td>
<td style="text-align:center">$\biguplus$</td>
<td>/</td>
<td style="text-align:center">/</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
</tbody>
</table>
</div>
<h3 id="2-2-箭头类"><a href="#2-2-箭头类" class="headerlink" title="2.2 箭头类"></a>2.2 箭头类</h3><div class="table-container">
<table>
<thead>
<tr>
<th>Name</th>
<th style="text-align:center">Display</th>
<th>Name</th>
<th style="text-align:center">Display</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\triangleleft</code></td>
<td style="text-align:center">$\triangleleft$</td>
<td><code>\triangleright</code></td>
<td style="text-align:center">$\triangleright$</td>
</tr>
<tr>
<td><code>\bigtriangleup</code></td>
<td style="text-align:center">$\bigtriangleup$</td>
<td><code>\bigtriangledown</code></td>
<td style="text-align:center">$\bigtriangledown$</td>
</tr>
<tr>
<td><code>\uparrow</code></td>
<td style="text-align:center">$\uparrow$</td>
<td><code>\downarrow</code></td>
<td style="text-align:center">$\downarrow$</td>
</tr>
<tr>
<td><code>\leftarrow</code></td>
<td style="text-align:center">$\leftarrow$</td>
<td><code>\rightarrow</code></td>
<td style="text-align:center">$\rightarrow$</td>
</tr>
<tr>
<td><code>\Leftarrow</code></td>
<td style="text-align:center">$\Leftarrow$</td>
<td><code>\Rightarrow</code></td>
<td style="text-align:center">$\Rightarrow$</td>
</tr>
<tr>
<td><code>\longleftarrow</code></td>
<td style="text-align:center">$\longleftarrow$</td>
<td><code>\longrightarrow</code></td>
<td style="text-align:center">$\longrightarrow$</td>
</tr>
<tr>
<td><code>\Longleftarrow</code></td>
<td style="text-align:center">$\Longleftarrow$</td>
<td><code>\Longrightarrow</code></td>
<td style="text-align:center">$\Longrightarrow$</td>
</tr>
<tr>
<td><code>\leftrightarrow</code></td>
<td style="text-align:center">$\leftrightarrow$</td>
<td><code>\longleftrightarrow</code></td>
<td style="text-align:center">$\longleftrightarrow$</td>
</tr>
<tr>
<td><code>\Leftrightarrow</code></td>
<td style="text-align:center">$\Leftrightarrow$</td>
<td><code>\Longleftrightarrow</code></td>
<td style="text-align:center">$\Longleftrightarrow$</td>
</tr>
<tr>
<td><code>\leftharpoonup</code></td>
<td style="text-align:center">$\leftharpoonup$</td>
<td><code>\rightharpoonup</code></td>
<td style="text-align:center">$\rightharpoonup$</td>
</tr>
<tr>
<td><code>\leftharpoondown</code></td>
<td style="text-align:center">$\leftharpoondown$</td>
<td><code>\rightharpoondown</code></td>
<td style="text-align:center">$\rightharpoondown$</td>
</tr>
<tr>
<td><code>\rightleftharpoons</code></td>
<td style="text-align:center">$\rightleftharpoons$</td>
<td><code>\S</code></td>
<td style="text-align:center">$\S$</td>
</tr>
<tr>
<td><code>\nwarrow</code></td>
<td style="text-align:center">$\nwarrow$</td>
<td><code>\nearrow</code></td>
<td style="text-align:center">$\nearrow$</td>
</tr>
<tr>
<td><code>\swarrow</code></td>
<td style="text-align:center">$\swarrow$</td>
<td><code>\searrow</code></td>
<td style="text-align:center">$\searrow$</td>
</tr>
<tr>
<td><code>\triangle</code></td>
<td style="text-align:center">$\triangle$</td>
<td><code>\box</code></td>
<td style="text-align:center">$\Box$</td>
</tr>
<tr>
<td><code>\diamond</code></td>
<td style="text-align:center">$\diamond$</td>
<td><code>\diamondsuit</code></td>
<td style="text-align:center">$\diamondsuit$</td>
</tr>
<tr>
<td><code>\heartsuit</code></td>
<td style="text-align:center">$\heartsuit$</td>
<td><code>\clubsuit</code></td>
<td style="text-align:center">$\clubsuit$</td>
</tr>
<tr>
<td><code>\spadesuit</code></td>
<td style="text-align:center">$\spadesuit$</td>
<td>/</td>
<td style="text-align:center">/</td>
</tr>
</tbody>
</table>
</div>
<h2 id="3-公式语法"><a href="#3-公式语法" class="headerlink" title="3. 公式语法"></a>3. 公式语法</h2><h3 id="3-1-上下标"><a href="#3-1-上下标" class="headerlink" title="3.1 上下标"></a>3.1 上下标</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>y = x_i^&#123;a_1^2&#125;</code></td>
<td style="text-align:center">$ y = x_i^{a_1^2}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-2-公式中插入文本（直接上）"><a href="#3-2-公式中插入文本（直接上）" class="headerlink" title="3.2 公式中插入文本（直接上）"></a>3.2 公式中插入文本（直接上）</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>y = x^2 \; (二次函数)</code></td>
<td style="text-align:center">$ y = x^{2} \; (二次函数)$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-3-公式中插入空格"><a href="#3-3-公式中插入空格" class="headerlink" title="3.3 公式中插入空格"></a>3.3 公式中插入空格</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>ab</code></td>
<td style="text-align:center">$ab$</td>
</tr>
<tr>
<td style="text-align:center"><code>a \, b</code></td>
<td style="text-align:center">$a \, b$</td>
</tr>
<tr>
<td style="text-align:center"><code>a \; b</code></td>
<td style="text-align:center">$a \; b$</td>
</tr>
<tr>
<td style="text-align:center"><code>a \quad b</code></td>
<td style="text-align:center">$a \quad b$</td>
</tr>
<tr>
<td style="text-align:center"><code>a \qquad b</code></td>
<td style="text-align:center">$a \qquad b$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-4-字母上方横线"><a href="#3-4-字母上方横线" class="headerlink" title="3.4 字母上方横线"></a>3.4 字母上方横线</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\overline&#123;ABC&#125;</code></td>
<td style="text-align:center">$\overline{ABC}$</td>
</tr>
<tr>
<td style="text-align:center"><code>\bar&#123;A&#125;</code></td>
<td style="text-align:center">$\bar{A}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-5-字母下方横线"><a href="#3-5-字母下方横线" class="headerlink" title="3.5 字母下方横线"></a>3.5 字母下方横线</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\underline&#123;ABC&#125;</code></td>
<td style="text-align:center">$\underline{ABC}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-6-字母上方波浪线"><a href="#3-6-字母上方波浪线" class="headerlink" title="3.6 字母上方波浪线"></a>3.6 字母上方波浪线</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\tilde&#123;\rho&#125;</code></td>
<td style="text-align:center">$\tilde{\rho}$</td>
</tr>
<tr>
<td style="text-align:center"><code>\widetilde&#123;A1B2C&#125;</code></td>
<td style="text-align:center">$\widetilde{A1B2C}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-7-字母上方尖号"><a href="#3-7-字母上方尖号" class="headerlink" title="3.7 字母上方尖号"></a>3.7 字母上方尖号</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\hat&#123;A&#125;</code></td>
<td style="text-align:center">$\hat{A}$</td>
</tr>
<tr>
<td style="text-align:center"><code>\widehat&#123;ABC&#125;</code></td>
<td style="text-align:center">$\widehat{ABC}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-8-字母上方箭头"><a href="#3-8-字母上方箭头" class="headerlink" title="3.8 字母上方箭头"></a>3.8 字母上方箭头</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\vec&#123;ab&#125;</code></td>
<td style="text-align:center">$\vec{ab}$</td>
</tr>
<tr>
<td style="text-align:center"><code>\overleftarrow&#123;ab&#125;</code></td>
<td style="text-align:center">$\overleftarrow{ab}$</td>
</tr>
<tr>
<td style="text-align:center"><code>\overrightarrow&#123;ab&#125;</code></td>
<td style="text-align:center">$\overrightarrow{ab}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-9-字母上方或下方花括号"><a href="#3-9-字母上方或下方花括号" class="headerlink" title="3.9 字母上方或下方花括号"></a>3.9 字母上方或下方花括号</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\overbrace&#123;1+2+3&#125;</code></td>
<td style="text-align:center">$\overbrace{1+2+3}$</td>
</tr>
<tr>
<td style="text-align:center"><code>\underbrace&#123;1+2+3&#125;</code></td>
<td style="text-align:center">$\underbrace{1+2+3}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-10-字母上方点号"><a href="#3-10-字母上方点号" class="headerlink" title="3.10 字母上方点号"></a>3.10 字母上方点号</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\dot&#123;A&#125;</code></td>
<td style="text-align:center">$\dot{A}$</td>
</tr>
<tr>
<td style="text-align:center"><code>\ddot&#123;ABC&#125;</code></td>
<td style="text-align:center">$\ddot{ABC}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-11-省略号"><a href="#3-11-省略号" class="headerlink" title="3.11 省略号"></a>3.11 省略号</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>1,2,\dots</code></td>
<td style="text-align:center">$1,2,\dots$</td>
</tr>
<tr>
<td style="text-align:center"><code>1,2,\cdots</code></td>
<td style="text-align:center">$1,2,\cdots$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-12-积分："><a href="#3-12-积分：" class="headerlink" title="3.12 积分："></a>3.12 积分：</h3><h4 id="3-12-1-基本形式"><a href="#3-12-1-基本形式" class="headerlink" title="3.12.1 基本形式"></a>3.12.1 基本形式</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\int_&#123;-\infty&#125;^&#123;+\infty&#125; f(x) \mathrm&#123;d&#125;x</code></td>
<td style="text-align:center">$\int_{-\infty}^{+\infty} f(x) \mathrm{d}x$</td>
</tr>
<tr>
<td style="text-align:center"><code>\iint_&#123;-\infty&#125;^&#123;+\infty&#125; f(x,y) \mathrm&#123;d&#125;x \mathrm&#123;d&#125;y</code></td>
<td style="text-align:center">$\iint_{-\infty}^{+\infty} f(x,y) \mathrm{d}x \mathrm{d}y$</td>
</tr>
<tr>
<td style="text-align:center"><code>\oint_&#123;-\infty&#125;^&#123;+\infty&#125;</code></td>
<td style="text-align:center">$\oint_{-\infty}^{+\infty}$</td>
</tr>
</tbody>
</table>
</div>
<h4 id="3-12-2-行内模式"><a href="#3-12-2-行内模式" class="headerlink" title="3.12.2 行内模式"></a>3.12.2 行内模式</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">形式</th>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>limits</code>模式</td>
<td style="text-align:center"><code>\int\limits_&#123;-\infty&#125;^&#123;+\infty&#125; f(x) \mathrm&#123;d&#125;x</code></td>
<td style="text-align:center">$\int\limits_{-\infty}^{+\infty} f(x) \mathrm{d}x$</td>
</tr>
<tr>
<td style="text-align:center"><code>displaystyle</code>模式</td>
<td style="text-align:center"><code>\displaystyle \int_&#123;-\infty&#125;^&#123;+\infty&#125; f(x) \mathrm&#123;d&#125;x</code></td>
<td style="text-align:center">$\displaystyle \int_{-\infty}^{+\infty} f(x) \mathrm{d}x$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-13-求和"><a href="#3-13-求和" class="headerlink" title="3.13 求和"></a>3.13 求和</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">模式</th>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">普通</td>
<td style="text-align:center"><code>p = \sum_&#123;n=1&#125;^&#123;100&#125; a_n</code></td>
<td style="text-align:center">$ p = \sum_{n=1}^{100} a_n $</td>
</tr>
<tr>
<td style="text-align:center"><code>limits</code>模式</td>
<td style="text-align:center"><code>p = \sum\limits_&#123;n=1&#125;^&#123;100&#125; a_n</code></td>
<td style="text-align:center">$p = \sum\limits_{n=1}^{100} a_n$</td>
</tr>
<tr>
<td style="text-align:center"><code>display</code>模式</td>
<td style="text-align:center"><code>\displaystyle\sum_&#123;i=1&#125;^&#123;n&#125; i^2</code></td>
<td style="text-align:center">$\displaystyle\sum_{i=1}^{n} i^2$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-14-求乘积"><a href="#3-14-求乘积" class="headerlink" title="3.14 求乘积"></a>3.14 求乘积</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">模式</th>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">普通</td>
<td style="text-align:center"><code>\prod_&#123;i=1&#125;^&#123;n&#125; a_i</code></td>
<td style="text-align:center">$\prod_{i=1}^{n} a_i$</td>
</tr>
<tr>
<td style="text-align:center"><code>limits</code>模式</td>
<td style="text-align:center"><code>\prod\limits_&#123;i=1&#125;^&#123;n&#125; a_i</code></td>
<td style="text-align:center">$\prod\limits_{i=1}^{n} a_i$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-15-分数"><a href="#3-15-分数" class="headerlink" title="3.15 分数"></a>3.15 分数</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>x_1,x_2 = \frac&#123;b^2 \pm 4ac&#125;&#123;2a&#125;</code></td>
<td style="text-align:center">$x_1,x_2 = \frac{b^2 \pm 4ac}{2a}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-16-根号"><a href="#3-16-根号" class="headerlink" title="3.16 根号"></a>3.16 根号</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语法</th>
<th style="text-align:center">输出</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>r = \sqrt&#123;x^2+y^2&#125;</code></td>
<td style="text-align:center">$r = \sqrt{x^2+y^2}$</td>
</tr>
<tr>
<td style="text-align:center"><code>x^&#123;2/3&#125; = \sqrt[3]&#123;x^2&#125;</code></td>
<td style="text-align:center">$x^{2/3} = \sqrt[3]{x^2}$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="4-方程组"><a href="#4-方程组" class="headerlink" title="4. 方程组"></a>4. 方程组</h2><h3 id="4-1-左侧花括号"><a href="#4-1-左侧花括号" class="headerlink" title="4.1 左侧花括号"></a>4.1 左侧花括号</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\begin&#123;equation&#125;</span><br><span class="line">\left\&#123; </span><br><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">\min \quad&amp;&#123;f=a-b&#125;\\</span><br><span class="line">&#123;s.t.&#125;\quad &amp;&#123;a =b(x), \quad x\in [0,L] &#125; \\</span><br><span class="line">(c+d)(e+f)=e \\</span><br><span class="line">(df+cg)=0 \\</span><br><span class="line">(adv-ert)(e+f)=e</span><br><span class="line">\end&#123;aligned&#125; \right.</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure>
<p>  注意：在 <code>markdown</code> 环境下，某些特殊字符，如<code>\</code>,<code>*</code>等，会首先被 <code>markdown</code> 语法转义，然后再被 <code>Latex</code> 转义。因此有时候 ‘{‘需要写作’\{‘，’*‘需要写作’\*’，’\‘需要写作’\\‘等，视不同的解释环境而定。  </p>
<p>  <strong>注</strong>：如果各个方程需要在某个字符处对齐（如等号对齐），只需在所有要对齐的字符前加上 <code>&amp;</code> 符号。如果不需要公式编号，只需在宏包名称后加上 <code>*</code> 号。</p>
<script type="math/tex; mode=display">
\begin{equation}
\left\{ 
\begin{aligned}
\min \quad&{f=a-b}\\
{s.t.}\quad &{a =b(x), \quad x\in [0,L] } \\
(c+d)(e+f)=e \\
(df+cg)=0 \\
(adv-ert)(e+f)=e
\end{aligned} \right .
\end{equation}</script><h2 id="4-2-分情况讨论方程式"><a href="#4-2-分情况讨论方程式" class="headerlink" title="4.2 分情况讨论方程式"></a>4.2 分情况讨论方程式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f(x) =</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">x^2 \qquad &amp; a \gt 0 \\</span><br><span class="line">e^x \qquad &amp; a \le 0</span><br><span class="line">\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
f(x) = \begin{cases}
x^2 \qquad & a \gt 0 \\
e^x \qquad & a \le 0
\end{cases}</script><p><strong>THE END</strong> 感谢您的阅读~</p>
<p><del>P.S. 你可以不用理会下面这个版权方框</del></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Markdown</category>
        <category>LaTex</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>LaTex</tag>
        <tag>Maths</tag>
      </tags>
  </entry>
  <entry>
    <title>序言</title>
    <url>/2021/09/12/%E5%BA%8F%E8%A8%80/</url>
    <content><![CDATA[<blockquote>
<p>在现实断裂的地方<br>梦 汇成了海</p>
<p>顾城 《弥合》  </p>
</blockquote>
<p>所以你好 欢迎来到 <strong>故垒西边2009的个人博客</strong>。<br>这是我的博客 主要写一些技术类的文章<br>当然 可能还会放一些自己的作品<br>那么请持续关注啦😀<br>比心 ❤</p>
<span id="more"></span>
<h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><p>咸鱼终于想起来要更新啦哈哈哈哈哈。<br>目前在江苏省苏州中学勤奋<del>睡觉</del>学习.jpg<br>喜欢编程，喜欢设计，喜欢尝试各种新奇好玩的东西。<br>喜欢书，喜欢诗和奇奇怪怪的科普。<br>喜欢明信片，喜欢吃。<br>觉得自己应该是一只有趣的咸鱼😉</p>
<h3 id="关于这个博客"><a href="#关于这个博客" class="headerlink" title="关于这个博客"></a>关于这个博客</h3><p>由于各种时间不够，上了初中就只能不定期诈尸😅<br><del>由于各种时间不够，所以大概放假前就都只能不定期诈尸啦。</del></p>
<p>但是一旦闲下来就会<del>频繁诈尸</del>哦。<br>所以请多多关注哦😃</p>
<h3 id="关于文章转载和其他"><a href="#关于文章转载和其他" class="headerlink" title="关于文章转载和其他"></a>关于文章转载和其他</h3><p>如果没有特殊说明 本站所有文章均采用 <strong><a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">CC BY-NC-SA 4.0 CN</a></strong> 许可协议<br>转载请注明作者并最好附带原文链接哦<br>顺便如果喜欢我的博客 欢迎友链😁</p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>那么，送上一首Alan Walker的End Of Time。<br>请多多指教啦😊</p>
<p><a href="https://i.y.qq.com/v8/playsong.html?songid=255148147#webchat_redirect">https://i.y.qq.com/v8/playsong.html?songid=255148147#webchat_redirect</a></p>
]]></content>
  </entry>
  <entry>
    <title>真的非常简单-Markdown基本语法</title>
    <url>/2021/08/25/%E7%9C%9F%E7%9A%84%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95-Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p>在很多博客、论坛，包括<code>Github Pages</code>(参见<a href="https://guleixibian2009.github.io/2021/08/15/GithubPages-简单易上手的网站制作-Jekyll版/">这篇文章</a>) 里都有大量运用到一种叫做<code>Markdown</code>的文本语言。不管你是在创建自己的网站、写文章，一般平台都需要写<code>Markdown</code>。如果你想学习<code>Markdown</code>，你算是来对地方了！</p>
<span id="more"></span>
<h2 id="0-Markdown-是什么？"><a href="#0-Markdown-是什么？" class="headerlink" title="0. Markdown 是什么？"></a>0. <code>Markdown</code> 是什么？</h2><blockquote>
<p><code>Markdown</code>是一种轻量级标记语言，创始人为约翰·格鲁伯(英语:John Gruber)。<br>它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的<code>XHTML</code>(或者<code>HTML</code>)文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。<br>由于<code>Markdown</code>的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，目前许多网站都广泛使用<code>Markdown</code>来撰写帮助文档或是用于论坛上发表消息。如<code>GitHub</code>、<code>OpenStreetMap</code> 、<code>SourceForge</code>、简书等，甚至还能被使用来撰写电子书。<br>（摘自百度百科）  </p>
</blockquote>
<p>注：一个好的编辑器是学习的基础。如果你坚持<code>WYSIWYG</code>（所见即所得），这里推荐开源项目<code>MarkText</code>。官网：<a href="https://github.com/marktext/marktext/">https://github.com/marktext/marktext/</a>。当然你也可以用<code>VSCode</code>或者（付费，虽然超好）<code>Typora</code>。</p>
<hr>
<h2 id="1-文章标题-amp-小标题"><a href="#1-文章标题-amp-小标题" class="headerlink" title="1. 文章标题&amp;小标题"></a>1. 文章标题&amp;小标题</h2><h3 id="1-1-像HTML一样写标题"><a href="#1-1-像HTML一样写标题" class="headerlink" title="1.1 像HTML一样写标题"></a>1.1 像<code>HTML</code>一样写标题</h3><p>在<code>HTML</code>里，标题分六级：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is an H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This is an H2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is an H3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>相对应的，<code>Markdown</code>标题也分六级。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># This is an H1  </span></span><br><span class="line"><span class="section">## This is an H2  </span></span><br><span class="line">...  </span><br><span class="line"><span class="section">###### This is an H6  </span></span><br></pre></td></tr></table></figure>
<p>就像你看到的那样，每层标题就是几个 <strong><code>#</code></strong>。</p>
<h3 id="1-2-Markdown专属标题"><a href="#1-2-Markdown专属标题" class="headerlink" title="1.2 Markdown专属标题"></a>1.2 <code>Markdown</code>专属标题</h3><p>不过，在<code>Markdown</code>中表示标题也可以用一种特殊的方式。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">This is an H1</span></span><br><span class="line"><span class="section">=============</span></span><br><span class="line"></span><br><span class="line"><span class="section">This is an H2</span></span><br><span class="line"><span class="section">-------------</span></span><br></pre></td></tr></table></figure>
<p>不过它本身只支持2种标题，即大、小标题。</p>
<hr>
<h2 id="2-文字样式语法"><a href="#2-文字样式语法" class="headerlink" title="2. 文字样式语法"></a>2. 文字样式语法</h2><p>在<code>Markdown</code>中，文字可以是<em>斜体</em>、<strong>粗体</strong>、<strong><em>粗斜体</em></strong>,<del>删除线</del>，<u>下划线</u>。</p>
<h3 id="2-1-基本样式"><a href="#2-1-基本样式" class="headerlink" title="2.1 基本样式"></a>2.1 基本样式</h3><ul>
<li><p>斜体用一个<code>*</code>包围，就像<code>*这是斜体*</code>，显示出来就是 <em>这是斜体</em> </p>
</li>
<li><p>粗体用两个<code>*</code>包围，就像<code>**这是粗体**</code>，显示出来就是 <strong>这是粗体</strong></p>
</li>
<li><p>粗斜体用三个<code>*</code>包围，就像<code>***这是粗斜体***</code>，显示出来就是 <strong><em>这是粗斜体</em></strong></p>
<p>（本质上它其实就是<strong>粗体</strong>包住了<em>斜体</em>，所以 <strong><em>你交学费</em></strong> 了吗）</p>
</li>
<li><p>删除线用两个<code>~</code>包围，就像<code>~~这是删除线~~</code>，显示出来就是 <del>这是删除线</del>  </p>
</li>
<li><p><code>@mention</code>：<code>GFM</code>中的一种“点名”的方式，其他时候基本没用。</p>
</li>
</ul>
<h4 id="2-1-1-引用块"><a href="#2-1-1-引用块" class="headerlink" title="2.1.1 引用块"></a>2.1.1 引用块</h4><p>想要突出显示你引用了某段话？可以使用引用段落！</p>
<blockquote>
<p>这就是一个简单的引用了！你可以在这里面<em>使用</em> <strong>其他</strong><code>的语法</code>。它的语法是：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 引用引用引用引用引用引用引用引用！</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>引用以一个右尖括号开始。一般情况下，我们在多行引用时，会在每一行的开头加一个符号，但如果你懒……</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod</span></span><br><span class="line"><span class="quote">&gt; tempor incididunt ut labore et dolore magna aliqua.</span></span><br></pre></td></tr></table></figure>
<p>可以变为：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  </span></span><br><span class="line">tempor incididunt ut labore et dolore magna aliqua.</span><br></pre></td></tr></table></figure>
<blockquote>
<p>想要嵌套引用，直接多加一个符号！</p>
<blockquote>
<p>嵌套引用中！</p>
</blockquote>
</blockquote>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; Lorem ipsum...</span></span><br><span class="line"><span class="quote">&gt; &gt; Lorem ipsum...</span></span><br></pre></td></tr></table></figure>
<h3 id="2-2-某些来自HTML的样式"><a href="#2-2-某些来自HTML的样式" class="headerlink" title="2.2 某些来自HTML的样式"></a>2.2 某些来自<code>HTML</code>的样式</h3><blockquote>
<p>由于<code>Markdown</code>可以直接转换成<code>HTML</code>（在百科里说过了），所以有很多<code>HTML</code>标签都可以在<code>Markdown</code>中使用。比如说，<code>&lt;u&gt;</code> <code>&lt;kbd&gt;</code> <code>&lt;script&gt;</code>（当然也不是所有标签都受支持，得看编译器） 。<strong>如果可能，他们会直接被插入生成的<code>HTML</code>文件中</strong>。</p>
</blockquote>
<h4 id="2-2-1-瞎划线（下划线）"><a href="#2-2-1-瞎划线（下划线）" class="headerlink" title="2.2.1 瞎划线（下划线）"></a>2.2.1 瞎划线（下划线）</h4><p>下划线是用<code>HTML</code>实现的，在<code>HTML</code>里下划线是<code>&lt;u&gt;</code>,所以语法就是<code>&lt;u&gt;这是下划线&lt;/u&gt;</code>,显示出来就是<u>这是下划线</u>。  </p>
<h4 id="2-2-2-颜色"><a href="#2-2-2-颜色" class="headerlink" title="2.2.2 颜色"></a>2.2.2 颜色</h4><p>如果<font color=green> 你 </font>需要给文字调 <font color=red> 颜色 </font> ，可以用 <code>&lt;font&gt;</code> 标签，语法为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span> Some text <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这个<code>&lt;font&gt;</code>标签接收一个参数<code>color</code>。你可以把它设为一些常见的颜色，比如</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">颜色</th>
<th style="text-align:center">效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>&lt;font color=Red&gt;</code></td>
<td style="text-align:center"><font color=Red>Red</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=Yellow&gt;</code></td>
<td style="text-align:center"><font color=Yellow>Yellow</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=Blue&gt;</code></td>
<td style="text-align:center"><font color=Blue>Blue</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=Green&gt;</code></td>
<td style="text-align:center"><font color=Green>Green</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=Gold&gt;</code></td>
<td style="text-align:center"><font color=Gold>Gold</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=Grey&gt;</code></td>
<td style="text-align:center"><font color=Grey>Grey</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=Purple&gt;</code></td>
<td style="text-align:center"><font color=Purple>Purple</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=Azure&gt;</code></td>
<td style="text-align:center"><font color=Azure>Azure</font></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;font color=GreenYellow&gt;</code></td>
<td style="text-align:center"><font color=GreenYellow>GreenYellow</font></td>
</tr>
</tbody>
</table>
</div>
<p>如果你还想要其他的颜色，你可以访问 <a href="https://www.w3school.com.cn/tags/html_ref_colornames.asp">https://www.w3school.com.cn/tags/html_ref_colornames.asp</a> 来研究更多颜色~  </p>
<p>另外，这其实是一个过时了的<code>HTML</code> 标签。所以，我想，还是要避免使用吧。如果可行，可以试试行内<code>CSS</code>，即：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="2-2-3-按键？？"><a href="#2-2-3-按键？？" class="headerlink" title="2.2.3 按键？？"></a>2.2.3 按键？？</h4><p>听说过<code>&lt;kbd&gt;</code>吗？<del>（好奇）</del>我猜你肯定知道！啊啊，不知道？？？我教你！选中那个<code>&lt;kbd&gt;</code>，然后按住<kbd>Ctrl+C</kbd>，选中别处，<kbd>Ctrl+V</kbd>！这就是<code>&lt;kbd&gt;</code>了，它表示一种快捷键方式。语法就是：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl+Shift+L<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-3-脚注"><a href="#2-3-脚注" class="headerlink" title="2.3 脚注"></a>2.3 脚注</h3><p>这是一个脚注 <sup><a href="#fn_1" id="reffn_1">1</a></sup> 。脚注的语法是：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">TextTextText [^name] TextTextText</span><br></pre></td></tr></table></figure>
<p>这个脚注一般用数字表示。当然它还有更高级的功能，见下：</p>
<hr>
<h2 id="3-链接与图片"><a href="#3-链接与图片" class="headerlink" title="3. 链接与图片"></a>3. 链接与图片</h2><h3 id="3-1-链接"><a href="#3-1-链接" class="headerlink" title="3.1 链接"></a>3.1 链接</h3><p>文章中的“链接”指“超链接”。 <a href="https://guleixibian2009.github.io/">这是一个超链接实例</a> ，它指向我的主页。<br>链接的语法为 </p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">[<span class="string">Name</span>](<span class="link">Link</span>) </span><br><span class="line">&lt;!--示例--&gt;</span><br><span class="line">[<span class="string">主页</span>](<span class="link">https://www.example.com/</span>)</span><br></pre></td></tr></table></figure>
<p>想要直接显示这个链接而不显示代替名？可以这样做：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="xml">&lt;https://example.com&gt;</span></span><br></pre></td></tr></table></figure>
<p>显示出来就是：<a href="https://example.com">https://example.com</a>  </p>
<p>想要在一处集中显示所有链接？可以这样使用脚注来替代！</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">[<span class="string">Example</span>](<span class="link">example</span>)</span><br><span class="line">[example] : https://www.example.com/</span><br></pre></td></tr></table></figure>
<p>当然我不太习惯用这个。</p>
<h3 id="3-2-图片"><a href="#3-2-图片" class="headerlink" title="3.2 图片"></a>3.2 图片</h3><p>图片的语法和链接很相似，只是在<code>[Name](Place)</code> 之前加上一个 <code>!</code> (都是英文标点),如</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">![<span class="string">Name</span>](<span class="link">Link &quot;替代名&quot;</span>)</span><br><span class="line">&lt;!--示例--&gt;</span><br><span class="line">![<span class="string">Pull Shark</span>](<span class="link">https://github.githubassets.com/images/modules/profile/achievements/pull-shark-default.png &quot;Pull Shark&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>“替代名”不是必要的，它会被解析为<code>img</code>标签的<code>alt</code>属性。在方括号<code>[Pull Shark]</code>中的内容在有些编译器下会作为一种标题被显示在渲染的图片下面。e.g.</p>
<p><img data-src="https://github.githubassets.com/images/modules/profile/achievements/pull-shark-default.png" alt="Pull Shark" title="Pull Shark"></p>
<p>当然一些高级一些的属性（如居中）还是用<code>HTML</code>做出来的！（不知道为什么<code>Hexo</code>会自动居中）</p>
<hr>
<h2 id="4-列表"><a href="#4-列表" class="headerlink" title="4. 列表"></a>4. 列表</h2><p>在<code>Markdown</code>中，列表分两种：有序的，和无序的。</p>
<h3 id="4-1-有序列表"><a href="#4-1-有序列表" class="headerlink" title="4.1 有序列表"></a>4.1 有序列表</h3><p>有序列表，就像  </p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一个元素  </span><br><span class="line"><span class="bullet">2.</span> 第二个元素  </span><br><span class="line"><span class="bullet">3.</span> 第三个元素</span><br></pre></td></tr></table></figure>
<p>在<code>Markdown</code>中，直接打 <code>1.</code> 就会出现一个有序列表。当然， <code>i.</code> <code>a.</code> 甚至不从头开始也可以：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">a. #1</span><br><span class="line">b. #2</span><br><span class="line">c. #3</span><br></pre></td></tr></table></figure>
<p>当然这还是取决于你用的编译器啦！</p>
<h3 id="4-2-无序列表"><a href="#4-2-无序列表" class="headerlink" title="4.2 无序列表"></a>4.2 无序列表</h3><p>无序列表的原理和有序列表一样，不过不以 <code>1.</code> 打头，而是：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 第一种方式</span><br><span class="line"><span class="bullet">-</span> 第一种方式</span><br></pre></td></tr></table></figure>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+</span> 第二种方式</span><br><span class="line"><span class="bullet">+</span> 第二种方式</span><br></pre></td></tr></table></figure>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第三种方式</span><br><span class="line"><span class="bullet">*</span> 第三种方式</span><br></pre></td></tr></table></figure>
<p>显示出来都是</p>
<ul>
<li>无序列表</li>
<li>无序列表</li>
</ul>
<p>怎么样，够简单吧……</p>
<h3 id="4-3-To-do-list"><a href="#4-3-To-do-list" class="headerlink" title="4.3 To do list"></a>4.3 <code>To do list</code></h3><p>通过无序列表我们还可以创建一个任务表（<code>To do list</code>），如下：</p>
<ul>
<li style="list-style: none"><input type="checkbox" disabled="disabled" checked></input> No.1</li>
<li style="list-style: none"><input type="checkbox" disabled="disabled"></input> No.2</li>
<li style="list-style: none"><input type="checkbox" disabled="disabled" checked></input> No.3</li>
</ul>
<p>语法如下：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> [x] No.1</span><br><span class="line"><span class="bullet">-</span> [ ] No.2</span><br><span class="line"><span class="bullet">-</span> [x] No.3</span><br></pre></td></tr></table></figure>
<p>其中 <code>[x]</code> 表示“已完成”，<code>[ ]</code> 表示“未完成”。可能<code>Hexo</code>有的时候渲染不出来这个，大家可以移步<a href="https://github.com/Guleixibian2009/Website-Ariticle-Backup/blob/master/_posts/Markdown%E4%B8%ADLatex%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.md">原文件</a>查看！</p>
<h3 id="4-4-合并列表"><a href="#4-4-合并列表" class="headerlink" title="4.4 合并列表"></a>4.4 合并列表</h3><p>你可以把多种列表嵌套起来。如：</p>
<ul>
<li><p>Hello World!</p>
</li>
<li><p>这是一个列表……</p>
<ol>
<li><p>里面还有一个列表！</p>
</li>
<li><p>的确是可以嵌套的！</p>
</li>
</ol>
</li>
<li><p>还是原来那个列表~</p>
<ul>
<li><p>可以同样嵌套无序列表</p>
</li>
<li><p>等等等等</p>
</li>
<li><p>[x] 还可以更改列表类型啊！</p>
</li>
<li><p>[ ] 怎么样？</p>
</li>
</ul>
</li>
<li><p>就是这样啦！</p>
</li>
</ul>
<hr>
<h2 id="5-文档里的小“零件”"><a href="#5-文档里的小“零件”" class="headerlink" title="5.  文档里的小“零件”"></a>5.  文档里的小“零件”</h2><h3 id="5-1-分割线"><a href="#5-1-分割线" class="headerlink" title="5.1 分割线"></a>5.1 分割线</h3><p>分割线这个东东在文章分节这个功能上还是非常的实用的。你可以这样创建一条：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">或</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure>
<p>正如你看到的那样啦！</p>
<h3 id="5-2-强制换行的几种方式"><a href="#5-2-强制换行的几种方式" class="headerlink" title="5.2 强制换行的几种方式"></a>5.2 强制换行的几种方式</h3><p>在<code>Markdown</code>里面如果你不进行所谓强制换行，那么连续的段落就会被自动连接在一起。这个时候，<code>HTML</code>大兄就会来打杂：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>直接把它放在某一行的结尾，这两行就会自动拆分。如果你嫌麻烦…那么在想要换行的地方（行尾）加两个空格就可以……我也是没法展示了，这个不够直观。</p>
<h3 id="5-3-符号的转义-escaping"><a href="#5-3-符号的转义-escaping" class="headerlink" title="5.3 符号的转义(escaping)"></a>5.3 符号的转义(<code>escaping</code>)</h3><p>什么，这么简单的<code>Markdown</code>都需要转义？好吧，我承认，这还真的要！如果你仔细回想一下（或者预知一下未来，看下面的代码块）你就会发现，我们在处理文字样式的时候我们使用了各种符号，现整理如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>意义</th>
<th>符号</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\</code></td>
<td>反斜杠（转义本身）</td>
<td>``</td>
<td>反引号（代码块）</td>
</tr>
<tr>
<td><code>*</code></td>
<td>星号（加粗，斜体，无序列表等）</td>
<td><code>_</code></td>
<td>下划线（加粗，斜体等）</td>
</tr>
<tr>
<td><code>()</code></td>
<td>小括号（链接，图片）</td>
<td><code>[]</code></td>
<td>中括号（链接，图片）</td>
</tr>
<tr>
<td><code>~</code></td>
<td>波浪号（下标，删除线）</td>
<td><code>$</code></td>
<td>美元（某些情况下，<code>LaTex</code>）</td>
</tr>
<tr>
<td><code>#</code></td>
<td>井号（标题）</td>
<td><code>+</code></td>
<td>加号（无序列表）</td>
</tr>
<tr>
<td><code>-</code></td>
<td>减号（无序列表）</td>
<td><code>.</code></td>
<td>点号（有序列表）</td>
</tr>
<tr>
<td><code>@</code></td>
<td>@号（<code>GFM</code>中，<code>@mention</code>）</td>
<td>`\</td>
<td>`</td>
<td>竖线（表格）</td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td>左尖括号（<code>HTML</code>）</td>
<td><code>&gt;</code></td>
<td>右尖括号（<code>HTML</code>）</td>
</tr>
</tbody>
</table>
</div>
<p>那么，如何转义呢？只需要在需要转义的字符前面添加反斜杠就可以啦！比如，*这段文字其实不是斜体*！</p>
<p>代码如下：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">\<span class="emphasis">*这段文字其实不是斜体!\*</span></span><br><span class="line"><span class="emphasis">*但这个是！*</span></span><br></pre></td></tr></table></figure>
<h3 id="5-4-没什么用的注释"><a href="#5-4-没什么用的注释" class="headerlink" title="5.4 没什么用的注释"></a>5.4 没什么用的注释</h3><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&lt;!-- 这就是个注释了，我甚至不想讲… --&gt;</span><br></pre></td></tr></table></figure>
<p>对对，这就是个<code>HTML</code>注释而已。99.8%的情况下这个东东没有用，但如果…嗯好吧其实也不是一点作用都没有，如<code>Markdown</code>文档中的定位（比如你每天靠<code>GitHub Actions</code>生成点什么）或者<code>Hexo</code>文章的节选会使用<code>&lt;!-- More --&gt;</code>。</p>
<hr>
<h2 id="6-激动人心！代码块"><a href="#6-激动人心！代码块" class="headerlink" title="6. 激动人心！代码块"></a>6. 激动人心！代码块</h2><p><del>是不是等它好久了…</del> 行了也见了这么多行内代码块了，我怎么能不介绍一下呢。</p>
<p>行内代码块，只需将代码块内的内容用 ````包围起来就可以了。如，</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="code">`hello, world!`</span></span><br></pre></td></tr></table></figure>
<p>至于长篇的“大”代码块，有两种方法：</p>
<ol>
<li><p>在“代码块”前缩进4格，直到代码结束；</p>
</li>
<li><p>使用下面这种方式：</p>
</li>
</ol>
<div class="highlight-container">
  <figure class="highlight md">
    <div class="table-container">
      <table>
        <tbody>
          <tr>
            <td class="gutter">
              <pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span></pre>
            </td>
            <td class="code">
              <pre><span class="line">```</span>
<span class="line">Here is some code.</span>
<span class="line">```</span></pre>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </figure>
  <div class="copy-btn"><i class="fa fa-clipboard fa-fw"></i></div>
</div>

<p>想要指定语法并获得高亮技能？看到下面那个<code>python</code>没有！</p>
<div class="highlight-container">
  <figure class="highlight md">
    <div class="table-container">
      <table>
        <tbody>
          <tr>
            <td class="gutter">
              <pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span></pre>
            </td>
            <td class="code">
              <pre><span class="line">```python</span>
<span class="line">def hello():</span>
<span class="line">    print("Hello, world!")</span>
<span class="line"></span>
<span class="line">hello():</span>
<span class="line">```</span></pre>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </figure>
  <div class="copy-btn"><i class="fa fa-clipboard fa-fw"></i></div>
</div>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello, world!&quot;</span>)</span><br><span class="line"></span><br><span class="line">hello()</span><br></pre></td></tr></table></figure>
<h2 id="7-表格来了"><a href="#7-表格来了" class="headerlink" title="7. 表格来了"></a>7. 表格来了</h2><p>需要在自己的文档中直观地表示数据？可以尝试列一个表格！Here we go~</p>
<h3 id="7-1-基本表格"><a href="#7-1-基本表格" class="headerlink" title="7.1 基本表格"></a>7.1 基本表格</h3><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>第一列</th>
<th>第二列</th>
<th>第三列</th>
</tr>
</thead>
<tbody>
<tr>
<td>第一行</td>
<td>数据1</td>
<td>数据2</td>
<td>数据3</td>
</tr>
</tbody>
</table>
</div>
<p>光看这个表可能还真猜不出来它的语法是什么……但其实如果我真的写出来却会觉得这种语法也很直观！（不觉得那些竖线很像网格线吗）</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">||第一列|第二列|第三列|</span><br><span class="line">|第一行|数据1|数据2|数据3|</span><br></pre></td></tr></table></figure>
<p>所以，每两个<code>|</code>之间是一格，5个<code>|</code>就是4格。没有限制最多多少行或多少列，且不要求每行格数相同！只是我这里渲染不出来……</p>
<h3 id="7-2-每列的居中、靠右"><a href="#7-2-每列的居中、靠右" class="headerlink" title="7.2 每列的居中、靠右"></a>7.2 每列的居中、靠右</h3><p>什么，还有这种功能？好吧，我们只需要一条特殊“控制行”：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">|     | 第一列 | 第二列 | 第三列 |</span><br><span class="line">| --- |:--- |:---:| ---:|</span><br><span class="line">| 第一行 | 靠左  | 居中  | 靠右  |</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th style="text-align:left">第一列</th>
<th style="text-align:center">第二列</th>
<th style="text-align:right">第三列</th>
</tr>
</thead>
<tbody>
<tr>
<td>第一行</td>
<td style="text-align:left">靠左</td>
<td style="text-align:center">居中</td>
<td style="text-align:right">靠右</td>
</tr>
</tbody>
</table>
</div>
<hr>
<p>到这里，你已经学完了基础的<code>Markdown</code>语法！想要学习<code>Markdown</code>中更高级的图表功能？敬请期待下一篇教程！</p>
<hr>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>以下是注释内容：  </p>
<blockquote id="fn_1">
<sup>1</sup>. 你学废了吗？<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>编程</category>
        <category>Markdown</category>
        <category>Markdown语法</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Markdown</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>超详细：这个Hexo网站，到底是怎么做出来的？</title>
    <url>/2022/08/16/hexo-website-tutorial/</url>
    <content><![CDATA[<p>断更好久了，今天终于抽空来写一点。不知不觉之间，这个网站已经上线运行1年多了，于是，我就开了这个新坑（<code>Hexo</code>网站的配置以及深度开发），应该够我写一阵子了，也算作送给这1年来的present……我也会随着教程的更新<a href="/hexo-website-tutorial">重复一遍过程</a>，以保证内容的正确性。</p>
<p>顾名思义，这篇文章就记录一下我在开发这个网站时的操作过程，以及可能会遇见的一些问题。你可以在我的基础上继续深入，自由发挥！好了，闲话少说，我们这篇超详细的<code>Hexo</code>网站教程，马上开始！  </p>
<p><strong>注：本教程所用平台是<code>Win10</code>，其他系统可能有细微差别~由于涉及到<code>GitHub</code>，建议先参照<a href="https://guleixibian2009.github.io/2021/08/14/3%E4%B8%AA%E5%B0%8F%E5%A6%99%E6%8B%9B%E5%8A%A0%E9%80%9F%E4%BD%A0%E7%9A%84GitHub/">3个小妙招</a>来加个速！</strong></p>
<span id="more"></span>
<hr>
<h2 id="1-准备工作部分"><a href="#1-准备工作部分" class="headerlink" title="1. 准备工作部分"></a>1. 准备工作部分</h2><h3 id="1-1-你可能一定会用到的那些软件"><a href="#1-1-你可能一定会用到的那些软件" class="headerlink" title="1.1 你可能一定会用到的那些软件"></a>1.1 你<del>可能</del>一定会用到的那些软件</h3><p>为了使用<code>Hexo</code>这个强大的框架，我们需要先安装一些依赖，还有一些其他的编程软件。为了真的把这个教程变得“新手向”一点，我就把你需要的软件都列在了这里：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>必要性</th>
<th>名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>依赖</td>
<td>高</td>
<td><code>NodeJS</code></td>
</tr>
<tr>
<td>编程相关、配置网站参数</td>
<td>中高</td>
<td>（推荐）<code>VSCode</code>、<code>Sublime Text</code>以及任何你用着顺手的编辑器</td>
</tr>
<tr>
<td>文章相关</td>
<td>中<del>（你甚至可以用记事本）</del></td>
<td>（推荐）<code>Marktext</code>（开源免费）、<code>Typora</code>（付费）</td>
</tr>
<tr>
<td>命令行</td>
<td>高</td>
<td><code>Windows Terminal Preview</code>（集成终端，支持自定义）、<code>Git</code>（需要配置<code>SSH</code>连接，暂时请先自己搜）</td>
</tr>
</tbody>
</table>
</div>
<p><strong>注：如果你使用<code>chocolatey</code>，你可以尝试先用命令行安装！</strong> 这些软件我们依次来说：</p>
<h4 id="1-1-1-NodeJS"><a href="#1-1-1-NodeJS" class="headerlink" title="1.1.1 NodeJS"></a>1.1.1 <code>NodeJS</code></h4><p><code>NodeJS</code>是一款很流行的<code>JavaScript</code>运行时（环境），也是使用<code>Hexo</code>的必装依赖。打开<a href="https://nodejs.org/en/">安装官网</a>，如下图，推荐选择左侧的长期支持版本（<code>LTS</code>版本）。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/16/v04OaV.png" alt=""></p>
<p>安装之后，打开命令行，输入：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">node <span class="literal">-v</span></span><br><span class="line">npm <span class="literal">-v</span></span><br></pre></td></tr></table></figure>
<p>来检测是否安装成功。如果都可以成功返回版本号，那么你就可以进行下一步操作了！</p>
<blockquote>
<p>注：一般情况下，官方下载源会很慢，我们需要给<code>NodeJS</code>修改镜像源。使用</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>
<p>来调整为国内镜像源。</p>
</blockquote>
<h4 id="1-1-2-Markdown编辑器Marktext"><a href="#1-1-2-Markdown编辑器Marktext" class="headerlink" title="1.1.2 Markdown编辑器Marktext"></a>1.1.2 <code>Markdown</code>编辑器<code>Marktext</code></h4><p><img data-src="https://s1.ax1x.com/2022/08/16/v057WD.png" alt=""></p>
<p>周知所众，我们写博客一般都是用<code>Markdown</code>这种标记语言的（不会写？参见这篇<a href=""><code>Markdown</code>教程</a>）。纯净的界面，即时的渲染、开源与免费三大特点让我爱上了这款编辑器。别的咱也不说，好不好用你自己说了算！这个项目的开源地址在<code>GitHub</code>上：<a href="https://github.com/marktext/marktext/">https://github.com/marktext/marktext/</a>，之后怎么安装我就不用说了吧。</p>
<h4 id="1-1-3-Windows终端·预览版"><a href="#1-1-3-Windows终端·预览版" class="headerlink" title="1.1.3 Windows终端·预览版"></a>1.1.3 <code>Windows</code>终端·预览版</h4><p>如果你嫌<code>CMD</code>或者<code>Powershell</code>的界面、字体不合你的心意，或者就想尝试一些新功能，你可以试一下<code>Windows Terminal Preview</code>。它把几个终端都打包在了一起，且支持自定义界面和启动位置等，同时可以分屏。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/17/vBcCg1.png" alt=""></p>
<p>你可以在<code>Microsoft Store</code>中下载到这款终端·预览。另外，需要改一下<code>powershell</code>的执行策略，管理员权限执行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass</span><br></pre></td></tr></table></figure>
<p>即可。</p>
<h4 id="1-1-4-hexo，你网站的框架"><a href="#1-1-4-hexo，你网站的框架" class="headerlink" title="1.1.4 hexo，你网站的框架"></a>1.1.4 <code>hexo</code>，你网站的框架</h4><p>上面的软件都准备好了吗？我们来安装博客框架罢。在<code>powershell</code>中执行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure>
<p>就可以全局安装这个框架了。安装好之后，重启命令行，并用<code>hexo</code>命令检测是否安装成功：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/17/vBWTOI.png" alt=""></p>
<h3 id="1-2-你的repo与服务器"><a href="#1-2-你的repo与服务器" class="headerlink" title="1.2 你的repo与服务器"></a>1.2 你的<code>repo</code>与服务器</h3><p>我们来到<code>GitHub</code>，并新建一个仓库，名称叫作<code>&#123;username&#125;.github.io</code>。如果你曾跟着之前的文章做过<code>Jekyll</code>版网站、<code>master</code>分支被占用的话，你可以新建一个<code>hexo</code>分支。注意需要勾选<code>LICENSE</code>和<code>README</code>，这样可以形成一个<code>master</code>分支。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/17/vB4wY8.png" alt=""></p>
<p>之后，你就会得到类似这样的一个页面：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/17/vB5y9O.png" alt=""></p>
<p>然后我们转到<code>Settings</code>，启用（修改）<code>GitHub Pages</code>的相关设置，选择<code>Deploy from a branch</code>后勾选你的目标分支。如果你完全跟着我来的，默认是<code>master</code>；如果你以前动用过这个仓库，则切换到你新的分支上。如下图，点击<code>Save</code>就可以触发一次更新：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/17/vB563D.png" alt=""></p>
<p>稍等片刻（大概1~3分钟）后，访问<code>https://&#123;username&#125;.github.io</code>（这就是你的网站域名了），如果显示的不是下面这个灰色的<code>404</code>，那么我们就可以开始下一步了！</p>
<p><img data-src="https://s1.ax1x.com/2022/08/17/vDVNFI.png" alt=""></p>
<blockquote>
<p>注：我曾经在<code>Jekyll</code>那篇文章中说过，<code>GitHub Pages</code>会在每一次<code>commit</code>之后触发一次更新<code>action</code>，即自动化。由于需要在服务器上进行操作，可能会出现”排队“的情况，如果设置没错却迟迟出不来”非404“页面，我想，你可能需要继续等一等……</p>
</blockquote>
<hr>
<h2 id="2-初始化、主题与一些设置"><a href="#2-初始化、主题与一些设置" class="headerlink" title="2. 初始化、主题与一些设置"></a>2. 初始化、主题与一些设置</h2><h3 id="2-1-让Hexo运行起来！"><a href="#2-1-让Hexo运行起来！" class="headerlink" title="2.1 让Hexo运行起来！"></a>2.1 让<code>Hexo</code>运行起来！</h3><p>接下来我们就来让<code>Hexo</code>发挥一下它的威力罢。找到一个合适的文件夹，然后执行下面这条命令来初始化一个<code>Hexo</code>项目（这里以我自己为例，自己修改文件夹名）：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo init hexo_website_tutorial //换上自己的文件夹名</span><br></pre></td></tr></table></figure>
<p>正常情况下你获得到如下的结果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/17/vDamKe.png" alt=""></p>
<p>这个时候，我们<code>cd</code>看一下都创建了哪些东东：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├─.github</span><br><span class="line">├─node_modules</span><br><span class="line">├─scaffolds</span><br><span class="line">├─source</span><br><span class="line">│  └─_posts</span><br><span class="line">└─themes</span><br></pre></td></tr></table></figure>
<p>简要说明一下：<code>.github</code>文件夹可以直接无视；<code>node_modules</code>是一些<code>hexo</code>本身的依赖；<code>scaffolds</code>里放了一些模板<code>Markdown</code>，暂且不用管它；<code>source</code>文件夹中会放我们的文章；<code>themes</code>文件夹则是为之后应用主题做准备。还有一个<code>_config.yml</code>文件，是我们网站的配置文件。</p>
<p>那么，我们怎么生成一个静态的网站呢？此时我们就要用到<code>hexo generate</code>（简称<code>hexo g</code>）命令了。它会读取我们写的文章，配合着主题设置生成静态文件，并复制二进制文件（图片、音频等）。注意，为了网站资源链接可以正确工作，我们要在<code>_config.yml</code>文件中改一行，是你网站的链接：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/18/vrkW28.png" alt=""></p>
<p>修改好之后，执行截图：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/18/vDXL8A.png" alt=""></p>
<p>执行之后，我们会发现多了一个<code>public</code>文件夹和<code>db.json</code>文件。<code>public</code>文件夹会在生成静态文件之后复制到这里，方便上传；<code>db.json</code>是网站的一些<code>meta</code>信息，可以不用管。</p>
<p>生成完了，我们一定会想看一看生成后的效果。你可以使用<code>hexo server</code>命令在<code>4000</code>端口上启动一个服务器。为了方便，你可以加一个参数<code>-o</code>来自动打开浏览器。如下：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo s <span class="literal">-o</span></span><br></pre></td></tr></table></figure>
<p>在<code>4000</code>端口上，我们的默认网站样式类似这样：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/18/vDXOgI.png" alt=""></p>
<p>此时这个主题叫做<code>landscape</code>。由于我个人有更喜欢的主题（<code>NeXT</code>）并且<code>landscape</code>主题可以开发的部分不多，我们不会使用这款主题。稍后你就会知道如何切换主题。</p>
<h3 id="2-2-部署到服务器"><a href="#2-2-部署到服务器" class="headerlink" title="2.2 部署到服务器"></a>2.2 部署到服务器</h3><p>想让别人看到我们的网站，我们就要更新<code>GitHub</code>上的仓库，触发部署<code>action</code>。可是，我不希望每一次都要用3条<code>git</code>命令来上传，怎么办？一个好消息是，<code>hexo</code>提供给我们一个<code>deploy</code>命令。</p>
<h4 id="2-2-1-远程仓库参数设置"><a href="#2-2-1-远程仓库参数设置" class="headerlink" title="2.2.1 远程仓库参数设置"></a>2.2.1 远程仓库参数设置</h4><p>当然了，<code>hexo</code>此时也不知道我们的仓库在哪里，对吧。这时候配置文件<code>_config.yml</code>就可以派上用场了。我们找到它的<code>Deploy</code>部分，并添加一些配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/18/vrCnyj.png" alt=""></p>
<p>具体格式如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@github.com:&#123;username&#125;/&#123;repo_name&#125;.git</span></span><br><span class="line">    <span class="attr">branch:</span> &#123;<span class="string">branch_name</span>&#125;</span><br></pre></td></tr></table></figure>
<p>然后，我们来试一下<code>hexo d</code>这个命令……</p>
<p><img data-src="https://s1.ax1x.com/2022/08/18/vriuaq.png" alt=""></p>
<p>诶，为什么会这样呢？<code>Deployer not found</code>是什么意思？原来，我们还需要安装一个官方插件：<code>hexo-deployer-git</code>。</p>
<h4 id="2-2-2-hexo-deployer-git"><a href="#2-2-2-hexo-deployer-git" class="headerlink" title="2.2.2 hexo-deployer-git"></a>2.2.2 <code>hexo-deployer-git</code></h4><p>我们在网站根目录下执行这个命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm i hexo<span class="literal">-deployer</span><span class="literal">-git</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure>
<p>然后再执行<code>hexo d</code>（太长了，不用图片了）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Setting up Git deployment...</span><br><span class="line">Initialized empty Git repository in D:/08 网站/hexo_website_tutorial/.deploy_git/.git/</span><br><span class="line">[master (root-commit) 0b3e2b7] First commit</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 placeholder</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">[master 3a2b089] Site updated: 2022-08-18 17:47:15</span><br><span class="line"> 18 files changed, 5172 insertions(+)</span><br><span class="line"> create mode 100644 2022/08/17/hello-world/index.html</span><br><span class="line"> create mode 100644 archives/2022/08/index.html</span><br><span class="line"> create mode 100644 archives/2022/index.html</span><br><span class="line"> create mode 100644 archives/index.html</span><br><span class="line"> create mode 100644 css/fonts/FontAwesome.otf</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.eot</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.svg</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.ttf</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.woff</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.woff2</span><br><span class="line"> create mode 100644 css/images/banner.jpg</span><br><span class="line"> create mode 100644 css/style.css</span><br><span class="line"> create mode 100644 fancybox/jquery.fancybox.min.css</span><br><span class="line"> create mode 100644 fancybox/jquery.fancybox.min.js</span><br><span class="line"> create mode 100644 index.html</span><br><span class="line"> create mode 100644 js/jquery-3.4.1.min.js</span><br><span class="line"> create mode 100644 js/script.js</span><br><span class="line"> delete mode 100644 placeholder</span><br><span class="line">Enumerating objects: 34, done.</span><br><span class="line">Counting objects: 100% (34/34), done.</span><br><span class="line">Delta compression using up to 8 threads</span><br><span class="line">Compressing objects: 100% (26/26), done.</span><br><span class="line">Writing objects: 100% (34/34), 882.39 KiB | 1.49 MiB/s, done.</span><br><span class="line">Total 34 (delta 3), reused 0 (delta 0), pack-reused 0</span><br><span class="line">remote: Resolving deltas: 100% (3/3), done.</span><br><span class="line">To github.com:Guleixibian2009/hexo-website-tutorial.git</span><br><span class="line"> + 5066890...3a2b089 HEAD -&gt; master (forced update)</span><br><span class="line">branch &#x27;master&#x27; set up to track &#x27;git@github.com:Guleixibian2009/hexo-website-tutorial.git/master&#x27;.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure>
<p>如果出现类似的结果，那我们就已经部署成功了。这个时候我们去<code>GitHub</code>上去，稍等一会后并访问你的网站看一下，你应该可以看到和本地端口上完全一样的页面。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/18/vrkDDH.png" alt=""></p>
<h3 id="2-3-切换到NexT主题"><a href="#2-3-切换到NexT主题" class="headerlink" title="2.3 切换到NexT主题"></a>2.3 切换到<code>NexT</code>主题</h3><p>当我们可以成功的部署到<code>GitHub</code>上去后，我们就可以开始切换主题了。我们要用的这个主题叫做<code>NexT</code>，准确的说，是<code>Gemini</code>子主题。为了使用这个主题，我们在根目录下克隆一下<code>GitHub</code>上面的主题仓库<code>theme-next/hexo-theme-next</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme<span class="literal">-next</span>/hexo<span class="literal">-theme</span><span class="literal">-next</span> themes/next</span><br></pre></td></tr></table></figure>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vrxxmt.png" alt=""></p>
<p>然后打开根目录下的<code>_config.yml</code>（有区别于之后我们会用到主题内的<code>_config.yml</code>文件，切勿搞混）：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vrzSTf.png" alt=""></p>
<p>修改过后重新生成一遍静态文件（<code>hexo clean</code>+<code>hexo g</code>），打开本地端口（<code>hexo s -o</code>）可以看见，我们已经切换到<code>NexT</code>的<code>Muse</code>子主题了：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vrzDcd.png" alt=""></p>
<p>实际上，<code>NexT</code>主题分别是有4个子主题的。打开<code>themes/next</code>文件夹下（简称主题文件夹下<code>_config.yml</code>），找到95行，可以看到所有子主题，以及黑夜模式的设置（本人并未开启）：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vrzynI.png" alt=""></p>
<p>要切换到<code>Gemini</code>子主题，只需把第100行注释掉，并取消注释第103行即可。我们重新生成一下（还记得那3条命令吧）：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vspsTP.png" alt=""></p>
<p>主题是切换过来了，可是我看着怎么是英文的呢？或者，感觉东西太少了？还有，为什么我叫<code>John Doe</code>？别急，下一步，便是设置一些<code>metadata</code>。</p>
<h3 id="2-4-网站信息设置"><a href="#2-4-网站信息设置" class="headerlink" title="2.4 网站信息设置"></a>2.4 网站信息设置</h3><p>在网站根目录下的<code>_config.yml</code>的开头，你可以看到这样的几条配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsp6Ff.png" alt=""></p>
<p>详细地解释一下（我自己先修改了）：<code>title</code>、<code>subtitle</code>、<code>description</code>、<code>author</code>、<code>language</code>几项在更改后会改变下图中的对应位置，<code>description</code>、<code>keywords</code>、<code>language</code>、<code>timezone</code>几项则是变成了网站<code>metadata</code>。（<kbd>Ctrl+I</kbd>应该可以查看）</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vs9EXd.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vs9ZnA.png" alt=""></p>
<p><del>（可能做得有些丑，谅解下哈）</del></p>
<blockquote>
<p>回顾：<code>hexo</code>常用命令（以后我就不会再提醒咯）</p>
<ul>
<li><p>清除生成缓存——<code>hexo clean</code>。（对主题上的混乱或配置未生效有帮助）</p>
</li>
<li><p>生成静态文件——<code>hexo g</code>。</p>
</li>
<li><p>部署到远程服务器——<code>hexo d</code>。</p>
</li>
<li><p>打开本地服务器端口——<code>hexo s</code>。</p>
</li>
</ul>
<p>教你几个小妙招：</p>
<ul>
<li><p><code>hexo d</code>和<code>hexo g</code>其实可以合并成一个命令，叫做<code>hexo g -d</code>，就可以自动先生成再自动部署。</p>
</li>
<li><p><code>hexo s</code>加上参数<code>-o</code>就可以自动在浏览器中打开端口。</p>
</li>
</ul>
</blockquote>
<hr>
<h2 id="3-Gemini子主题的官方配置……"><a href="#3-Gemini子主题的官方配置……" class="headerlink" title="3. Gemini子主题的官方配置……"></a>3. <code>Gemini</code>子主题的官方配置……</h2><p>现在我们就可以给我们的网站添加一些功能与细节了。先打开本地端口，让我们从左往右说：</p>
<h3 id="3-1-左侧的侧边栏"><a href="#3-1-左侧的侧边栏" class="headerlink" title="3.1 左侧的侧边栏"></a>3.1 左侧的侧边栏</h3><p>左边较窄的竖栏叫<code>sidebar</code>（侧边栏），分为上下两部分，上半部分是一个导航栏，存放了一些站内链接；下半部分是关于你、一些网站统计数据、友情链接，这里也是我们可以自定义的地方（非官方的插件，如音乐、天气等，我们在第5节非官方插件中说）。当你打开一片博客后，下半部分也可以作为一个文章目录。下面几张图供参考：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsihCV.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsi43T.png" alt=""></p>
<h4 id="3-1-1-添加更多的站内链接"><a href="#3-1-1-添加更多的站内链接" class="headerlink" title="3.1.1 添加更多的站内链接"></a>3.1.1 添加更多的站内链接</h4><p>仔细研究主题<code>_config.yml</code>，你会找到这样一个区块，正是关于站内链接的：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsFpKe.png" alt=""></p>
<p>看起来，我们目前有两个可用链接（主页、归档），相对应的就是<code>home</code>和<code>archive</code>。</p>
<h5 id="3-1-1-1-添加链接"><a href="#3-1-1-1-添加链接" class="headerlink" title="3.1.1.1 添加链接"></a>3.1.1.1 添加链接</h5><p>我们来试试取消注释<code>about</code>、<code>tags</code>和<code>categories</code>：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vskVoR.png" alt=""></p>
<p>诶，正好，同步增加了三个链接<del>（不过暂时打不开）</del>！那我们是不是就能总结出来填入的格式了？</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">icon</span></span><br></pre></td></tr></table></figure>
<p><code>key</code>指的是链接的名字（不代表链接地址，这个名字后面还会有用），一个冒号，然后是链接地址（可相对可绝对），然后是<code>||</code>标识符，后面跟一个<code>font-awesome</code>图标名（只能用免费版的）。</p>
<p>掌握了语法之后，我们就可以尝试添加一个自己的链接了！假设你新建了一个歌单页面（具体操作参见后面第4节文章相关操作），它的链接是<code>/album/</code>，并且想要用<code>font-awesome</code>中<code>fas fa-compact-disc</code>这个图标，那我们就可以在配置文件中添加这样一行：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="attr">album:</span> <span class="string">/album/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-compact-disc</span></span><br></pre></td></tr></table></figure>
<p>在你重新生成之前，你突发奇想想要把它放在主页那个链接下面，该怎么办呢？我发现，你只需要把这一行移动到<code>home</code>那一行后面即可：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">album:</span> <span class="string">/album/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-compact-disc</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>
<p>效果类似这样：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vskeF1.png" alt=""></p>
<p>可是，明明其他链接都有中文，怎么新加的<code>album</code>就没有？</p>
<h5 id="3-1-1-2-调整i18n"><a href="#3-1-1-2-调整i18n" class="headerlink" title="3.1.1.2 调整i18n"></a>3.1.1.2 调整<code>i18n</code></h5><p>别忘了，<code>NexT</code>主题的默认语言是英文！我们是通过修改配置强制翻译成中文的（可以回顾一下2.4节）。那…我们能不能手动翻译（学名<code>internationalization</code>，国际化，简称<code>i18n</code>)呢？其实是可以的。我们找到这个文件：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsA5gf.png" alt=""></p>
<p>然后我们重新生成，是不是就成功了呢？</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsA48P.png" alt=""></p>
<p>记住这个方法，我们之后也还是会用到的！</p>
<h5 id="3-1-1-3-计数小“徽章”"><a href="#3-1-1-3-计数小“徽章”" class="headerlink" title="3.1.1.3 计数小“徽章”"></a>3.1.1.3 计数小“徽章”</h5><p>想要显示目前我们的博客内一共有几篇文章、几个分类和几个标签吗？我们可以用一个<code>badge</code>解决这件事。还是刚才那段配置，有没有在下面看到一段这样的选项？</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>我们把<code>badges</code>选项调成<code>true</code>，系统就会自动计数了。看一下效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsVzBF.png" alt=""></p>
<p>嗯，光荣的<code>0 0 1</code>。当然现在我们的“标签”页还是打不开的。具体怎么调文章的分类或如何创建“标签”页面等，我会在第4节文章相关操作中讲到。</p>
<h4 id="3-1-2-更新“综合信息中心”"><a href="#3-1-2-更新“综合信息中心”" class="headerlink" title="3.1.2 更新“综合信息中心”"></a>3.1.2 更新“综合信息中心”</h4><p>我之所以把这个侧边栏的下半部分称作一个“综合数据中心”，主要是因为你几乎可以在这里放任何你想放的信息，比如你的头像、个性签名、文章相关统计、个人链接等等。（至于天气和音乐播放器我们之后会在第5节非官方插件中讲到。）这是我的网站目前的样子：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsEUsS.png" alt=""></p>
<h5 id="3-1-2-1-你的头像"><a href="#3-1-2-1-你的头像" class="headerlink" title="3.1.2.1 你的头像"></a>3.1.2.1 你的头像</h5><p>想要给大家展示一下你的头像吗？当然可以。准备好一张照片（建议方形或圆形），移动到<code>/public/images</code>这个文件夹里。然后打开主题配置文件，找到如下配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsEaqg.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><code>url</code>是你图片的路径，格式就是<code>/images/</code>再加上文件名（不一定是<code>avatar.gif</code>）。<code>rounded</code>则是选择是否要显示为圆形，<code>rotated</code>是选择是否要在鼠标移动到图片上时旋转。我们看一下效果如何：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/19/vsENM8.png" alt=""></p>
<p>注：这个黑色的<code>N</code>就是<code>/images/</code>文件夹下的<code>logo.svg</code>。</p>
<h5 id="3-1-2-2-个人链接"><a href="#3-1-2-2-个人链接" class="headerlink" title="3.1.2.2 个人链接"></a>3.1.2.2 个人链接</h5><p>既然说了，这里是“综合信息中心”，那我能不能放一点个人信息（个人链接）呢？当然是可以的。最终的效果如下：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsY8B9.png" alt=""></p>
<p>那这个是在哪里设置的呢？我们可以找到这样一段配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsYYA1.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/Guleixibian2009</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:guleixibian2009@outlook.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="attr">RSS:</span> <span class="string">https://guleixibian2009.github.io/hexo-website-tutorial/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br><span class="line">  <span class="attr">Website:</span> <span class="string">https://guleixibian2009.github.io/</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-html5</span></span><br></pre></td></tr></table></figure>
<p>它的语法和<code>3.1.1.1</code>节中链接的语法是相同的，这里就不再赘述了。</p>
<h5 id="3-1-2-3-Creative-Commons文章版权声明"><a href="#3-1-2-3-Creative-Commons文章版权声明" class="headerlink" title="3.1.2.3 Creative Commons文章版权声明"></a>3.1.2.3 <code>Creative Commons</code>文章版权声明</h5><p>是开源项目总得有个开源许可证<code>LICENSE</code>吧。像博客一类非代码开源项目，我们一般选用<code>CC</code>版权声明。一共有6种形式（当然还有其他较特殊的协议，比如放弃权利<code>CC0</code>，可以自行搜索）：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>协议</th>
<th><code>by</code>（<code>Attribution</code>）</th>
<th><code>nc</code>（<code>NonCommercial</code>）</th>
<th><code>nd</code>（<code>No Derivative Works</code>）</th>
<th><code>sa</code>（<code>Share Alike</code>）</th>
</tr>
</thead>
<tbody>
<tr>
<td>转载时必须标示原作者</td>
<td>√</td>
<td>×</td>
<td>×</td>
<td>×</td>
</tr>
<tr>
<td>标示原作者，且禁止修改</td>
<td>√</td>
<td>×</td>
<td>√</td>
<td>×</td>
</tr>
<tr>
<td>标示原作者，且禁止商用</td>
<td>√</td>
<td>√</td>
<td>×</td>
<td>×</td>
</tr>
<tr>
<td>标示原作者，且禁止修改、商用</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>×</td>
</tr>
<tr>
<td>标示原作者，且禁止商用，必须相同协议</td>
<td>√</td>
<td>√</td>
<td>×</td>
<td>√</td>
</tr>
<tr>
<td>标示原作者，必须相同协议</td>
<td>√</td>
<td>×</td>
<td>×</td>
<td>√</td>
</tr>
</tbody>
</table>
</div>
<p>一般我们选用<code>CC by-nc-sa</code>这种协议。那么，我们如何直观地向别人展示呢？<code>NexT</code>主题内置了小图标的功能，可以找到这一部分配置文件：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsYG7R.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">deed.zh</span></span><br></pre></td></tr></table></figure>
<p>我们选中<code>sidebar</code>一项，<code>NexT</code>就会自动渲染出一个小图标了。至于<code>post</code>一项，我们放到3.2节中讲。<code>language</code>如果需要调整为中文，直接填写<code>deed.zh</code>即可。看一下渲染效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsY3nJ.png" alt=""></p>
<h4 id="3-1-3-文章目录"><a href="#3-1-3-文章目录" class="headerlink" title="3.1.3 文章目录"></a>3.1.3 文章目录</h4><p>如果你现在进入那篇默认的<code>Hello World</code>文章，你可以在原先“信息中心”的地方看到文章的目录。那么这个目录有没有可以自定义的地方呢？也是有的。我们可以找到对应的配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsdROO.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>仔细观察一下生成的<code>toc</code>（<code>Table Of Contents</code>，简称<code>toc</code>），发现每一个标题都被自动编上了号。可是，这就对像我这种习惯手动编号的人很不友好啊，我们就可以把<code>number</code>这个选项关掉。<code>wrap</code>则是说过长的标题是全部显示还是省略号，我选择了全部显示。<code>expand_all</code>指要不要全部展开，如果启用的话就会显示所有标题，然而像我这篇非常长的文章明显是不太合适的，所以就保持在<code>false</code>上。这样它就只会显示当前浏览部分的目录了。<code>max_depth</code>是指要生成多少层标题（1~6）。如果你不想显示过于细致的标题，可以调小。那调整之后效果类似这样：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsdfmD.png" alt=""></p>
<h3 id="3-2-文章板块相关配置"><a href="#3-2-文章板块相关配置" class="headerlink" title="3.2 文章板块相关配置"></a>3.2 文章板块相关配置</h3><p>终于到了我们的重头戏。有一个美观的<code>sidebar</code>只是基础，博客最重要的就是<code>post</code>（即博文部分）了。官方提供的自定义不多，但还是有可以打开的功能的。（注：在3.2节中我们只会讲关于这一板块的功能，并不会讲到类似“阅读全文按钮”等。我们把它留在第4节文章相关配置里讲。）</p>
<h4 id="3-2-1-文章相关信息"><a href="#3-2-1-文章相关信息" class="headerlink" title="3.2.1 文章相关信息"></a>3.2.1 文章相关信息</h4><p>如果你细心的观察过文章标题下的小字，你就会发现诸如发布时间、更新时间、本文字数、分类等信息。而是否显示它们都是可以调的。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsgC9g.png" alt=""></p>
<h5 id="3-2-1-1-基本配置"><a href="#3-2-1-1-基本配置" class="headerlink" title="3.2.1.1 基本配置"></a>3.2.1.1 基本配置</h5><p>你可以在这里找到一些基本配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsgP3Q.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">updated_at:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">another_day:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>看起来现在所有功能都是打开的。<code>item_text</code>指的是要不要显示数据名称；<code>created_at</code>是发布时间；<code>categories</code>是文章的分类。由于默认的<code>Hello World</code>文章是没有分类的，所以它就没有显示。可是，为什么我没有看到字数统计等信息呢？原来这是通过另外一项设置实现的。</p>
<h5 id="3-2-1-2-字数统计"><a href="#3-2-1-2-字数统计" class="headerlink" title="3.2.1.2 字数统计"></a>3.2.1.2 字数统计</h5><p>就在<code>post_meta</code>一节下面，有一个<code>symbols_count_time</code>。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsgicj.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>用之前我们还需要安装一个依赖，叫做<code>hexo-symbols-count-time</code>。直接使用<code>npm</code>安装即可：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm i hexo<span class="literal">-symbols</span><span class="literal">-count</span><span class="literal">-time</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure>
<p>然后我们来看一下这些设置有什么用。<code>item_text_post</code>指的是要不要在文章标题下方显示本文字数&amp;阅读时间；<code>item_text_total</code>则是在页脚显示全站计数。我们重新渲染来看一下效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsI96U.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsIplT.png" alt=""></p>
<h4 id="3-2-2-代码块样式"><a href="#3-2-2-代码块样式" class="headerlink" title="3.2.2 代码块样式"></a>3.2.2 代码块样式</h4><p>在默认的<code>Hello World</code>文章中，有4个代码块。也许你不喜欢这种较亮的主题；或者，你不介意主题，但只是想要添加一个复制按钮？这一切的一切都是可以修改的！我们找一下对应的配置，嗯，在这里：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsIim4.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">default</span></span><br></pre></td></tr></table></figure>
<p>高亮是默认开启的（没人不用这个功能，你真的不用的话到根目录<code>_config.yml</code>中<code># Writing</code>一节可以禁用）。你可以自己选一个喜欢的<code>highlight_theme</code>，我保留了<code>normal</code>，也就是浅色。<code>copy_button</code>中直接两个都调成<code>true</code>就可以显示复制按钮了。效果如下：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsICXF.png" alt=""></p>
<h4 id="3-2-3-看见了还真不一定知道是什么的辅助功能"><a href="#3-2-3-看见了还真不一定知道是什么的辅助功能" class="headerlink" title="3.2.3  看见了还真不一定知道是什么的辅助功能"></a>3.2.3  看见了还真不一定知道是什么的辅助功能</h4><p>为了直观地展示这一节的内容，我将先超纲新建一篇文章，大家见谅哈。在这篇文章里既有中文又有英文，我还给了它一个标签，一个分类。</p>
<h5 id="3-2-3-1-中英文空格——Pangu"><a href="#3-2-3-1-中英文空格——Pangu" class="headerlink" title="3.2.3.1 中英文空格——Pangu"></a>3.2.3.1 中英文空格——<code>Pangu</code></h5><p><img data-src="https://s1.ax1x.com/2022/08/20/vsT5f1.png" alt=""></p>
<p>我个人觉得中、英文混杂时没有个空格很难受，有的时候又会忘记加（就是假设，假设！）。怎么办呢？<code>NexT</code>提供一个功能叫做<code>Pangu</code>。它可以自动在中英文之间添加空格。我们找到配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsTTl6.png" alt="">然后改成<code>true</code>即可。渲染一下试试：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsT4YR.png" alt=""></p>
<h5 id="3-2-3-2-图片懒加载——lazyload"><a href="#3-2-3-2-图片懒加载——lazyload" class="headerlink" title="3.2.3.2 图片懒加载——lazyload"></a>3.2.3.2 图片懒加载——<code>lazyload</code></h5><p>一路看下来，有没有发现博客中的图片都是启用了懒加载的？就在<code>pangu</code>的配置附近，有一个：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Vanilla JavaScript plugin for lazyloading images.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/ApoorvSaxena/lozad.js</span></span><br><span class="line"><span class="attr">lazyload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>改成<code>true</code>即可。它的原理就是先获取较快的占位图，再在滚动时加载新的图片。效果如下：</p>
<p><img data-src="https://gcdnb.pbrd.co/images/62i8BHj3vjF7.gif?o=1" alt=""></p>
<p>（是动图，压缩过，点击重新播放）</p>
<h5 id="3-2-3-3-图片放大——fancybox"><a href="#3-2-3-3-图片放大——fancybox" class="headerlink" title="3.2.3.3 图片放大——fancybox"></a>3.2.3.3 图片放大——<code>fancybox</code></h5><p>想要实现一个图片点击放大功能吗？<code>fancybox</code>可以满足你的需求。我们找到这样一段配置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class="line"><span class="comment"># For more information: https://fancyapps.com/fancybox</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>改成<code>true</code>之后我们来看一下效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsToSx.png" alt=""></p>
<h5 id="3-2-3-4-局部刷新——pjax"><a href="#3-2-3-4-局部刷新——pjax" class="headerlink" title="3.2.3.4 局部刷新——pjax"></a>3.2.3.4 局部刷新——<code>pjax</code></h5><p>想要快速的切换页面？启用<code>pjax</code>即可。可能很多人听说过<code>ajax</code>，其实<code>pjax</code>相当于类似的功能。</p>
<p>启用之前需要先用<code>git</code>克隆<code>theme-next-pjax</code>的仓库。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme<span class="literal">-next</span>/theme<span class="literal">-next</span><span class="literal">-pjax</span> themes/next/source/lib/pjax</span><br></pre></td></tr></table></figure>
<p>然后在配置文件中启用<code>pjax</code>：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/20/vsqaj0.png" alt=""></p>
<p>效果图我就不放了，动图上传起来太麻烦，得另找图床。可以自己试一下效果。</p>
<h4 id="3-2-4-数学公式支持——mathjax"><a href="#3-2-4-数学公式支持——mathjax" class="headerlink" title="3.2.4 数学公式支持——mathjax"></a>3.2.4 数学公式支持——<code>mathjax</code></h4><p>如果你看过这篇<a href="https://guleixibian2009.github.io/2021/11/28/Markdown中Latex常用语法/">关于<code>LaTex</code>的文章</a>的话，你可能会知道，<code>Markdown</code>文章中是可以添加数学公式的。那么，<code>Hexo</code>有没有渲染数学公式的功能呢？是有的。我们可以找到如下配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/21/vycLss.png" alt=""></p>
<p>当然注释里也说得很清楚了，我们需要安装另一个<code>hexo</code>编译器，即<code>hexo-renderer-kramed</code>。使用如下两个命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm un hexo<span class="literal">-renderer</span><span class="literal">-marked</span></span><br><span class="line">npm i hexo renderer<span class="literal">-kramed</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure>
<p>安装即可。将<code>enable</code>那一行改为<code>true</code>，这个时候你就已经准备好<code>MathJax</code>了，来测试一下：</p>
<script type="math/tex; mode=display">
f(x) =
\begin{cases}
x^2 \qquad & x \gt 0 \\
e^x \qquad & x \le 0
\end{cases}</script><p>不过，使用<code>hexo-renderer-kramed</code>会带来一个小问题…</p>
<h4 id="3-2-5-修复Todo-List无法渲染的问题"><a href="#3-2-5-修复Todo-List无法渲染的问题" class="headerlink" title="3.2.5 修复Todo List无法渲染的问题"></a>3.2.5 修复<code>Todo List</code>无法渲染的问题</h4><p>这个问题是我在写<code>Markdown</code>语法那篇文章时发现的。虽然<code>Todo List</code>不是一个非常重要的语法，但我想我们最好还是修复一下这个问题：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/27/vR74PS.png" alt=""></p>
<p>解决办法是，打开<code>node_modules/hexo-renderer-kramed/lib/renderer.js</code>，并在第19行添加以下内容（对，就是查到的）：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Support To-Do List</span></span><br><span class="line">Renderer.prototype.listitem = <span class="function"><span class="keyword">function</span>(<span class="params">text</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/^\s*\[[x ]\]\s*/</span>.test(text)) &#123;</span><br><span class="line">    text = text.replace(<span class="regexp">/^\s*\[ \]\s*/</span>, <span class="string">&#x27;&lt;input type=&quot;checkbox&quot; disabled=&quot;disabled&quot;&gt;&lt;/input&gt; &#x27;</span>).replace(<span class="regexp">/^\s*\[x\]\s*/</span>, <span class="string">&#x27;&lt;input type=&quot;checkbox&quot; disabled=&quot;disabled&quot; checked&gt;&lt;/input&gt; &#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;li style=&quot;list-style: none&quot;&gt;&#x27;</span> + text + <span class="string">&#x27;&lt;/li&gt;\n&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;li&gt;&#x27;</span> + text + <span class="string">&#x27;&lt;/li&gt;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>
<p>修改之后重新渲染一遍即可。还是来测试一下：</p>
<ul>
<li style="list-style: none"><input type="checkbox" disabled="disabled" checked></input> 这是一个<code>Todo List</code>。</li>
<li style="list-style: none"><input type="checkbox" disabled="disabled"></input> 这是一个未被勾选的选项。</li>
</ul>
<h4 id="3-2-6-文末板块配置"><a href="#3-2-6-文末板块配置" class="headerlink" title="3.2.6 文末板块配置"></a>3.2.6 文末板块配置</h4><p>在文章末尾一般会放置一些关于文章的额外的信息。这是我的博客文末的功能：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/28/vW2L2q.png" alt=""></p>
<h5 id="3-2-6-1-版权声明方框"><a href="#3-2-6-1-版权声明方框" class="headerlink" title="3.2.6.1 版权声明方框"></a>3.2.6.1 版权声明方框</h5><p>很重视要告诉你的读者这是你的原创文章，或者觉得有必要强调自己使用了<code>Creative Commons</code>声明？可以考虑添加一个版权方框。至于设置的话，在这里：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/28/vW2U81.png" alt=""></p>
<p>把<code>post: false</code>调整为<code>true</code>即可。重新生成一下，看一下效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/28/vW2Y59.png" alt=""></p>
<p>当然，如果你对默认的翻译不满意的话，可以找到之前那个<code>i18n</code>配置文件，然后自行修改。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/28/vW2NCR.png" alt=""></p>
<h5 id="3-2-6-2-修改标签的小图标"><a href="#3-2-6-2-修改标签的小图标" class="headerlink" title="3.2.6.2 修改标签的小图标"></a>3.2.6.2 修改标签的小图标</h5><p>仔细看，在文章末尾会显示出这篇文章的标签。在上一节的图片中，它的样式是<code># Test</code>。我个人不喜欢这个<code>#</code>，想把它换掉。有这个功能吗？可以找到如下配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfFMzd.png" alt=""></p>
<p>把<code>tag_icon</code>一项改成<code>true</code>，然后重新渲染一下看看：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfFniD.png" alt=""></p>
<h5 id="3-2-6-3-其他发布渠道链接（引流）"><a href="#3-2-6-3-其他发布渠道链接（引流）" class="headerlink" title="3.2.6.3 其他发布渠道链接（引流）"></a>3.2.6.3 其他发布渠道链接（引流）</h5><p>需要在文章末尾给自己其他的发布渠道（如公众号，<code>CSDN</code>等）或其它前端项目引流吗？我们同样可以添加一个链接方框。这是添加后的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfFuJe.png" alt=""></p>
<p>我们可以找到这样的配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfFKRH.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Subscribe through Telegram Channel, Twitter, etc.</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon` (Font Awesome)</span></span><br><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class="line">  <span class="comment">#WeChat: /images/wechat_channel.jpg || fab fa-weixin</span></span><br><span class="line">  <span class="comment">#RSS: /atom.xml || fa fa-rss</span></span><br></pre></td></tr></table></figure>
<p>它的语法和3.1.1.1节的是一样的，可以参考一下。同时，如果你觉得老是修改<code>i18n</code>很烦的话，可以直接用你想要的名字作为<code>Key</code>，如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class="line">  <span class="comment">#WeChat: /images/wechat_channel.jpg || fab fa-weixin</span></span><br><span class="line">  <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br><span class="line">  <span class="string">旧版网站:</span> <span class="string">https://guleixibian.github.io/</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-html5</span></span><br><span class="line">  <span class="string">手写网站:</span> <span class="string">https://guleixibian2009.github.io/Hand-Written-HTML-Site/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-laptop-code</span></span><br><span class="line">  <span class="string">Awesome-Bootstrap项目:</span> <span class="string">https://guleixibian2009.github.io/awesome-bs5/</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-bootstrap</span></span><br></pre></td></tr></table></figure>
<h5 id="3-2-6-4-打赏功能"><a href="#3-2-6-4-打赏功能" class="headerlink" title="3.2.6.4 打赏功能"></a>3.2.6.4 打赏功能</h5><p>在自己的网站上加几个打赏二维码还是一个不错的选择<del>（当然我其实没有放）</del>，包括一些项目<code>README</code>里面也会放。预先准备好几个收款码（一定是固定的那种）或者你想放的图片，放到<code>themes/next/source/images</code>文件夹中。找到这样的配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfBut0.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#comment: Donate comment here.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="comment">#wechatpay: /images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>
<p>这个打赏的配置有两部分。<code>reward_settings</code>是设置打赏按钮；图片地址要写在<code>reward</code>里面。先把<code>enable</code>调成<code>true</code>，然后添加几张图片试试：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">给作者买一杯作业...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="comment">#wechatpay: /images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br><span class="line">  <span class="string">把我的网站分享给别人吧！:</span> <span class="string">/images/websiteQR.png</span></span><br></pre></td></tr></table></figure>
<p>至于<code>comment</code>一行的话，是你想要在打赏按钮上方显示的句子。看一下效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfBnkq.png" alt=""></p>
<h3 id="3-3-网站上的小“零件”"><a href="#3-3-网站上的小“零件”" class="headerlink" title="3.3 网站上的小“零件”"></a>3.3 网站上的小“零件”</h3><p>这一章是关于页面上的一些（官方的）小功能。比如说（并不是所有的）：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfD88f.png" alt=""></p>
<h4 id="3-3-1-页脚信息显示"><a href="#3-3-1-页脚信息显示" class="headerlink" title="3.3.1 页脚信息显示"></a>3.3.1 页脚信息显示</h4><p>页脚（<code>footer</code>）也是稍微有一些可以调整的地方的：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfDG28.png" alt=""></p>
<p>我们目前的页脚是这样的：</p>
<p><img title="" data-src="https://s1.ax1x.com/2022/08/29/vfD3PP.png" alt="" data-align="inline"></p>
<p>看起来有一个版权符号，年份，作者名，还有一个爱心。但实际上，版权年份其实只会显示当前年份。如果想像我一样显示类似2021~2022，该如何实现呢？我们可以找到这样一段配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/29/vfDJxS.png" alt=""></p>
<p>具体来讲一下：</p>
<ol>
<li><p>被注释掉的一行<code>since</code>指的是站点建立的时间。把它取消注释，并改为现在的年份，就可以每年更新了（每年要重新渲染一次）。</p>
</li>
<li><p>想要让爱心动起来的话，可以把<code>icon</code>中<code>animated</code>改为<code>true</code>。</p>
</li>
<li><p>版权默认使用项目名称，但如果希望使用我自己的名字，可以在<code>copyright</code>中写上自己的名字。</p>
</li>
<li><p><code>powered</code>指要不要显示“由<code>Hexo</code>强力驱动”，默认打开。</p>
</li>
<li><p><code>beian</code>中是网站<code>ICP</code>备案，我没备案就不写上了。修改完后，记得重新渲染一下。</p>
</li>
</ol>
<p>那个计数是怎么实现的呢？那是一个第三方服务，我放在第5章中讲。</p>
<h4 id="3-3-2-回到顶部按钮"><a href="#3-3-2-回到顶部按钮" class="headerlink" title="3.3.2 回到顶部按钮"></a>3.3.2 回到顶部按钮</h4><p>看完一篇非常长的文章，如果读者想要一键返回顶部，我们就需要一个<code>back2top</code>按钮。基本款的默认已经有了，但是我们还可以对它进行进一步配置。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhUJyj.png" alt=""></p>
<p>这里一共有3个选项。<code>enable</code>默认开启；<code>sidebar</code>指的是按钮的位置要不要加在侧边栏下方；<code>scrollpercent</code>是显示阅读百分比。我开启了第三项。最终效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhU8Sg.png" alt=""></p>
<h4 id="3-3-3-阅读进度条"><a href="#3-3-3-阅读进度条" class="headerlink" title="3.3.3 阅读进度条"></a>3.3.3 阅读进度条</h4><p>如何让读者清晰地看出自己已经读了多少呢？刚刚显示百分比的功能还是不错的。不过我们还有更加直观一些的方法——阅读进度条。找到这段配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhUGlQ.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reading progress bar</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure>
<p>如果你不介意进度条的颜色和高度的话，直接<code>enable: true</code>就已经可以用了。不满意的话可以自己调整一下下面三个参数。这是最终的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhU1fS.png" alt=""></p>
<h4 id="3-3-4-书签功能"><a href="#3-3-4-书签功能" class="headerlink" title="3.3.4 书签功能"></a>3.3.4 书签功能</h4><p>需要在关闭页面时记录下自己的阅读进度吗？可以打开（自动）书签功能。找一下：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhdkKH.png" alt=""></p>
<p>直接把<code>enable</code>调成<code>true</code>即可。默认的版本是<code>auto</code>，即关闭页面自动保存；你也可以调成<code>manual</code>，只在读者点击图标时保存。效果如下（自己尝试一下吧）：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhdC8O.png" alt=""></p>
<h4 id="3-3-5-右上角GitHub徽标"><a href="#3-3-5-右上角GitHub徽标" class="headerlink" title="3.3.5 右上角GitHub徽标"></a>3.3.5 右上角<code>GitHub</code>徽标</h4><p>虽然我们已经在侧边栏中加过一个<code>github</code>链接了，但我们同样可以用一个更加明显的方式为自己的<code>github</code>账号引流。这就是大名鼎鼎的<code>GitHub Banner</code>。至于配置的话，就在刚才的下面：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhdArd.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/Guleixibian2009</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub~</span></span><br></pre></td></tr></table></figure>
<p>打开功能，先把<code>enable</code>调成<code>true</code>。<code>permalink</code>是指向你想要引流的链接（比如<code>github</code>账号，项目地址等），<code>title</code>是鼠标移到图标上时显示什么。来试一下：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhdixe.png" alt=""></p>
<p>不过如果细看的话…这个<code>banner</code>和书签在页面顶部时似乎有点小bug。重叠我能接受，可是露出一个角来就有点奇怪了啊！</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhdP2D.png" alt=""></p>
<p>我研究了一下，可以把书签的<code>CSS</code>中<code>right</code>属性调到<code>25px</code>就好了。找一下<code>/themes/next/source/css/_common/outline/header/bookmark.styl</code>文件…不太确定这是什么语言，但是不怕！找到上面那个<code>right</code>（第5行那个）把那个变量名称改成<code>25px</code>即可了。这样就不会重叠了。</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhdEqA.png" alt=""></p>
<blockquote>
<p>另及：使用这个变量的本意应该是想让书签的右侧和<code>b2t</code>按钮右侧宽度相同，但我觉得<code>5px</code>应该不太看的出来吧。</p>
</blockquote>
<h4 id="3-3-6-加载进度条——pace"><a href="#3-3-6-加载进度条——pace" class="headerlink" title="3.3.6 加载进度条——pace"></a>3.3.6 加载进度条——<code>pace</code></h4><p>注意到网站上加载时的蓝色加载条了吗？</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhfg2j.png" alt=""></p>
<p>这个进度条是基于<code>pace</code>做出来的。首先我们需要克隆<code>pace</code>的仓库：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git clone https://github.com/theme<span class="literal">-next</span>/theme<span class="literal">-next</span><span class="literal">-pace</span> source/lib/pace</span><br></pre></td></tr></table></figure>
<p>然后找到对应的配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhf2xs.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure>
<p>我用的是<code>minimal</code>。重新渲染一下，看一下效果吧。</p>
<h4 id="3-3-7-网站图标——favicon"><a href="#3-3-7-网站图标——favicon" class="headerlink" title="3.3.7 网站图标——favicon"></a>3.3.7 网站图标——<code>favicon</code></h4><p>直到现在我们网站的图标还是那个黑色的<code>N</code>。能不能改一个好看一点的呢？先找一个自己喜欢的图标，然后转成<code>ico</code>格式的文件（可以用<code>convertio</code>试试）。复制两份，分别命名<code>16x16.ico</code>和<code>32x32.ico</code>。拖到<code>themes/next/source/images</code>文件夹里面。然后我们找到对应的配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/01/v5LMNj.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/16x16.ico</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/32x32.ico</span></span><br><span class="line">  <span class="comment">#apple_touch_icon: /images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="comment">#safari_pinned_tab: /images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>
<p>只保留<code>small</code>和<code>medium</code>，再把文件名填进去即可。</p>
<hr>
<h2 id="4-文章相关配置"><a href="#4-文章相关配置" class="headerlink" title="4. 文章相关配置"></a>4. 文章相关配置</h2><p>现在我们已经把基本的一些配置好了。我们可以开始添加一些文章、页面<del>（心心念念的标签、分类页）</del>，还可以有搜索、<code>404</code>页面等。你会学到如何给文章添加标签、分类等等。</p>
<h3 id="4-1-关于博客——post"><a href="#4-1-关于博客——post" class="headerlink" title="4.1 关于博客——post"></a>4.1 关于博客——<code>post</code></h3><p>如果你曾注意过<code>scaffolds</code>文件夹里的内容，你会看到<code>Hexo</code>一共有3种“类型”，分别是<code>post</code>博客、<code>page</code>页面和<code>draft</code>草稿。我不太习惯用草稿功能，就把它放过喽。我们先来把博客讲一下：</p>
<h4 id="4-1-1-新建一篇文章"><a href="#4-1-1-新建一篇文章" class="headerlink" title="4.1.1 新建一篇文章"></a>4.1.1 新建一篇文章</h4><p>还记得3.2.3节中我超纲建文章吗？建文章的命令是<code>hexo new</code>。如下：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo new a<span class="literal">-new</span><span class="literal">-post</span></span><br></pre></td></tr></table></figure>
<p>然后我们就可以在<code>source/_post</code>里面找到一个<code>a-new-post.md</code>。打开看看：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vh5OMj.png" alt=""></p>
<p>文件几乎是空白的，只有一小段<code>YML</code>（学名<code>YAML Front Matter</code>）。这里面存放着关于这篇文章的元信息：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">a-new-post</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-08-30 17:02:10</span></span><br><span class="line"><span class="attr">tags:</span></span><br></pre></td></tr></table></figure>
<p>默认是有三个字段的，即<code>title</code>、<code>date</code>和<code>tags</code>。<code>title</code>会先默认设置为文件名，你可以改成这篇文章的标题（比如“4.1.1节新建文章示例”）。<code>date</code>建议不要改，是你新建文章的时间。<code>tags</code>是这篇文章的标签。先在文章内部写点东西试试渲染一下。我现在修改成这样，渲染一下看看：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 4.1.1节新建文章示例</span><br><span class="line">date: 2022-08-30 17:02:10</span><br><span class="line"><span class="section">tags:</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut </span><br><span class="line">labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris </span><br><span class="line">nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit </span><br><span class="line">esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt </span><br><span class="line">in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vh5xZq.png" alt=""></p>
<h4 id="4-1-2-标签与分类"><a href="#4-1-2-标签与分类" class="headerlink" title="4.1.2 标签与分类"></a>4.1.2 标签与分类</h4><p>现在我们尝试给文章添加一些标签和分类（照例，用<code>Test</code>）。只需在<code>Front Matter</code>中加一点即可：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="number">4.1</span><span class="number">.1</span><span class="string">节新建文章示例</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-08-30 17:02:10</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">Test1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Test2</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">Test1</span>, <span class="string">Test2</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="string">Test3</span></span><br></pre></td></tr></table></figure>
<p>可以看到我们添加了一个<code>categories</code>字段。先讲标签：新建一行，然后用<code>-</code>打头，空格，然后输入分类名，可以重复多行。<code>categories</code>中是差不多的，可是这个<code>- []</code>是用来干嘛的呢？这代表分类下的子分类。待会新建分类<code>page</code>时你就会看出来它的效果。渲染一下看看：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhH89f.png" alt=""></p>
<p>（为了一张图放完，这张图片是80%比例下的截图的）</p>
<h4 id="4-1-3-主页节选——excerpt"><a href="#4-1-3-主页节选——excerpt" class="headerlink" title="4.1.3 主页节选——excerpt"></a>4.1.3 主页节选——<code>excerpt</code></h4><p>我们新加的博客内容都是很短的，可以完整的放在主页上。可像我这种几k字的，主页完全放不下啊！这是我们就可以使用节选功能，同时会自动显示一个按钮，提示“继续阅读”。语法如下：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">This is a piece of text. It&#x27;s going to be very long.</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut </span><br><span class="line">labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris </span><br><span class="line">nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit </span><br><span class="line">esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt </span><br><span class="line">in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>
<p>没错，只要在你想分开的地方加一个<code>&lt;!--more--&gt;</code>即可。我们拿<code>Hello World</code>那篇文章试一下：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/30/vhH14P.png" alt=""></p>
<h4 id="4-1-4-文章置顶"><a href="#4-1-4-文章置顶" class="headerlink" title="4.1.4 文章置顶"></a>4.1.4 文章置顶</h4><p>在我的网站主页上有一篇置顶的序言，就像书的<code>preface</code>一样。<code>Hexo</code>文章在主页上的排列顺序（默认）是按发布时间后往前（即越新越往上）排布的，如何打破这个规则，强制在最上方呢？一开始我也没有查到对应的设置（都是手写进去代码），不过在翻看<code>hexo</code>的生成代码时（不太具体知道这是什么语言，似乎是<code>mozilla</code>开发的<code>nunjucks</code>），我注意到有一个<code>sticky</code>选项（而且似乎值是个数字），在这里：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/31/v4LWTJ.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if post.sticky &gt; 0 %&#125;</span><br><span class="line">  &lt;span class=&quot;post-sticky-flag&quot; title=&quot;&#123;&#123; __(&#x27;post.sticky&#x27;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-thumbtack&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<p>然后我就找到一篇<code>post</code>，在<code>Front Matter</code>里面加上这么一行：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sticky:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>诶，神奇的是就好了！我在<code>_config.yml</code>中没有看到任何和<code>sticky</code>有关的配置，没想到自己摸索出来了。看一下最后的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/31/v4LRw4.png" alt=""></p>
<h4 id="4-1-5-分页功能"><a href="#4-1-5-分页功能" class="headerlink" title="4.1.5 分页功能"></a>4.1.5 分页功能</h4><p>目前来说，我们的主页上可能还没有几篇文章。可是，设想一下将来，当你有了几十篇博客（只是设想），难道还得全部一股脑的堆在主页上吗？我们可以尝试加一个分页功能。即：每满设定的文章数就会自动生成主页的下一页。先看一下效果吧，我是6篇一分：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/31/v4OXuT.png" alt=""></p>
<p>找一下如下的配置（注意在<code>Hexo</code>配置文件内，切勿搞混了）：</p>
<p><img data-src="https://s1.ax1x.com/2022/08/31/v4OLvV.png" alt=""></p>
<p>看起来是默认打开的啊？那我就把数值减小一点，改成6就好了。</p>
<h3 id="4-2-关于页面——page"><a href="#4-2-关于页面——page" class="headerlink" title="4.2 关于页面——page"></a>4.2 关于页面——<code>page</code></h3><p>在3.1.1.1节中我们在侧边栏中添加了标签页、分类页，还有一个歌单的链接。这一章我们会把这些页面补齐，并给网站添加一个<code>404</code>页面。</p>
<h4 id="4-2-1-新建页面"><a href="#4-2-1-新建页面" class="headerlink" title="4.2.1 新建页面"></a>4.2.1 新建页面</h4><p>新建页面和新建一篇博客的命令是差不多的。如下，只需要在<code>new</code>后面添加一个<code>page</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p><code>tags</code>就是所有标签页。可是，执行这个命令到底会发生什么呢？我们来看一下<code>source</code>文件夹。多了一个<code>tags</code>文件夹，里面有一个<code>index.md</code>。打开看看：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/02/vIRp9g.png" alt=""></p>
<p>嗯，和<code>post</code>差不多，一个时间一个标题，只是没有标签和分类。然后，看一下渲染的效果，有没有这个页面了：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/02/vIRCcj.png" alt=""></p>
<p>但这个样子肯定是有<code>bug</code>的。第一，它的标题怎么叫<code>tags</code>？第二，之前链接列表中既然有这个默认的<code>tags</code>，那它为什么不是自动化的，不可能连统计标签的功能都没有吧！别急，马上就把这个功能加进来，只需要一行<code>Front Matter</code>，再把标题改下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">所有标签</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">tags</span></span><br></pre></td></tr></table></figure>
<p>试一下渲染效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/02/vIR93Q.png" alt=""></p>
<p>似乎好了耶！然后类似的，我们加一下分类、关于和歌单页，把<code>tags</code>分别换为<code>categories</code>、<code>about</code>、<code>album</code>即可。别忘了改页面的标题，并给分类页加上<code>type: categories</code>！这是最后的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voSauR.png" alt=""></p>
<p>至于<code>about</code>和<code>album</code>页的话，可以放自己想放的东西。</p>
<blockquote>
<p>另及：还记得我们在4.1.2节中给文章添加了一个<code>- []</code>嵌套分类吗？现在你应该可以理解这是什么意思了吧：它表示分类下的子分类，比如“编程”，“编程-<code>Python</code>”等等。同时支持更多层嵌套。</p>
</blockquote>
<h4 id="4-2-2-404页面"><a href="#4-2-2-404页面" class="headerlink" title="4.2.2 404页面"></a>4.2.2 <code>404</code>页面</h4><p><code>404</code>页面和之前的页面做起来很相似。还是用<code>hexo new page 404</code>这个命令来新建出页面，然后我们来添加一些配置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-08-15 16:28:02</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">sitemap:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">/404</span></span><br></pre></td></tr></table></figure>
<p><code>title</code>设为空，这样就不会显示标题。<code>comments: false</code>表示不在本页上加载<code>Gitalk</code>，详见第5章。<code>sitemap: false</code>表示不把本页加入站点地图，详见第6章。最重要的是这个<code>permalink</code>，它会声明：这个页面是通用<code>404</code>页面。往里面加上一些提示性的句子，比如：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># 404 Not Found 您访问的页面走丢了！</span></span><br><span class="line"></span><br><span class="line">将于10秒后返回 [<span class="string">首页</span>](<span class="link">https://guleixibian2009.github.io/hexo-website-tutorial</span>) ......</span><br></pre></td></tr></table></figure>
<p>渲染出来就是这样：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/vo9hh8.png" alt=""></p>
<h5 id="4-2-2-1-自动跳转功能"><a href="#4-2-2-1-自动跳转功能" class="headerlink" title="4.2.2.1 自动跳转功能"></a>4.2.2.1 自动跳转功能</h5><p>上面的代码块里提到了10秒后返回主页。这个是靠下面一段代码实现的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="built_in">setTimeout</span>(<span class="string">&quot;javascript:location.href=&#x27;/&#x27;&quot;</span>, <span class="number">10000</span>); </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>我曾经在<code>Jekyll</code>那篇文章里面提到过，还记得吗？直接把它粘贴到<code>index.md</code>末尾即可。重新渲染，可以自己去看一下效果。</p>
<h3 id="4-3-关于搜索——searchdb"><a href="#4-3-关于搜索——searchdb" class="headerlink" title="4.3 关于搜索——searchdb"></a>4.3 关于搜索——<code>searchdb</code></h3><p>当我们网站上的文章渐渐多起来后，我们就需要一个方便读者找到对应文章的方式，这就是一个搜索功能。我们先安装一下对应的<code>package</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm i hexo<span class="literal">-generator</span><span class="literal">-searchdb</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure>
<p>不同的是，我们不能直接去找主题<code>_config.yml</code>内的配置，而是得先在博客配置内添加这样的配置，添在底部即可：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<p>随后我们再去找这一段配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voAu79.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>先把<code>enable</code>调成<code>true</code>，就可以开启功能了。然后看到<code>top_n_per_article</code>的选项，意思是说每篇博客显示几个结果。可以调大一点，比如调成5。我们来看一下渲染的效果。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voAZXF.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voAmm4.png" alt=""></p>
<p>然后顺便讲一下那个提示语是怎么改的。找到<code>i18n</code>文件，如下：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voAn0J.png" alt=""></p>
<p>把<code>placeholder</code>改成你想要的提示语即可。</p>
<h3 id="4-4-如何对README和LICENSE禁用渲染"><a href="#4-4-如何对README和LICENSE禁用渲染" class="headerlink" title="4.4 如何对README和LICENSE禁用渲染"></a>4.4 如何对<code>README</code>和<code>LICENSE</code>禁用渲染</h3><p>也许你已经发现，我们在第1节中创建的<code>README</code>和<code>LICENSE</code>都已经被覆盖，找不到了，就连<code>commit</code>都消失的无影无踪。不过，经过我的尝试，我们还是有办法添加回它们的。我们先复制这两个文件进<code>source</code>文件夹，然后找到主题配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voA590.png" alt=""></p>
<p>看到那行<code>skip_render</code>了吗？我们用一个列表来代表禁用渲染的文件：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> [<span class="string">README.md</span>, <span class="string">LICENSE</span>]</span><br></pre></td></tr></table></figure>
<p><code>[]</code>就表示一个列表，每个文件名用逗号隔开即可。看一下渲染之后会发生什么：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voAhhq.png" alt=""></p>
<p>这样，我们的<code>README</code>就不会被渲染成<code>HTML</code>了。以上这些，就是我们所有的较为基础的配置与文章相关的内容了。接下来我们会涉及到一些更高级的功能，使用到第三方插件，可以自己选择。</p>
<hr>
<h2 id="5-第三方插件配置"><a href="#5-第三方插件配置" class="headerlink" title="5. 第三方插件配置"></a>5. 第三方插件配置</h2><p>写到这文章已经很长了，将近20k字了。不管怎么样，我们来继续我们的教程，<del>争取再写20k啊</del>。</p>
<h3 id="5-1-动态背景"><a href="#5-1-动态背景" class="headerlink" title="5.1 动态背景"></a>5.1 动态背景</h3><p>读了这么久的文章了，不会还没注意到我的动态背景吧。在背景上有50个点，随机游走，相互靠近时就会连成一条线。靠近鼠标时则会被“困住”，直到再次移动鼠标。这叫做<code>canvas_nest</code>。</p>
<blockquote>
<p>另及：<code>next</code>其实有官方的动态背景，但我个人不满意，所以搜到了这一款。它曾经被集成入<code>Next</code>，但现在已不默认被集成，所以我把它归在第三方插件中。</p>
</blockquote>
<p>我们先安装对应的插件，在<code>themes/next</code>文件夹下执行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme<span class="literal">-next</span>/theme<span class="literal">-next</span><span class="literal">-canvas</span><span class="literal">-nest</span> source/lib/canvas<span class="literal">-nest</span></span><br></pre></td></tr></table></figure>
<p>随后我们需要新增一段<code>yml</code>，加在主题配置文件内，随便加在哪里。不过便于后期修改，我把它和其他动态背景放在一起。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voVwSP.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canvas Nest</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest </span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">color:</span> <span class="string">&#x27;0,0,0&#x27;</span> </span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.5</span> </span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> </span><br><span class="line">  <span class="attr">count:</span> <span class="number">50</span> </span><br></pre></td></tr></table></figure>
<p>可以修改的有几个参数：<code>color</code>指线的颜色，配合<code>opacity</code>透明度使用；<code>zIndex</code>指图层，<code>-1</code>代表最下层；<code>count</code>代表最多同时出现多少条线。修改之后渲染即可。我特地给你们看一下效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voVaWt.png" alt=""></p>
<h3 id="5-2-侧边栏插件"><a href="#5-2-侧边栏插件" class="headerlink" title="5.2 侧边栏插件"></a>5.2 侧边栏插件</h3><p>总觉得侧边栏少了点东西，没有个性？我们可以尝试添加一些不同的东西……这是最后的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/vo8YT0.png" alt=""></p>
<h4 id="5-2-1-外链播放器"><a href="#5-2-1-外链播放器" class="headerlink" title="5.2.1 外链播放器"></a>5.2.1 外链播放器</h4><p>音乐播放器的话是用的一个网易云的外链服务，好处在于方便（根本不需要登录什么的），快速（加载快播放也流畅）。我们先随便找一首歌（网页版的）：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/vo8Jwq.png" alt=""></p>
<h5 id="5-2-1-1-获取插件"><a href="#5-2-1-1-获取插件" class="headerlink" title="5.2.1.1 获取插件"></a>5.2.1.1 获取插件</h5><p>看到上面的红色框框了吗？点进去，就是一个外链的生成界面：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/vo8eTP.png" alt=""></p>
<p>出于兼容性的考虑我们只能用<code>&lt;iframe&gt;</code>版的，<code>flash</code>已经过时了。首先我们要调整一个宽度，自己觉得合适就可以。不过不要过宽，否则待会会放不下。我自己选的是<code>280x66</code>。然后尽量不选自动播放吧，用户体验可能不会特别好，万一读者不喜欢这首歌怎么办？然后复制下面的代码就可以了，类似这样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">280</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=2080607&amp;auto=0&amp;height=66&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意一下另外两个红框，是两个相同的数字，即歌曲<code>id</code>。以后需要更改歌曲只要打开网页版后复制网址中的<code>id</code>并替换就可以了。</p>
<h5 id="5-2-1-2-调整侧边栏宽度"><a href="#5-2-1-2-调整侧边栏宽度" class="headerlink" title="5.2.1.2 调整侧边栏宽度"></a>5.2.1.2 调整侧边栏宽度</h5><p><code>Next</code>主题侧边栏的宽度默认是240，这个会有点窄，要调大一点。不是说一定要比插件的宽度长，短一点也可以，它会自动的缩短。然后我这边就选了260像素。看一下配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/vo8KfS.png" alt=""></p>
<h5 id="5-2-1-3-插入swig模板"><a href="#5-2-1-3-插入swig模板" class="headerlink" title="5.2.1.3 插入swig模板"></a>5.2.1.3 插入<code>swig</code>模板</h5><p>到现在我们已经有了一个播放器，调了宽度，可是怎么把它插入到侧边栏里来呢？我们要到模板文件里去插。找到这个文件（<code>themes/next/layout/_partials/sidebar/site-overview.swig</code>），在105行左右（<code>CC</code>之后，<code>Blogroll</code>之前）插入代码即可：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/vo8uY8.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;%- if theme.creative_commons.license and theme.creative_commons.sidebar %&#125;</span><br><span class="line">  &lt;div class=&quot;cc-license motion-element&quot; itemprop=&quot;license&quot;&gt;</span><br><span class="line">  &#123;%- set ccImage = &#x27;&lt;img src=&quot;&#x27; + url_for(theme.images + &#x27;/cc-&#x27; + theme.creative_commons.license + &#x27;.svg&#x27;) + &#x27;&quot; alt=&quot;Creative Commons&quot;&gt;&#x27; %&#125;</span><br><span class="line">    &#123;&#123; next_url(ccURL, ccImage, &#123;class: &#x27;cc-opacity&#x27;&#125;) &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=280 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=2080607&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&#123;# Blogroll #&#125;</span><br><span class="line">&#123;%- if theme.links %&#125;</span><br><span class="line">  &lt;div class=&quot;links-of-blogroll motion-element&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;links-of-blogroll-title&quot;&gt;</span><br><span class="line">      &#123;%- if theme.links_settings.icon %&#125;&lt;i class=&quot;&#123;&#123; theme.links_settings.icon &#125;&#125; fa-fw&quot;&gt;&lt;/i&gt;&#123;%- endif %&#125;</span><br><span class="line">      &#123;&#123; theme.links_settings.title &#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;ul class=&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">      &#123;%- for blogrollText, blogrollURL in theme.links %&#125;</span><br><span class="line">        &lt;li class=&quot;links-of-blogroll-item&quot;&gt;</span><br><span class="line">          &#123;&#123; next_url(blogrollURL, blogrollText, &#123;title: blogrollURL&#125;) &#125;&#125;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &#123;%- endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<p>最后我们来看一下渲染出来的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/vo8nFf.png" alt=""></p>
<h4 id="5-2-2-天气插件"><a href="#5-2-2-天气插件" class="headerlink" title="5.2.2 天气插件"></a>5.2.2 天气插件</h4><p>接下来是一个天气的插件。我们这个插件来自<code>tianqi.com</code>，它这个可以实时获取城市，不过原来是直接使用的，现在要关注什么公众号了，不过我可以直接把代码给大家。这是我当时获取到的代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span> <span class="attr">height</span>=<span class="string">&quot;90&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">hspace</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://i.tianqi.com/?c=code&amp;a=getcode&amp;id=7&amp;icon=1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>目前还是可以正常运行的，不要求什么密码。我们还是找到<code>site-overview.swig</code>，把上面的代码粘贴到外链播放器下面去。看一下最终的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/03/voJXLj.png" alt=""></p>
<h3 id="5-3-不蒜子访客统计"><a href="#5-3-不蒜子访客统计" class="headerlink" title="5.3 不蒜子访客统计"></a>5.3 不蒜子访客统计</h3><p>需要一项服务来显示自己的客流量？<code>Next</code>中集成了<code>busuanzi</code>统计，虽然是第三方服务但也可以方便地添加到页面上。我们可以先看一下它的官网：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/voOrJH.png" alt=""></p>
<h4 id="5-3-1-启用功能"><a href="#5-3-1-启用功能" class="headerlink" title="5.3.1 启用功能"></a>5.3.1 启用功能</h4><p>当然我们不用那么复杂，又一次在<code>swig</code>添加那么多代码，我们只要找到对应的配置勾选一下：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/voOgyt.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure>
<p>然后直接把所有的<code>false</code>改成<code>true</code>就可以拥有实时文章阅读量计数等功能。看一下最后的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/voO6SA.png" alt=""></p>
<p>可是不对啊，我既然选了<code>post_views</code>，怎么不显示计数呢？于是我就去翻代码…</p>
<h4 id="5-3-2-翻swig，瞎折腾"><a href="#5-3-2-翻swig，瞎折腾" class="headerlink" title="5.3.2 翻swig，瞎折腾"></a>5.3.2 翻<code>swig</code>，瞎折腾</h4><p><img data-src="https://s1.ax1x.com/2022/09/04/voOcQI.png" alt=""></p>
<p>在<code>themes/next/layout/_macro/post.swig</code>文件的120行找到这样的代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if not is_index and theme.busuanzi_count.enable and theme.busuanzi_count.post_views %&#125;</span><br><span class="line">  &lt;span class=&quot;post-meta-item&quot; title=&quot;&#123;&#123; __(&#x27;post.views&#x27;) &#125;&#125;&quot; id=&quot;busuanzi_container_page_pv&quot; </span><br><span class="line">style=&quot;display: none;&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">      &lt;i class=&quot;&#123;&#123; theme.busuanzi_count.post_views_icon &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __(&#x27;post.views&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<p>凭直觉来看，<code>if not is_index</code>很成问题啊！核理推测一下，是不是我们进入一篇文章就能看见<code>post_views</code>计数了？</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/voOsWd.png" alt=""></p>
<p>果然。那在核理推测一下，是不是把<code>not is_index and</code>去掉，就可以在主页上显示了呢？我自己试了一下，发现这样会有<code>bug</code>，哪怕不看文章，也会出现计数的情况，个人没有想到特别好的解决方案，于是还是没有改。</p>
<h3 id="5-4-相关文章插件"><a href="#5-4-相关文章插件" class="headerlink" title="5.4 相关文章插件"></a>5.4 相关文章插件</h3><p>然后的话再讲一种引流的方式，这个相关文章插件。这算是一种站内引流吧。这个是最终的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/vTMkRJ.png" alt=""></p>
<h4 id="5-4-1-安装与配置"><a href="#5-4-1-安装与配置" class="headerlink" title="5.4.1 安装与配置"></a>5.4.1 安装与配置</h4><p>照常我们先找到对应的配置。然后看一下需要的<code>dependency</code>：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/vTMZs1.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Related popular posts</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/tea3/hexo-related-popular-posts</span></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment"># Custom header, leave empty to use the default one</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment">#PPMixingRate: 0.0</span></span><br><span class="line">    <span class="comment">#isDate: false</span></span><br><span class="line">    <span class="comment">#isImage: false</span></span><br><span class="line">    <span class="comment">#isExcerpt: false</span></span><br></pre></td></tr></table></figure>
<p>看起来我们需要安装<code>hexo-related-popular-posts</code>这个插件。安装过程中<code>npm</code>可能会提示你有部分<code>package</code>已被<code>deprecated</code>，不过不用管。安装后我们来改一下配置：</p>
<p><code>enable</code>调成<code>true</code>之后就可以打开功能；<code>display_in_home</code>指要不要在主页上显示，我没开启；<code>title</code>、<code>maxCount</code>什么的，我放张图就懂了（另及：<code>isExcerpt</code>要求文章中一定出现<code>&lt;!--more--&gt;</code>手动分页，默认不会显示全文）：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/vTMAz9.png" alt=""></p>
<p>所以最后的配置类似这样：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Related popular posts</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/tea3/hexo-related-popular-posts</span></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">相关文章</span> <span class="string">为你推荐</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">3</span></span><br><span class="line">    <span class="comment">#PPMixingRate: 0.0</span></span><br><span class="line">    <span class="attr">isDate:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#isImage: false</span></span><br><span class="line">    <span class="attr">isExcerpt:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>不过我们现在由于多方面原因（标签、分类等）并不会生成。我们随便再创一篇文章，来点相同的标签啥的。我们重新渲染…出错了！<code>hexo g</code>会出现两个<code>ERROR</code>，但没有更多信息，而<code>hexo s</code>运行后，有的文章打不开，还出现如下错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unhandled rejection Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig)</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig)</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig) [Line 19, Column 14]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig)</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\_partials\head\head-unique.swig) [Line 10, Column 23]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig) [Line 3, Column 3]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig)</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\_partials\header\index.swig) [Line 6, Column 15]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig)</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\_partials\header\sub-menu.swig) [Line 2, Column 29]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig)</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\_partials\header\sub-menu.swig)</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig) [Line 5, Column 3]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\post.swig) [Line 9, Column 12]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\_macro\post.swig) [Line 214, Column 16]</span><br><span class="line">  Template render error: (D:\08 网站\hexo_website_tutorial\themes\next\layout\_partials\post\post-related.swig)</span><br><span class="line">  TypeError: config._d.getTime is not a function</span><br><span class="line">    at Object._prettifyError (D:\08 网站\hexo_website_tutorial\node_modules\nunjucks\src\lib.js:36:11)</span><br><span class="line">    at D:\08 网站\hexo_website_tutorial\node_modules\nunjucks\src\environment.js:563:19</span><br><span class="line">    at Template.root [as rootRenderFunc] (eval at _compile (D:\08 网站\hexo_website_tutorial\node_modules\nunjucks\src\environment.js:633:18), &lt;anonymous&gt;:45:3)</span><br><span class="line">    at Template.render (D:\08 网站\hexo_website_tutorial\node_modules\nunjucks\src\environment.js:552:10)</span><br><span class="line">    at D:\08 网站\hexo_website_tutorial\themes\next\scripts\renderer.js:32:29</span><br><span class="line">    at _View._compiled (D:\08 网站\hexo_website_tutorial\node_modules\hexo\lib\theme\view.js:136:50)</span><br><span class="line">    at _View.render (D:\08 网站\hexo_website_tutorial\node_modules\hexo\lib\theme\view.js:39:17)</span><br><span class="line">    at D:\08 网站\hexo_website_tutorial\node_modules\hexo\lib\hexo\index.js:64:21</span><br><span class="line">    at tryCatcher (D:\08 网站\hexo_website_tutorial\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at D:\08 网站\hexo_website_tutorial\node_modules\bluebird\js\release\method.js:15:34</span><br><span class="line">    at RouteStream._read (D:\08 网站\hexo_website_tutorial\node_modules\hexo\lib\hexo\router.js:47:5)</span><br><span class="line">    at Readable.read (node:internal/streams/readable:496:12)</span><br><span class="line">    at resume_ (node:internal/streams/readable:999:12)</span><br><span class="line">    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)</span><br></pre></td></tr></table></figure>
<p>似乎是什么获取时间时有<code>bug</code>。有办法修复吗？</p>
<h4 id="5-4-2-修复相关bug"><a href="#5-4-2-修复相关bug" class="headerlink" title="5.4.2 修复相关bug"></a>5.4.2 修复相关<code>bug</code></h4><p>经过多次尝试与搜索，我终于找到对应的解决方案。原文章参见“致谢”一节中的第5条。我们援引一下：</p>
<blockquote>
<p>经过排查，本次发生错误是由 <code>hexo-related-popular-posts</code> 引发，在该库源码中使用 <code>moment</code> 初始化 <code>list.date</code> 导致了错误。 <code>list.date</code> 通过打印值可以看到是一个 <code>moment</code> 对象，但这个 <code>moment</code> 对象并不规范或者说可能在某处修改了这个 <code>moment</code> 对象的值。</p>
<p><code>moment</code> 内部初始化有一段逻辑是:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>._d = <span class="keyword">new</span> <span class="built_in">Date</span>(config._d != <span class="literal">null</span> ? config._d.getTime() : <span class="literal">NaN</span>);</span><br></pre></td></tr></table></figure>
<p>这个 <code>config</code> 就是 <code>moment(list.date)</code> 传入的 <code>list.date</code> 的值。<code>config._d</code> 是一个时间类型的字符串，并不是 <code>Date</code> 类型，因此没有 <code>getTime</code> 的方法。</p>
<p>临时解决方法有两种，一是将 <code>isDate</code> 设为 <code>false</code>，也就是推荐列表中不展示时间。</p>
<p>二是修改源码，做一层错误处理。从 <code>node_modules</code> 中打开文件(<code>/node_modules/hexo-related-popular-posts/lib/list-json.js</code>), 在编辑器中查找以下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (inOptions.isDate &amp;&amp; list.date != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    ret.date =  moment(list.date).format(config.date_format || <span class="string">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (inOptions.isDate &amp;&amp; list.date != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ret.date =  moment(list.date).format(config.date_format || <span class="string">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span>(ex) &#123;</span><br><span class="line">        ret.date =  moment(list.date._d).format(config.date_format || <span class="string">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述只是临时的解决方案，由于不好确定是哪一方的原因，也不想继续耗费太多精力在上面。</p>
</blockquote>
<p>我个人也不是特别了解原理，不过这的确解决了我们的问题。大概在这里：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/04/vTMVMR.png" alt=""></p>
<p>然后便解决了。感谢<code>anran758</code>大佬。</p>
<h3 id="5-5-评论系统"><a href="#5-5-评论系统" class="headerlink" title="5.5 评论系统"></a>5.5 评论系统</h3><p>在写到这里的时候我有点犹豫，因为原来用的<code>GiTalk</code>由于某些网络原因（见下）挂掉了，又没有决定换什么，所以迟了好久。最后我选中的是来必力<code>livere</code>。</p>
<blockquote>
<p><strong>《论我捣鼓<code>GiTalk</code>的简要过程》</strong></p>
<p>写到这里我本想去截图，结果一看启动不起来，没办法新建<code>issue</code>也没法登录<code>GitHub</code>账号。在排查了设置、网络的问题后，我发现有个致命的问题：<code>cors-anywhere.azm.workers.dev</code>被墙掉，然后<code>GiTalk</code>无法进行<code>GitHub oauth</code>，就不能用了。</p>
<p>我于是尝试自己搭<code>worker</code>，结果发现是所有<code>Cloudflare worker</code>的链接都被墙掉了，然后我就彻底没招了，就只好作罢。不过……真的吗？</p>
<p>后来我找到了<code>GiTalk</code>的仓库，里面有类似的<code>Issue</code>，甚至翻出了<code>CORS Anywhere</code>的仓库，找到了一个基于<code>Heroku</code>的备用<code>demo</code>链接。在一个<code>Issue</code>的<a href="https://github.com/Rob--W/cors-anywhere/issues/301#issuecomment-870990778">某条评论</a>、<a href="https://github.com/Rob--W/cors-anywhere/issues/301#issuecomment-1012060775">某条评论</a>中找到了一些备用链接。于是，就可以恢复正常了！</p>
<p><strong>另及：今年（2022）11月28号<code>Heroku</code>会关闭所有的免费服务，所以你看到类似<code>herokuapp.com</code>的链接都不用试了…</strong></p>
</blockquote>
<p>最后的话成品是这样：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/07/vbFLZD.png" alt=""></p>
<h4 id="5-5-1-来必力livere"><a href="#5-5-1-来必力livere" class="headerlink" title="5.5.1 来必力livere"></a>5.5.1 来必力<code>livere</code></h4><p>这个服务来自韩国，是韩语的页面，但是一旦应用到网站上就是中文的。到<a href="https://livere.com">https://livere.com</a>注册一个账号（你可能需要翻译），登录然后点击页首“安装”按钮，选择<code>city</code>版，填入链接什么的：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/07/vbFxJA.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/09/07/vbFbqO.png" alt=""></p>
<p>经过这一系列操作以后，我们会得到一串代码，在这里：<a href="http://livere.com/insight/myCode">http://livere.com/insight/myCode</a>：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/07/vbFvid.png" alt=""></p>
<p>复制<code>data-uid</code>里的内容，然后找到如下配置：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/07/vbFXIH.png" alt=""></p>
<p>直接把你的<code>data-uid</code>复制进去就好了。看一下渲染的效果：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/07/vbFOde.png" alt=""></p>
<h4 id="5-5-2-GiTalk"><a href="#5-5-2-GiTalk" class="headerlink" title="5.5.2 GiTalk"></a>5.5.2 <code>GiTalk</code></h4><p><code>GiTalk</code>的话是一个很“程序员”的评论系统。基于<code>GitHub</code>，支持<code>Markdown</code>，简单而优雅。不过，除了一些基本的配置以外，我们还需要更换<code>CORS Anywhere</code>的代理。我们先找到它的配置，看一下需要些什么：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vLjhLQ.png" alt=""></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># For more information: https://gitalk.github.io, https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="comment"># GitHub repo owner</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span> </span><br></pre></td></tr></table></figure>
<p>另外，这是人家的官网：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vLjWQS.png" alt=""></p>
<h5 id="5-5-2-1-获取GitHub-Application"><a href="#5-5-2-1-获取GitHub-Application" class="headerlink" title="5.5.2.1 获取GitHub Application"></a>5.5.2.1 获取<code>GitHub Application</code></h5><p>大部分配置都好填，可是这个<code>client_id</code>和<code>client_secret</code>怎么办？我们需要自己新建一个<code>GH App</code>。打开<a href="https://github.com/settings/developers">https://github.com/settings/developers</a>，并新建一个<code>Oauth APP</code>（右上角的按钮）：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vLj2z8.png" alt=""></p>
<p>之后需要输入应用名称，应用官网（<code>Homepage URL</code>和<code>Authorization callback URL</code>），这两个一定一定要一样的，并且得加上<code>https://</code>。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vLjfsg.png" alt=""></p>
<p>注册以后复制<code>Client ID</code>，新建<code>Client secret</code>，按红框里的按钮。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vLjgRf.png" alt=""></p>
<p>新建后务必立刻复制，否则就只能重新建了。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vLj5Zj.png" alt=""></p>
<p>然后我们写到配置的<code>client_id</code>和<code>client_secret</code>里即可。至于其他的配置的话：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># For more information: https://gitalk.github.io, https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="comment"># GitHub repo owner</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>
<p><code>enable</code>打开，<code>github_id</code>写上你的<code>GitHub</code>用户名，<code>repo</code>是你网站的仓库名（比如<code>guleixibian2009.github.io</code>），<code>admin_user</code>还是填自己的用户名。<code>distraction_free_mode</code>和<code>language</code>自己按喜好调即可。</p>
<h5 id="5-5-2-2-配置proxy"><a href="#5-5-2-2-配置proxy" class="headerlink" title="5.5.2.2 配置proxy"></a>5.5.2.2 配置<code>proxy</code></h5><p>设置是好了，可是在用之前我们还需要改<code>CORS Anywhere</code>的镜像。我们如何把<code>proxy</code>改掉呢？参阅<code>GiTalk</code>的<code>README</code>（见“致谢”，6），有一个<code>proxy</code>的选项。</p>
<p>我们找一下这个文件（<code>themes/next/layout/_third-party/comments/gitalk.swig</code>）：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vOEatO.png" alt=""></p>
<p>有这样一段代码。然后，把下面这段代码复制到里面去，如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">proxy       : <span class="string">&#x27;https://proxy.cors.sh/https://github.com/login/oauth/access_token&#x27;</span></span><br></pre></td></tr></table></figure>
<p>最后的效果就是：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">NexT.utils.loadComments(<span class="built_in">document</span>.querySelector(<span class="string">&#x27;#gitalk-container&#x27;</span>), <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  NexT.utils.getScript(<span class="string">&#x27;&#123;&#123; gitalk_js_uri &#125;&#125;&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">      <span class="attr">clientID</span>    : <span class="string">&#x27;&#123;&#123; theme.gitalk.client_id &#125;&#125;&#x27;</span>,</span><br><span class="line">      <span class="attr">clientSecret</span>: <span class="string">&#x27;&#123;&#123; theme.gitalk.client_secret &#125;&#125;&#x27;</span>,</span><br><span class="line">      <span class="attr">repo</span>        : <span class="string">&#x27;&#123;&#123; theme.gitalk.repo &#125;&#125;&#x27;</span>,</span><br><span class="line">      <span class="attr">owner</span>       : <span class="string">&#x27;&#123;&#123; theme.gitalk.github_id &#125;&#125;&#x27;</span>,</span><br><span class="line">      <span class="attr">admin</span>       : [<span class="string">&#x27;&#123;&#123; theme.gitalk.admin_user &#125;&#125;&#x27;</span>],</span><br><span class="line">      <span class="attr">id</span>          : <span class="string">&#x27;&#123;&#123; gitalk_md5(page.path) &#125;&#125;&#x27;</span>,</span><br><span class="line">      &#123;%- <span class="keyword">if</span> theme.gitalk.language == <span class="string">&#x27;&#x27;</span> %&#125;</span><br><span class="line">        <span class="attr">language</span>: <span class="built_in">window</span>.navigator.language || <span class="built_in">window</span>.navigator.userLanguage,</span><br><span class="line">      &#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">        <span class="attr">language</span>: <span class="string">&#x27;&#123;&#123; theme.gitalk.language &#125;&#125;&#x27;</span>,</span><br><span class="line">      &#123;%- endif %&#125;</span><br><span class="line">      <span class="attr">distractionFreeMode</span>: &#123;&#123; theme.gitalk.distraction_free_mode &#125;&#125;,</span><br><span class="line">      <span class="attr">proxy</span>       : <span class="string">&#x27;https://proxy.cors.sh/https://github.com/login/oauth/access_token&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    gitalk.render(<span class="string">&#x27;gitalk-container&#x27;</span>);</span><br><span class="line">  &#125;, <span class="built_in">window</span>.Gitalk);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>如果没看出来区别的话就直接复制替换即可。然后我们重新渲染，试一下：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vOEY0x.png" alt=""></p>
<p>不过如果需要尝试登录的话一定要部署之后才能测试…所以上线试一下登录：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vOEt76.png" alt=""></p>
<p>然后<code>GiTalk</code>会自动创建一个<code>Issue</code>。我们应该可以在仓库里找到这样一个<code>Issue</code>，标题就是文章名：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/10/vOEUAK.png" alt=""></p>
<p>如果一切正常的话，我们就配置成功了！</p>
<h3 id="5-6-鼠标点击特效"><a href="#5-6-鼠标点击特效" class="headerlink" title="5.6 鼠标点击特效"></a>5.6 鼠标点击特效</h3><p>当你点击页面时，你（之前是）可以看到一个彩色的爱心（的）。这个的话，先复制下面的代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX-<span class="number">5</span>,<span class="attr">y</span>:e.clientY-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>
<p>然后在<code>themes/next/source/js/src</code>这个文件夹（自己创建）中，新建<code>clicklove.js</code>，代码复制进去即可。我们有了代码，但如何引用呢？我们需要找到模板文件（<code>themes/next/layout/_layout.swig</code>），并复制如下代码到这个位置：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/src/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>粘贴到这里：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  &#123;%- if theme.pjax %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pjax&quot;</span>&gt;</span></span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">  &#123;% include &#x27;_third-party/math/index.swig&#x27; %&#125;</span><br><span class="line">  &#123;% include &#x27;_third-party/quicklink.swig&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;&#123;- next_inject(&#x27;bodyEnd&#x27;) &#125;&#125;</span><br><span class="line">  &#123;%- if theme.pjax %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/src/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后重新渲染试试：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vOyFds.png" alt=""></p>
<p>然后现在我用的烟花的话，原理类似，新建一个<code>fireworks.js</code>，里面复制：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">&#123; origin, speed, color, angle, context &#125;</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.origin = origin</span><br><span class="line">    <span class="built_in">this</span>.position = &#123; ...this.origin &#125;</span><br><span class="line">    <span class="built_in">this</span>.color = color</span><br><span class="line">    <span class="built_in">this</span>.speed = speed</span><br><span class="line">    <span class="built_in">this</span>.angle = angle</span><br><span class="line">    <span class="built_in">this</span>.context = context</span><br><span class="line">    <span class="built_in">this</span>.renderCount = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.color</span><br><span class="line">    <span class="built_in">this</span>.context.beginPath()</span><br><span class="line">    <span class="built_in">this</span>.context.arc(<span class="built_in">this</span>.position.x, <span class="built_in">this</span>.position.y, <span class="number">2</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">this</span>.context.fill()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">move</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.position.x = (<span class="built_in">Math</span>.sin(<span class="built_in">this</span>.angle) * <span class="built_in">this</span>.speed) + <span class="built_in">this</span>.position.x</span><br><span class="line">    <span class="built_in">this</span>.position.y = (<span class="built_in">Math</span>.cos(<span class="built_in">this</span>.angle) * <span class="built_in">this</span>.speed) + <span class="built_in">this</span>.position.y + (<span class="built_in">this</span>.renderCount * <span class="number">0.3</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderCount++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boom</span> </span>&#123;</span><br><span class="line">  <span class="title">constructor</span> (<span class="params">&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;</span>) &#123;</span><br><span class="line">    <span class="built_in">this</span>.origin = origin</span><br><span class="line">    <span class="built_in">this</span>.context = context</span><br><span class="line">    <span class="built_in">this</span>.circleCount = circleCount</span><br><span class="line">    <span class="built_in">this</span>.area = area</span><br><span class="line">    <span class="built_in">this</span>.stop = <span class="literal">false</span></span><br><span class="line">    <span class="built_in">this</span>.circles = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">randomArray</span>(<span class="params">range</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> length = range.length</span><br><span class="line">    <span class="keyword">const</span> randomIndex = <span class="built_in">Math</span>.floor(length * <span class="built_in">Math</span>.random())</span><br><span class="line">    <span class="keyword">return</span> range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">randomColor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> range = [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">randomRange</span>(<span class="params">start, end</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (end - start) * <span class="built_in">Math</span>.random() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">init</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.circleCount; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> circle = <span class="keyword">new</span> Circle(&#123;</span><br><span class="line">        <span class="attr">context</span>: <span class="built_in">this</span>.context,</span><br><span class="line">        <span class="attr">origin</span>: <span class="built_in">this</span>.origin,</span><br><span class="line">        <span class="attr">color</span>: <span class="built_in">this</span>.randomColor(),</span><br><span class="line">        <span class="attr">angle</span>: <span class="built_in">this</span>.randomRange(<span class="built_in">Math</span>.PI - <span class="number">1</span>, <span class="built_in">Math</span>.PI + <span class="number">1</span>),</span><br><span class="line">        <span class="attr">speed</span>: <span class="built_in">this</span>.randomRange(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="built_in">this</span>.circles.push(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">move</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.circles.forEach(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (circle.position.x &gt; <span class="built_in">this</span>.area.width || circle.position.y &gt; <span class="built_in">this</span>.area.height) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.circles.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.move()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.circles.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">this</span>.stop = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.circles.forEach(<span class="function"><span class="params">circle</span> =&gt;</span> circle.draw())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CursorSpecialEffects</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.computerCanvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderCanvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.computerContext = <span class="built_in">this</span>.computerCanvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderContext = <span class="built_in">this</span>.renderCanvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.globalWidth = <span class="built_in">window</span>.innerWidth</span><br><span class="line">    <span class="built_in">this</span>.globalHeight = <span class="built_in">window</span>.innerHeight</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.booms = []</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleMouseDown</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> boom = <span class="keyword">new</span> Boom(&#123;</span><br><span class="line">      <span class="attr">origin</span>: &#123; <span class="attr">x</span>: e.clientX, <span class="attr">y</span>: e.clientY &#125;,</span><br><span class="line">      <span class="attr">context</span>: <span class="built_in">this</span>.computerContext,</span><br><span class="line">      <span class="attr">area</span>: &#123;</span><br><span class="line">        <span class="attr">width</span>: <span class="built_in">this</span>.globalWidth,</span><br><span class="line">        <span class="attr">height</span>: <span class="built_in">this</span>.globalHeight</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.init()</span><br><span class="line">    <span class="built_in">this</span>.booms.push(boom)</span><br><span class="line">    <span class="built_in">this</span>.running || <span class="built_in">this</span>.run()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handlePageHide</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.booms = []</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">init</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> style = <span class="built_in">this</span>.renderCanvas.style</span><br><span class="line">    style.position = <span class="string">&#x27;fixed&#x27;</span></span><br><span class="line">    style.top = style.left = <span class="number">0</span></span><br><span class="line">    style.zIndex = <span class="string">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class="line">    style.pointerEvents = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">    style.width = <span class="built_in">this</span>.renderCanvas.width = <span class="built_in">this</span>.computerCanvas.width = <span class="built_in">this</span>.globalWidth</span><br><span class="line">    style.height = <span class="built_in">this</span>.renderCanvas.height = <span class="built_in">this</span>.computerCanvas.height = <span class="built_in">this</span>.globalHeight</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.body.append(<span class="built_in">this</span>.renderCanvas)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, <span class="built_in">this</span>.handleMouseDown.bind(<span class="built_in">this</span>))</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;pagehide&#x27;</span>, <span class="built_in">this</span>.handlePageHide.bind(<span class="built_in">this</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">run</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.booms.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requestAnimationFrame(<span class="built_in">this</span>.run.bind(<span class="built_in">this</span>))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.computerContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line">    <span class="built_in">this</span>.renderContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.booms.forEach(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (boom.stop) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.booms.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.move()</span><br><span class="line">      boom.draw()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.renderContext.drawImage(<span class="built_in">this</span>.computerCanvas, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> CursorSpecialEffects()</span><br><span class="line">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>
<p>然后把<code>_layout.swig</code>里改一下就好了。效果的话，点击一下试试？</p>
<h3 id="5-7-把猫…养在博客？"><a href="#5-7-把猫…养在博客？" class="headerlink" title="5.7 把猫…养在博客？"></a>5.7 把猫…养在博客？</h3><p>这一步也是很简单的啊。对对，我说的就是左下角那只白猫……</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO5tUS.png" alt=""></p>
<p>这个插件叫做<code>live2d</code>。官方地址的话，<a href="https://github.com/xiazeyu/live2d-widget-models/">https://github.com/xiazeyu/live2d-widget-models/</a>可以查到所有的<code>model</code>。这只猫的话，它叫<code>tororo</code>，虽然我也不知道为啥…我们需要先安装依赖：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-helper</span><span class="literal">-live2d</span> live2d<span class="literal">-widget</span><span class="literal">-model</span><span class="literal">-tororo</span></span><br></pre></td></tr></table></figure>
<p>但这样还不太行。我们需要加一段配置，加在<code>Hexo</code>的<code>_config.yml</code>里：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># live2d performance</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-tororo</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">280</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">560</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>我并没有了解过所有的参数，反正就是把<code>use</code>改成<code>live2d-widget-model-tororo</code>，同时改一下位置、长、宽即可。</p>
<p>嘿嘿，看起来这一段很短，对吧？其实我当时研究了很久，网上没有太好的教程，最后才发现要安装<code>hexo-helper-live2d</code>啊。</p>
<h3 id="5-8-AddThis-Utilities分享功能"><a href="#5-8-AddThis-Utilities分享功能" class="headerlink" title="5.8 AddThis Utilities分享功能"></a>5.8 <code>AddThis Utilities</code>分享功能</h3><p>虽然我这个博客还是没什么名气，可万一之后需要有一个分享功能，怎么办？在<code>Next</code>的配置中提到了<code>Addthis</code>分享。这个怎么实现呢？</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO7Ca6.png" alt=""></p>
<p>先到<code>addthis.com</code>注册一个账号（另及：加速<code>Google Recaptcha</code>的方法见之后的文章），然后照着这些截图来：</p>
<p>登录之后有这样一个页面，我们选择第一个，<code>Share Buttons</code>；</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO79Vx.png" alt=""></p>
<p>然后，选择<code>Floating</code>；</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO7Sq1.png" alt=""></p>
<p>之后我们开始自定义工具。先选择<code>Selected by you</code>，用<code>ADD MORE SERVICES</code>改分享方式；</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vOTzrR.png" alt=""></p>
<p>最后我选了这些，比如微信、QQ、生成二维码等等；</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO7PIK.png" alt=""></p>
<p>在第四个栏目里调整一下位置，和手机是否显示；</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO7kGD.png" alt=""></p>
<p>最后<code>Activate Tool</code>，获取代码；</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO7ARe.png" alt=""></p>
<p>不过我们不需要所有的代码，找一下代码里的<code>pubid</code>，应该是<code>ra-</code>打头，接着复制进配置文件里即可。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vO7FPO.png" alt=""></p>
<p>渲染看一下。</p>
<blockquote>
<p>另及：如果没有的话，检查一下是否浏览器屏蔽了“跟踪器”。</p>
<p>还有…我本来想继续写下去，写一个<code>Widgetpack</code>打分功能。可惜人家服务器有问题，功能暂时下线了，等恢复了我再加上吧。</p>
</blockquote>
<p>好耶！我们现在就把这8个功能配置完啦！接下来…我们来看一点更高级的东东！</p>
<hr>
<h2 id="6-更高级的功能"><a href="#6-更高级的功能" class="headerlink" title="6. 更高级的功能"></a>6. 更高级的功能</h2><p>这一章的话，主要讲一些“看不见”的东西，比如站点地图，<code>RSS</code>等等。</p>
<h3 id="6-1-RSS订阅"><a href="#6-1-RSS订阅" class="headerlink" title="6.1 RSS订阅"></a>6.1 <code>RSS</code>订阅</h3><p>一般博客都是提供<code>RSS Feed</code>来订阅的。之前我们提到过<code>RSS</code>，包括侧边栏链接、文章结尾的友链，等等。要生成的话我们只需要安装插件<code>hexo-generator-feed</code>，每次<code>hexo g</code>都会自动生成。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-generator</span><span class="literal">-feed</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure>
<p>不过，生成出来的文件在哪里呢？看一下…应该是<code>/atom.xml</code>。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXpMo4.png" alt=""></p>
<h3 id="6-2-站点地图sitemap"><a href="#6-2-站点地图sitemap" class="headerlink" title="6.2 站点地图sitemap"></a>6.2 站点地图<code>sitemap</code></h3><p>站点地图的话主要是为搜索引擎用的，这一小节算是给后文的一个铺垫。同样的，只需要安装插件<code>hexo-generator-sitemap</code>即可。这次生成出来的是<code>/sitemap.xml</code>。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXpueU.png" alt=""></p>
<h3 id="6-3-CDN与图床"><a href="#6-3-CDN与图床" class="headerlink" title="6.3 CDN与图床"></a>6.3 <code>CDN</code>与图床</h3><p>默认的话，<code>next</code>会使用<code>jsdelivr</code>作为默认的<code>CDN</code>，不过<code>cdn.jsdelivr.net</code>这个节点不是特别的稳定（被墙过），所以我个人是换到了<code>fastly</code>节点上。具体位置的话，在这里，至于改不改就看你自己了。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXplFJ.png" alt=""></p>
<p>同时如果你想要往文章里添加图片，那光靠自己的域名（也就是<code>GitHub</code>）肯定是不够的，我们一定会需要一个快速的、稳定的图床。我个人推荐是<code>imgse</code>路过图床，它这个是免费的，而且已经有10年历史，上传也非常方便。它支持<code>10MB</code>内的<code>JPG</code>和<code>PNG</code>，子节点是<code>ax1x.com</code>。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/12/vXoGPU.png" alt=""></p>
<h3 id="6-4-Bing-SEO"><a href="#6-4-Bing-SEO" class="headerlink" title="6.4 Bing SEO"></a>6.4 <code>Bing SEO</code></h3><p>搜索引擎优化确实是一件很重要的事情，最简单的是<code>Bing</code>。官网的话，<a href="https://www.bing.com/webmasters/about/">https://www.bing.com/webmasters/about/</a>，用<code>Microsoft</code>账户登录是最方便的（除非你有<code>FB</code>或者<code>Google</code>，不过这不太可能吧）。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXpKwF.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXpmLT.png" alt=""></p>
<h4 id="6-4-1-注册与验证"><a href="#6-4-1-注册与验证" class="headerlink" title="6.4.1 注册与验证"></a>6.4.1 注册与验证</h4><p>登录进来之后，我们输入网址，登记页面（页面布局可能和图片有些许区别）。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXpJQx.png" alt=""></p>
<p>登记过后会要求我们验证页面。三种方法中最简单的是<code>&lt;meta&gt;</code>标签，直接复制代码，然后加到<code>_layout.swig</code>的<code>&lt;head&gt;</code>里去就好了。重新渲染、部署，然后等待片刻、验证。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXpGS1.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXpYy6.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXp3WR.png" alt=""></p>
<p>这就代表验证成功了。</p>
<h4 id="6-4-2-提交网站地图"><a href="#6-4-2-提交网站地图" class="headerlink" title="6.4.2 提交网站地图"></a>6.4.2 提交网站地图</h4><p>点击右上角那个“提交站点地图”，并输入你刚生成的站点地图的网址，可以加速爬网。</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXp1Y9.png" alt=""></p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vXptOK.png" alt=""></p>
<p>然后…等待扫描…可能会需要一段时间。</p>
<p>这就代表扫描完了：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vX9CX6.png" alt=""></p>
<p>不过真正能搜到是需要2天时间的，先放一下我自己的博客的截图：</p>
<p><img data-src="https://s1.ax1x.com/2022/09/11/vX9inK.png" alt=""></p>
<p>当然这个<code>SEO</code>肯定是不止这么多的。相关的功能等着你去探索，包括<code>Microsoft Clarity</code>等等。</p>
<h3 id="6-5-模板文件与动态样式表"><a href="#6-5-模板文件与动态样式表" class="headerlink" title="6.5 模板文件与动态样式表"></a>6.5 模板文件与动态样式表</h3><p>最后这一小节不是具体的教你去“干什么”，而是具体“怎么干”。每个人对网站的外观跟行为逻辑有自己的看法，而自定义的终极方式就是修改底层。</p>
<p>这里有图片</p>
<p>在<code>Next</code>这个主题下，关于底层的两个文件夹，一个是<code>layout</code>，一个是<code>source</code>，具体见下：</p>
<h4 id="6-5-1-Mozilla-Nunjucks"><a href="#6-5-1-Mozilla-Nunjucks" class="headerlink" title="6.5.1 Mozilla Nunjucks"></a>6.5.1 <code>Mozilla Nunjucks</code></h4><p>在上网查之前我一直以为我们修改的什么<code>_layout.swig</code>啊都是用什么<code>swig</code>语言写的，但一搜其实并没有这个语言（有，但极其小众，且已为<code>unmaintained</code>状态）。直到我看到<code>renderer.js</code>里的代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> nunjucks = <span class="built_in">require</span>(<span class="string">&#x27;nunjucks&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// Return a compiled renderer.</span></span><br><span class="line">njkRenderer.compile = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> compiledTemplate = njkCompile(data);</span><br><span class="line">  <span class="comment">// Need a closure to keep the compiled template.</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> compiledTemplate.render(locals);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">hexo.extend.renderer.register(<span class="string">&#x27;njk&#x27;</span>, <span class="string">&#x27;html&#x27;</span>, njkRenderer);</span><br><span class="line">hexo.extend.renderer.register(<span class="string">&#x27;swig&#x27;</span>, <span class="string">&#x27;html&#x27;</span>, njkRenderer);</span><br></pre></td></tr></table></figure>
<p>才发现有<code>nunjucks</code>这种语言。它的语法可以在官网<a href="https://mozilla.github.io/nunjucks/">https://mozilla.github.io/nunjucks/</a>查到，据说和<code>jinja2</code>（基于<code>Python</code>的）一模一样，此外还支持自定义后缀什么的。这里讲一点特殊的变量，举些例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.pjax %&#125;</span><br><span class="line">    &lt;div id=&quot;pjax&quot;&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">  &#123;% include &#x27;_third-party/math/index.swig&#x27; %&#125;</span><br><span class="line">  &#123;% include &#x27;_third-party/quicklink.swig&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;&#123;- next_inject(&#x27;bodyEnd&#x27;) &#125;&#125;</span><br><span class="line">  &#123;%- if theme.pjax %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
<p>（来自<code>_layout.swig</code>）有一个<code>if</code>语句，后面跟的是<code>theme.pjax</code>。这个<code>theme</code>指的是<code>Next</code>主题的<code>_config.yml</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;site-author motion-element&quot; itemprop=&quot;author&quot; itemscope itemtype=&quot;http://schema.org/Person&quot;&gt;</span><br><span class="line">  &#123;%- if theme.avatar.url %&#125;</span><br><span class="line">    &lt;img class=&quot;site-author-image&quot; itemprop=&quot;image&quot; alt=&quot;&#123;&#123; author &#125;&#125;&quot;</span><br><span class="line">      src=&quot;&#123;&#123; url_for(theme.avatar.url) &#125;&#125;&quot;&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">  &lt;p class=&quot;site-author-name&quot; itemprop=&quot;name&quot;&gt;&#123;&#123; author &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;div class=&quot;site-description&quot; itemprop=&quot;description&quot;&gt;&#123;&#123; description &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>（来自<code>_partials/sidebar/site-overview.swig</code>）这里引用了一个变量<code>&#123;&#123; author &#125;&#125;</code>，像这种没有<code>theme.</code>的都来自<code>Hexo</code>的<code>_config.yml</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; page.title &#125;&#125; | &#123;&#123; title &#125;&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>
<p>（来自<code>post.swig</code>）这里引用的<code>&#123;&#123; page.title &#125;&#125;</code>有前缀<code>page.</code>，代表当前正渲染的页面（准确地说是<code>post</code>或<code>page</code>的<code>Front Matter</code>）。</p>
<h4 id="6-5-2-Stylus"><a href="#6-5-2-Stylus" class="headerlink" title="6.5.2 Stylus"></a>6.5.2 <code>Stylus</code></h4><p>这个就没太多好讲的了，因为我自己也没学过动态<code>CSS</code>。在<code>source/css</code>这个文件夹下所有<code>.styl</code>后缀的文件都是样式表。我们之前修改过一个书签的，还记得吗？</p>
<hr>
<h2 id="7-总结与回顾"><a href="#7-总结与回顾" class="headerlink" title="7. 总结与回顾"></a>7. 总结与回顾</h2><p>到这里，我们所有的教程已经写完了。在这“短暂的”几十分钟，几小时，甚至几天中，我们终于成功的做出来这样一个基于<code>Hexo</code>+<code>Next</code>的博客网站了。还记得那几条命令吧，我还是写在这里备用。</p>
<ul>
<li><p><code>hexo clean</code>清除本地缓存</p>
</li>
<li><p><code>hexo g</code>生成网页</p>
</li>
<li><p><code>hexo s</code>打开本地服务器</p>
</li>
<li><p><code>hexo d</code>部署到远程</p>
</li>
<li><p><code>hexo new</code>新建文章</p>
</li>
<li><p><code>hexo new page</code>新建页面</p>
</li>
</ul>
<p>接下来，就是你继续探索，大展身手的时刻了！嗯…48k字，我也是圆了长久以来的梦想。那么，我们就下次再见喽~</p>
<hr>
<h2 id="8-致谢"><a href="#8-致谢" class="headerlink" title="8. 致谢"></a>8. 致谢</h2><p>这里写一下我参考到的文章：</p>
<ol>
<li><p><a href="https://jerrymiao2019.github.io/2021/04/10/%E5%9F%BA%E4%BA%8EGithub-io-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">基于Github.io+Hexo搭建个人博客 | JerryMiao2019’s Blog</a></p>
</li>
<li><p><a href="https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/">解决hexo-renderer-kramed渲染冲突的部分问题 | 卡洛的核心舱</a></p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/30836436">Hexo+Next主题优化 | 知乎</a></p>
</li>
<li><p><a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502">Hexo博客优化之Next主题美化 | nightmare_dimple的博客 | CSDN博客</a></p>
</li>
<li><p><a href="https://anran758.github.io/blog/2020/09/27/hexo-issue/">Hexo 常见问题解决方案 | Anran758’s blog</a></p>
</li>
<li><p><a href="https://github.com/gitalk/gitalk#options">GitHub - gitalk/gitalk</a></p>
</li>
<li><p><a href="https://blog.csdn.net/qq_34146679/article/details/86065071">Hexo给NexT主题内添加页面点击出现爱心的效果_| 女王的禅师范的博客 | CSDN博客</a></p>
</li>
<li><p><a href="https://tding.top/archives/58cff12b.html">Hexo-NexT 添加打字特效、鼠标点击特效 | 小丁的个人博客</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/wangyuehan/p/9860371.html">Hexo+yilia添加helper-live2d插件宠物动画，很好玩的哦~~ | 王约翰 | 博客园</a></p>
</li>
<li><p><a href="https://blog.csdn.net/u010053344/article/details/50706790">Github 搭建 hexo （五）- 站点地图（sitemap.xml）|_Small蒙奇的博客 | CSDN博客</a></p>
</li>
</ol>
<p><strong>THE END</strong>感谢您的阅读~</p>
]]></content>
      <categories>
        <category>GitHub</category>
        <category>Pages</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Website</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
